{"version":3,"sources":["firebase.js","features/appSlice.js","components/Login/SignIn.jsx","components/Login/Register.jsx","components/Login/Login.jsx","components/Header/DropdownItem.jsx","components/Header/AutoSearchButton.jsx","components/Header/SearchMode.jsx","components/Header/SuggestionList.jsx","components/Header/DropdownSearchMenu.jsx","components/Header/DropdownMove.jsx","components/Header/Header.jsx","components/SideBar/SidebarOption.jsx","components/SideBar/SidebarCollapse.jsx","components/SideBar/SidebarHeader.jsx","components/SmallLoader.jsx","components/SideBar/SideBar.jsx","components/Chat/ActionButton.jsx","components/Chat/Reaction.jsx","components/Chat/Message.jsx","components/SecondaryView.jsx","components/Chat/ChatInput.jsx","components/Chat/DayBlockMessages.jsx","components/Chat/Chat.jsx","components/Loading.jsx","components/Edit Profile/InputSection.jsx","components/Edit Profile/EditProfile.jsx","components/Reiszer.jsx","components/Chat/ProfileModal.jsx","components/Edit Chat/InputField.jsx","components/Edit Chat/AboutTab.jsx","components/Edit Chat/Member.jsx","components/Edit Chat/MembersTab.jsx","components/Edit Chat/RemoveAlertModal.jsx","components/Edit Chat/SettingTab.jsx","components/Edit Chat/EditChat.jsx","components/Edit Chat/CreateChannel.jsx","components/InitAccount/InitAccount.jsx","components/MainSave/MainSave.jsx","App.js","reportWebVitals.js","app/store.js","index.js"],"names":["firebaseApp","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","storage","db","firestore","auth","provider","GoogleAuthProvider","appSlice","createSlice","name","initialState","roomId","user","docUserId","dataUpdated","userUid","directMessageUid","isShowingSecondaryWorkspace","directMessageRoomId","selectedUser","messageSend","localTime","roomDetails","directUser","isModalOpen","moves","savedItemsToggle","savedItemId","onSendingReaction","onReplyInThread","threadMessageId","threadMessageRoomId","threadMessageDirectId","onOpenProfile","onSave","onMainSave","reducers","setOnMainSave","state","action","payload","setOnSave","setOnOpenProfile","setThreadMessageRoomId","setThreadMessageDirectId","setThreadMessageId","setOnReplyInThread","setOnSendingReaction","setSavedItemId","enterRoom","saveUserInfo","reset","initState","isOnline","getDataState","enterDirectMessage","setUserProfileUid","showSecondaryWorkspace","setSelectedUser","sendMessage","setTime","setRoomDetails","setDirectUser","setIsModalOpen","setMoves","setSavedItemsToggle","actions","selectOnMainSave","app","selectOnSave","selectOnOpenProfile","selectThreadMessageRoomId","selectThreadMessageDirectId","selectThreadMessageId","selectOnReplyInThread","selectSavedItemsToggle","selectRoomId","selectUser","selectDocId","selectDataState","selectUserDirect","selectUserProfileUid","selectSecondaryWorkspaceStatus","selectDirectMessageRoom","selectChosenUser","selectLocalTime","selectRoomDetails","selectDirectUser","selectMoves","selectSavedItemId","selectOnSendingReaction","SignIn","props","className","method","type","onChange","onEmailChange","value","email","required","onPassWordChange","password","onClick","signInEmail","style","color","notification","Register","e","confirm","onConfirmChange","register","LogIn","useState","isSignIn","setIsSignIn","setPassword","setConfirm","setEmail","dispatch","useDispatch","useCollection","collection","users","usersLoading","useAuthState","setNotification","target","signIn","preventDefault","signInWithPopup","then","console","log","data","catch","error","alert","message","signInWithEmailAndPassword","a","userCred","userInf","displayName","emailVerified","uid","photoURL","userDb","docs","find","elem","userInfo","id","err","createUserWithEmailAndPassword","add","doc","DropdownItem","icon","filterText","useSelector","directRooms","loading","directRoom","uids","includes","filterName","slice","indexOf","backgroundImage","AutoSearchButton","SearchMode","mode","close","role","SuggestionList","actualText","channels","map","isPrivate","members","DropdownSearchMenu","onChannels","setOnChannels","onUsers","setOnUsers","setFilterTex","setActualText","useEffect","isChannel","test","isUser","paddingTop","disabled","padding","borderBottomColor","placeholder","document","querySelector","click","DropdownMove","directDetails","searchUid","Header","onViewing","setOnViewing","logOut","signOut","update","whatIDo","Dropdown","Toggle","variant","Menu","width","fontSize","SidebarOption","title","usersHaveReadRoom","savedItems","setToggle","usersHaveRead","addNewDirect","newMoves","filter","unshift","addMoves","tabIndex","usersHaveReadArr","push","src","alt","SidebarCollapse","isShowing","addIcon","options","option","SidebarHeader","height","SmallLoader","SideBar","channelList","usersList","ActionButton","emoji","onSelect","Reaction","count","senders","isSender","setIsSender","Message","React","forwardRef","ref","userName","userImage","timestamp","description","reactions","emojiMartPosition","emojiReact","reactToggle","savedBy","isSaved","inThread","moveToItem","messageRoomId","messageRoomDirectId","replyTo","inMainSave","onHover","setOnHover","roomSelectId","direcSelectId","directId","orderBy","undefined","subMessages","time","Date","toDate","date","getDate","month","getMonth","hours","getHours","minutes","getMinutes","onSendingUid","setOnSendingUid","setPosition","elementId","sendUserUid","isOpen","doNothing","setEmoji","replyInThread","saveItem","savedByArr","messageId","roomDirectId","FieldValue","serverTimestamp","i","splice","where","get","snapshot","itemId","forEach","delete","sendReaction","setTimeout","reactionsArr","findEmoji","findIndex","reaction","index","reactUser","userIndex","current","scrollIntoView","useRef","onThreadHover","setOnThreadHover","onMouseOver","onMouseOut","length","specUid","native","positionInfo","getBoundingClientRect","SecondaryView","resize","currentRoomId","currentDirectId","job","setEmojiReact","setReactToggle","position","rooms","roomMessages","directMessages","savedItemsInfo","itemsLoading","closeWorkspace","chatContainer","classList","remove","handleClickOutside","event","contains","addEventListener","removeEventListener","openEmojiMart","savedMessages","setSavedMessages","arr","messageRef","Promise","all","values","moveToMessage","info","savedMessageInfo","infoRoomId","infoRoomDirectId","useDocument","threadMessage","threadLoading","openProfile","replyRoom","threadName","right","window","innerWidth","top","y","zIndex","fontWeight","docc","label","subMessage","ChatInput","channelName","channelId","isDirect","chatRef","emojiRef","input","setInput","addEmoji","emojisOpen","emojisContainer","chatMessages","querySelectorAll","chatHeader","header","sidebarContainer","inputContainer","button","emojiTriggerButton","secondaryWorkspace","openList","closeList","innerHeight","positionInf","newInput","emojify","output","DayBlockMessages","messages","year","Chat","roomLoading","roomDirectMessages","directLoading","directTitle","directImg","directStatus","savedRef","behavior","blocksMessage","getFullYear","config","blocksMessageArr","Object","entries","join","setJoin","membersArr","windowWidth","chatWidth","isSecondaryWorkspaceOpen","collapse","setCollapse","sidebarToggler","reportWindowSize","offsetWidth","sidebarCollapse","closeSidebar","roomOwner","des","randomUid","Loading","isAnimate","setIsAnimate","animate","InputSection","inputElement","inputInit","imgUrl","setImgUrl","handleImgChange","file","files","storageRef","fileRef","child","put","getDownloadURL","selectedDoc","saveChange","toggle","htmlFor","EditProfile","userData","saveUserToRedux","Reiszer","onMouseDown","ProfileModal","updateTime","currentTime","setInterval","InputField","fieldLabel","hyphenized","AboutTab","roomName","roomDes","roomMembers","setName","setDes","changed","setChanged","setAlert","leave","setLeave","userDirect","class","hyphenizedContent","replace","content","Member","addUser","dropdownItem","loginUser","status","toLowerCase","MembersTab","membersList","setIsAdded","searchMemberInput","setSearchMemberInput","searchAddInput","setSearchAddInput","maxHeight","maxWidth","marginLeft","RemoveAlertModal","successLoaded","setSuccessLoaded","SettingTab","isChange","setIsChange","isDelete","setIsDelete","setNoti","defaultRoomId","EditChat","userDirectId","roomOwnerName","CreateChannel","channelLoading","checked","setChecked","added","setAdded","isExist","setIsExist","addChannel","InitAccount","setJob","imgURL","setImgURL","setLoading","notif","setNotif","inputRef","accept","MainSave","mainSaveItemInner","infor","App","userLoading","setRisze","setStatusToOnline","sideBarWidth","setSideBarWidth","profileWidth","setProfileWidth","handleToggle","isTabActive","setIsTabActive","onresize","prevX","clientX","mousemove","mouseup","body","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","persistConfig","key","stateReconciler","autoMergeLevel1","persistedAppReducer","persistReducer","appReducer","configureStore","reducer","persistor","persistStore","ReactDOM","render","StrictMode","store","getElementById"],"mappings":"gfAYQA,G,OAAcC,IAASC,cATR,CACrBC,OAAQ,0CACRC,WAAY,iCACZC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,kBAGTC,EAAUV,EAAYU,UACtBC,EAAKX,EAAYY,YACjBC,EAAOZ,IAASY,OAChBC,EAAW,IAAIb,IAASY,KAAKE,mB,8BCdxBC,EAAWC,YAAY,CAChCC,KAAM,MACNC,aAAa,CACTC,OAAQ,KACRC,KAAM,KACNC,UAAW,KACXC,YAAa,KACbC,QAAS,KACTC,iBAAkB,KAClBC,4BAA6B,KAC7BC,oBAAqB,KACrBC,aAAc,KACdC,aAAa,EACbC,UAAW,KACXC,YAAa,KACbC,WAAY,KACZC,YAAa,KACbC,MAAO,GACPC,kBAAkB,EAClBC,YAAa,KACbC,mBAAmB,EACnBC,gBAAiB,KACjBC,gBAAiB,KACjBC,oBAAqB,KACrBC,sBAAuB,KACvBC,cAAe,KACfC,OAAQ,KACRC,WAAY,MAEhBC,SAAU,CACNC,cAAe,SAACC,EAAOC,GACnBD,EAAMH,WAAaI,EAAOC,QAAQL,YAEtCM,UAAW,SAACH,EAAOC,GACfD,EAAMJ,OAASK,EAAOC,QAAQN,QAElCQ,iBAAkB,SAACJ,EAAOC,GACtBD,EAAML,cAAgBM,EAAOC,QAAQP,eAEzCU,uBAAwB,SAACL,EAAOC,GAC5BD,EAAMP,oBAAsBQ,EAAOC,QAAQT,qBAE/Ca,yBAA0B,SAACN,EAAOC,GAC9BD,EAAMN,sBAAwBO,EAAOC,QAAQR,uBAEjDa,mBAAoB,SAACP,EAAOC,GACxBD,EAAMR,gBAAkBS,EAAOC,QAAQV,iBAE3CgB,mBAAoB,SAACR,EAAOC,GACxBD,EAAMT,gBAAkBU,EAAOC,QAAQX,iBAE3CkB,qBAAsB,SAACT,EAAOC,GAC1BD,EAAMV,kBAAoBW,EAAOC,QAAQZ,mBAE7CoB,eAAgB,SAACV,EAAOC,GACpBD,EAAMX,YAAcY,EAAOC,QAAQb,aAEvCsB,UAAW,SAACX,EAAOC,GACfD,EAAM3B,OAAS4B,EAAOC,QAAQ7B,QAGlCuC,aAAc,SAACZ,EAAOC,GAClBD,EAAM1B,KAAO2B,EAAOC,QAAQ5B,MAGhCC,UAAW,SAACyB,EAAOC,GACfD,EAAMzB,UAAY0B,EAAOC,QAAQ3B,WAGrCsC,MAAO,SAACb,EAAOC,GACXD,EAAM3B,OAAS4B,EAAOC,QAAQY,UAC9Bd,EAAM1B,KAAO2B,EAAOC,QAAQY,UAC5Bd,EAAMxB,YAAcyB,EAAOC,QAAQY,UACnCd,EAAMvB,QAAUwB,EAAOC,QAAQY,UAC/Bd,EAAMtB,iBAAkBuB,EAAOC,QAAQY,UACvCd,EAAMrB,4BAA8BsB,EAAOC,QAAQY,UACnDd,EAAMzB,UAAY0B,EAAOC,QAAQY,UACjCd,EAAMpB,oBAAsBqB,EAAOC,QAAQY,UAC3Cd,EAAMnB,aAAe,KACrBmB,EAAMjB,UAAY,KAClBiB,EAAMhB,YAAc,KACpBgB,EAAMf,WAAa,KACnBe,EAAMd,YAAc,KACpBc,EAAMb,MAAQ,GACda,EAAMZ,kBAAmB,EACzBY,EAAMe,UAAW,GAGrBC,aAAc,SAAChB,EAAOC,GAClBD,EAAMxB,YAAcyB,EAAOC,QAAQ1B,aAEvCyC,mBAAoB,SAACjB,EAAOC,GACxBD,EAAMtB,iBAAmBuB,EAAOC,QAAQxB,iBACxCsB,EAAMpB,oBAAsBqB,EAAOC,QAAQtB,qBAE/CsC,kBAAkB,SAAClB,EAAOC,GACtBD,EAAMvB,QAAUwB,EAAOC,QAAQzB,SAEnC0C,uBAAuB,SAACnB,EAAOC,GAC3BD,EAAMrB,4BAA8BsB,EAAOC,QAAQvB,6BAEvDyC,gBAAiB,SAACpB,EAAOC,GACrBD,EAAMnB,aAAeoB,EAAOC,QAAQrB,cAExCwC,YAAa,SAACrB,EAAOC,GACjBD,EAAMlB,YAAcmB,EAAOC,QAAQpB,aAEvCwC,QAAS,SAACtB,EAAOC,GACbD,EAAMjB,UAAYkB,EAAOC,QAAQnB,WAErCwC,eAAgB,SAACvB,EAAOC,GACpBD,EAAMhB,YAAciB,EAAOC,QAAQlB,aAEvCwC,cAAe,SAACxB,EAAOC,GACnBD,EAAMf,WAAagB,EAAOC,QAAQjB,YAEtCwC,eAAgB,SAACzB,EAAOC,GACpBD,EAAMd,YAAce,EAAOC,QAAQhB,aAEvCwC,SAAU,SAAC1B,EAAOC,GACdD,EAAMb,MAAQc,EAAOC,QAAQf,OAEjCwC,oBAAqB,SAAC3B,EAAOC,GACzBD,EAAMZ,iBAAmBa,EAAOC,QAAQd,qBAK7C,EAA2ZnB,EAAS2D,QAA7Z7B,EAAP,EAAOA,cAAeI,EAAtB,EAAsBA,UAAWC,EAAjC,EAAiCA,iBAAiBC,EAAlD,EAAkDA,uBAAwBC,EAA1E,EAA0EA,yBAAyBC,EAAnG,EAAmGA,mBAAoBC,EAAvH,EAAuHA,mBAAmBC,EAA1I,EAA0IA,qBAAqBC,EAA/J,EAA+JA,eAAeiB,EAA9K,EAA8KA,oBAAoBD,EAAlM,EAAkMA,SAAUD,EAA5M,EAA4MA,eAAgBD,EAA5N,EAA4NA,cAAeD,EAA3O,EAA2OA,eAAgBD,EAA3P,EAA2PA,QAAsBF,GAAjR,EAAoQC,YAApQ,EAAiRD,iBAAiBD,EAAlS,EAAkSA,uBAAuBR,EAAzT,EAAyTA,UAAWC,EAApU,EAAoUA,aAAcrC,EAAlV,EAAkVA,UAAWsC,EAA7V,EAA6VA,MAAOG,EAApW,EAAoWA,aAAcC,EAAlX,EAAkXA,mBAAoBC,EAAtY,EAAsYA,kBAEhYW,EAAmB,SAAA7B,GAAK,OAAIA,EAAM8B,IAAIjC,YAEtCkC,EAAe,SAAA/B,GAAK,OAAIA,EAAM8B,IAAIlC,QAElCoC,EAAsB,SAAAhC,GAAK,OAAIA,EAAM8B,IAAInC,eAEzCsC,EAA4B,SAAAjC,GAAK,OAAIA,EAAM8B,IAAIrC,qBAE/CyC,EAA8B,SAAAlC,GAAK,OAAIA,EAAM8B,IAAIpC,uBAEjDyC,EAAwB,SAAAnC,GAAK,OAAIA,EAAM8B,IAAItC,iBAE3C4C,EAAwB,SAAApC,GAAK,OAAIA,EAAM8B,IAAIvC,iBAE3C8C,GAAyB,SAAArC,GAAK,OAAIA,EAAM8B,IAAI1C,kBAE5CkD,GAAe,SAAAtC,GAAK,OAAIA,EAAM8B,IAAIzD,QAElCkE,GAAa,SAAAvC,GAAK,OAAIA,EAAM8B,IAAIxD,MAEhCkE,GAAc,SAAAxC,GAAK,OAAIA,EAAM8B,IAAIvD,WAEjCkE,GAAkB,SAAAzC,GAAK,OAAIA,EAAM8B,IAAItD,aAErCkE,GAAmB,SAAA1C,GAAK,OAAIA,EAAM8B,IAAIpD,kBAEtCiE,GAAuB,SAAA3C,GAAK,OAAIA,EAAM8B,IAAIrD,SAE1CmE,GAAiC,SAAA5C,GAAK,OAAIA,EAAM8B,IAAInD,6BAEpDkE,GAA0B,SAAA7C,GAAK,OAAIA,EAAM8B,IAAIlD,qBAE7CkE,GAAmB,SAAA9C,GAAK,OAAIA,EAAM8B,IAAIjD,cAItCkE,GAAkB,SAAA/C,GAAK,OAAIA,EAAM8B,IAAI/C,WAErCiE,GAAoB,SAAAhD,GAAK,OAAIA,EAAM8B,IAAI9C,aAEvCiE,GAAmB,SAAAjD,GAAK,OAAIA,EAAM8B,IAAI7C,YAItCiE,GAAc,SAAAlD,GAAK,OAAIA,EAAM8B,IAAI3C,OAEjCgE,GAAoB,SAAAnD,GAAK,OAAIA,EAAM8B,IAAIzC,aAEvC+D,GAA0B,SAAApD,GAAK,OAAIA,EAAM8B,IAAIzC,aAC3CpB,KAAf,Q,QCnIeoF,OAhDf,SAAgBC,GAIZ,OACI,uBAAKC,UAAU,QAAf,UACI,sBAAKA,UAAU,8BAIf,uBAAKA,UAAU,0BAAf,UAEI,uBAAMA,UAAU,cAAhB,+BAGA,wBAAMC,OAAO,OAAb,UACI,uBAAKD,UAAU,cAAf,UAGQ,wBAAOpF,KAAK,cAAcsF,KAAK,OAAOF,UAAU,aAAaG,SAAUJ,EAAMK,cAAeC,MAAON,EAAMO,MAAOC,UAAQ,IACxH,uBAAMP,UAAU,aAAhB,sBAGR,uBAAKA,UAAU,cAAf,UAGQ,wBAAOpF,KAAK,iBAAiBsF,KAAK,WAAWF,UAAU,aAAaG,SAAUJ,EAAMS,iBAAkBH,MAAON,EAAMU,SAAWF,UAAQ,IACtI,uBAAMP,UAAU,aAAhB,yBAIR,yBAAQU,QAASX,EAAMY,YAAaT,KAAK,SAASF,UAAU,eAA5D,wBAEJ,sBAAKA,UAAU,cAAf,SAEI,+BAAG,uBAAMU,QAASX,EAAMW,QAArB,sBAAH,sCAIJ,uBAAKV,UAAU,eAAeY,MAAO,CAACC,MAAO,OAA7C,UACsB,KAArBd,EAAMe,cAAmB,gDAD1B,IACuDf,EAAMe,uBCW9DC,OAnDf,SAAkBhB,GACd,OACI,uBAAKC,UAAU,QAAf,UACI,sBAAKA,UAAU,8BAIf,uBAAKA,UAAU,0BAAf,UAEI,uBAAMA,UAAU,cAAhB,sBAGA,wBAAMC,OAAO,OAAb,UACI,uBAAKD,UAAU,cAAf,UAGQ,wBAAOpF,KAAK,cAAcsF,KAAK,OAAOF,UAAU,aAAaK,MAASN,EAAMO,MAAOH,SAAU,SAACa,GAAD,OAAOjB,EAAMK,cAAcY,IAAIT,UAAQ,IACpI,uBAAMP,UAAU,aAAhB,sBAGR,uBAAKA,UAAU,cAAf,UAGQ,wBAAOpF,KAAK,iBAAiBsF,KAAK,WAAWF,UAAU,aAAaK,MAASN,EAAMU,SAAWN,SAAU,SAACa,GAAD,OAAOjB,EAAMS,iBAAiBQ,IAAIT,UAAQ,IAClJ,uBAAMP,UAAU,aAAhB,yBAIR,uBAAKA,UAAU,cAAf,UAGQ,wBAAOpF,KAAK,iBAAiBsF,KAAK,WAAWF,UAAU,aAAaK,MAASN,EAAMkB,QAASd,SAAU,SAACa,GAAD,OAAOjB,EAAMmB,gBAAgBF,IAAIT,UAAQ,IAC/I,uBAAMP,UAAU,aAAhB,iCAIR,yBAAQE,KAAK,SAASQ,QAAWX,EAAMoB,SAAWnB,UAAU,eAA5D,wBAGJ,sBAAKA,UAAU,cAAf,SACI,+BAAG,uBAAMU,QAASX,EAAMW,QAArB,mBAAH,uCAEJ,uBAAKV,UAAU,eAAeY,MAAO,CAACC,MAAO,OAA7C,UAC0B,KAArBd,EAAMe,cAAmB,gDAD9B,IAC2Df,EAAMe,uBCwGlEM,OAxIf,SAAerB,GACb,MAAgCsB,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOZ,EAAP,KAAiBe,EAAjB,KACA,EAA8BH,mBAAS,IAAvC,mBAAOJ,EAAP,KAAgBQ,EAAhB,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOf,EAAP,KAAcoB,EAAd,KACMC,EAAWC,cACjB,EAA8BC,YAAcxH,EAAGyH,WAAW,UAA1D,mBAAOC,EAAP,KAAcC,EAAd,KAEA,GADaC,YAAa1H,GACc8G,mBAAS,KAAjD,mBAAOP,EAAP,KAAqBoB,EAArB,KAYA,SAAS1B,EAAiBQ,GACxBQ,EAAYR,EAAEmB,OAAO9B,OAZRhG,EAAGyH,WAAW,SAmB7B,IA2EM1B,EAAgB,SAACY,GACrBU,EAASV,EAAEmB,OAAO9B,QAGpB,OAAIiB,EAEA,eAAC,GAAD,CACEZ,QApGN,WACEa,GAAY,GACZW,EAAgB,KAmGZE,OAnFS,SAACpB,GACdA,EAAEqB,iBACF9H,EACG+H,gBAAgB9H,GAChB+H,MAAK,SAACxH,GAAD,OAAUyH,QAAQC,IAAI1H,EAAK2H,WAChCC,OAAM,SAACC,GAAD,OAAWC,MAAMD,EAAME,aA+E5BrC,SAAUA,EACVH,MAAOA,EACPE,iBAAkBA,EAClBJ,cAAeA,EACfO,YAhDe,SAACK,GACpBA,EAAEqB,iBACF9H,EACGwI,2BAA2BzC,EAAOG,GAClC8B,KAFH,+BAAAS,EAAA,MAEQ,WAAOC,GAAP,qBAAAD,EAAA,sDACEE,EAAU,CACdC,YAAaF,EAASlI,KAAKoI,YAC3B7C,MAAO2C,EAASlI,KAAKuF,MACrB8C,cAAeH,EAASlI,KAAKqI,cAC7BC,IAAKJ,EAASlI,KAAKsI,IACnBC,SAAUL,EAASlI,KAAKuI,SACxB9F,UAAU,GAIZgF,QAAQC,IAAIT,EAAcD,IACrBC,GAAgBD,IACnBwB,EAAM,OAAGxB,QAAH,IAAGA,OAAH,EAAGA,EAAOyB,KAAKC,MAAK,SAACC,GAAD,OAAUA,EAAKhB,OAAOW,MAAQH,EAAQG,OAChEb,QAAQC,IAAI,SAAUc,EAAOb,SACzBiB,EAAWJ,EAAOb,QACblF,UAAW,EACpBgF,QAAQC,IAAIkB,GACZhC,EAAStE,EAAa,CAAEtC,KAAM4I,KAC9BhC,EACE3G,EAAU,CACRA,UAAS,UAAEuI,SAAF,aAAE,EAAQK,OArBrB,2CAFR,uDA4BGjB,OAAM,SAACkB,GACN3B,EAAgB2B,EAAIf,aAkBpBhC,aAAgBA,IAKlB,eAAC,GAAD,CACEJ,QA5GN,WACEa,GAAY,GACZW,EAAgB,KA2GZzB,SAAUA,EACVQ,QAASA,EACTX,MAAOA,EACPE,iBAAkBA,EAClBU,gBAxGN,SAAyBF,GACvBS,EAAWT,EAAEmB,OAAO9B,QAwGhBD,cAAeA,EACfe,SA/FiB,SAACH,GACtBA,EAAEqB,iBACF5B,IAAaQ,EACTiB,EAAgB,wCAChB3H,EACGuJ,+BAA+BxD,EAAOG,GACtC8B,MAAK,SAACU,GACLT,QAAQC,IAAIQ,EAASlI,MACrB,IAAMmI,EAAU,CACdC,YAAaF,EAASlI,KAAKoI,YAC3B7C,MAAO2C,EAASlI,KAAKuF,MACrB8C,cAAeH,EAASlI,KAAKqI,cAC7BC,IAAKJ,EAASlI,KAAKsI,IACnBC,SAAUL,EAASlI,KAAKuI,SACxB9F,UAAU,GAGZmE,EAAStE,EAAa,CAAEtC,KAAMmI,KAC9B7I,EAAGyH,WAAW,SACXiC,IAAIb,GACJX,MAAK,SAACyB,GAAD,OACJrC,EACE3G,EAAU,CACRA,UAAWgJ,EAAIJ,YAKxBjB,OAAM,SAACkB,GACN3B,EAAgB2B,EAAIf,aAmExBhC,aAAgBA,K,iHCxDTmD,OA7Ef,YAAsE,IAA9CC,EAA6C,EAA7CA,KAAMtJ,EAAuC,EAAvCA,KAAM0I,EAAiC,EAAjCA,SAAUM,EAAuB,EAAvBA,GAAIP,EAAmB,EAAnBA,IAAKc,EAAc,EAAdA,WAC/CxC,EAAWC,cACX7G,EAAOqJ,YAAYpF,IACzB,EAA+B6C,YAAcxH,EAAGyH,WAAW,gBAA3D,mBAAOuC,EAAP,KAAoBC,EAApB,KACMpJ,EAAO,OAAGH,QAAH,IAAGA,OAAH,EAAGA,EAAMsI,IAChBkB,EAAU,OAAGF,QAAH,IAAGA,OAAH,EAAGA,EAAab,KAAKC,MAAK,SAACO,GACzC,OAAIX,IAAQnI,EAER8I,EAAItB,OAAO8B,KAAK,KAAOR,EAAItB,OAAO8B,KAAK,IACvCR,EAAItB,OAAO8B,KAAKC,SAASvJ,GAEtB8I,EAAItB,OAAO8B,KAAKC,SAASvJ,IAAY8I,EAAItB,OAAO8B,KAAKC,SAASpB,MA2CjEqB,EAAcpB,EAAiCa,EAAWQ,MAAM,GAAvCR,EAAWQ,MAAM,GAChD,OAAkC,IAA1B,OAAJ/J,QAAI,IAAJA,OAAA,EAAAA,EAAMgK,QAAQF,IAEd,sBAAK1E,UAAU,6BAAf,SACE,sBACEA,UAAU,oCACVU,QAAU4C,EA/BE,WAClB3B,EACEvE,EAAU,CACRtC,OAAQ,QAIPyJ,GAAyB,GAAXD,IACjBjK,EAAGyH,WAAW,eAAeiC,IAAI,CAC/BS,KAAM,CAACtJ,EAASmI,KAElBb,QAAQC,IAAI,YAGd,OAAI8B,QAAJ,IAAIA,OAAJ,EAAIA,EAAYX,MACdjC,EACEjE,EAAmB,CACjBvC,iBAAkBkI,EAClBhI,oBAAmB,OAAEkJ,QAAF,IAAEA,OAAF,EAAEA,EAAYX,MAGrCjC,EAAS9D,EAAgB,CAAEvC,aAAc,UApCvB,WAChBsI,IACFjC,EACEjE,EAAmB,CACjBvC,iBAAkB,QAGtBwG,EACEvE,EAAU,CACRtC,OAAQ8I,OAmCV,SAIE,uBAAK5D,UAAU,qCAAf,UACE,sBACEY,MAAO0C,EAAW,CAAEuB,gBAAgB,OAAD,OAASvB,EAAT,MAAyB,GAC5DtD,UAAU,kBAFZ,SAIGkE,GAAc,KAEjB,sBAAKlE,UAAU,kBAAf,SAAkCpF,WAKhC,I,wCCrECkK,OAdf,YAAmD,IAAvBZ,EAAsB,EAAtBA,KAAMtJ,EAAgB,EAAhBA,KAAM8B,EAAU,EAAVA,OACtC,OACE,sBAAKsD,UAAU,qBAAf,SACE,0BACEU,QAAShE,EACTsD,UAAU,uDAFZ,UAIGkE,EACD,uBAAMlE,UAAU,4CAAhB,SAA6DpF,U,oBCMtDmK,OAdf,YAAoC,IAAfC,EAAc,EAAdA,KAAMC,EAAQ,EAARA,MACvB,OACI,uBAAKjF,UAAU,uBAAf,UACI,uBAAMA,UAAU,6BAAhB,SACKgF,IAEL,sBAAKhF,UAAU,qCAAqCU,QAASuE,EAAOC,KAAK,SAAzE,SACA,eAAC,KAAD,U,oBCqDGC,OAvDf,YAA2D,IAAjCH,EAAgC,EAAhCA,KAAMb,EAA0B,EAA1BA,WAAYiB,EAAc,EAAdA,WAC1C,EAAmCvD,YAAcxH,EAAGyH,WAAW,SAA/D,mBAAOuD,EAAP,KACA,GADA,UACgBxD,YAAcxH,EAAGyH,WAAW,WAArCC,EAAP,oBACMhH,EAAOqJ,YAAYpF,IACnBqE,EAAG,OAAGtI,QAAH,IAAGA,OAAH,EAAGA,EAAMsI,IAElB,OACE,uBAAKrD,UAAU,4BAAf,UACE,uBAAKA,UAAU,4BAAf,UACY,aAATgF,GAAuB,oDACd,UAATA,GAAoB,oDAEb,aAATA,GACC,4CACGK,QADH,IACGA,OADH,EACGA,EAAU7B,KAAK8B,KAAI,SAACtB,GACnB,IAAIuB,EAAYvB,EAAItB,OAAO6C,UACvBC,EAAUxB,EAAItB,OAAO8C,QACzB,IAAY,OAAPA,QAAO,IAAPA,OAAA,EAAAA,EAASf,SAASpB,KAAQkC,IAAeA,EAC5C,OACE,eAAC,GAAD,CACE3K,KAAMoJ,EAAItB,OAAO9H,KACjBsJ,KAAMqB,EAAY,eAAC,KAAD,IAAsB,IACxC3B,GAAII,EAAIJ,GACRO,WAAYA,EAAaiB,SAM3B,UAATJ,GACC,4CACGjD,QADH,IACGA,OADH,EACGA,EAAOyB,KAAK8B,KAAI,SAACtB,GAChB,OACE,eAAC,GAAD,CACEpJ,KACEoJ,EAAItB,OAAOS,YACPa,EAAItB,OAAOS,YACXa,EAAItB,OAAOpC,MAEjBgD,SACEU,EAAItB,OAAOY,SACPU,EAAItB,OAAOY,SACX,qBAEND,IAAKW,EAAItB,OAAOW,IAChBc,WAAYA,EAAaiB,aCgE1BK,OAtGf,WAEE,MAAoCpE,oBAAS,GAA7C,mBAAOqE,EAAP,KAAmBC,EAAnB,KACA,EAA8BtE,oBAAS,GAAvC,mBAAOuE,EAAP,KAAgBC,EAAhB,KACA,EAAmCxE,mBAAS,IAA5C,mBAAO8C,EAAP,KAAmB2B,EAAnB,KACA,EAAoCzE,mBAAS,IAA7C,mBAAO+D,EAAP,KAAmBW,EAAnB,KAYAC,qBAAU,WACR,IAAIC,EAAY,YAAYC,KAAK/B,EAAaiB,GAC1Ce,EAAS,SAASD,KAAK/B,EAAaiB,GAOxC,OANIa,GACFN,GAAc,GAEZQ,GACFN,GAAW,GAEN,WACLA,GAAW,GACXF,GAAc,MAEf,CAACxB,IACJ,IAAMpJ,EAAOqJ,YAAYpF,IAUzB,OATS,OAAGjE,QAAH,IAAGA,KAAMsI,IAUhB,uBACErD,UAAU,gBACVY,MAAO,CAAEwF,WAAY,GACrB,kBAAgB,2BAHlB,UAKE,uBAAKpG,UAAU,aAAaqG,UAAQ,EAACzF,MAAO,CAAE0F,QAAS,KAAvD,UACE,uBAAKtG,UAAU,kCAAf,UACE,uBAAKA,UAAU,iCAAf,UACkB,KAAfmE,EACC,eAAC,KAAD,CAAYnE,UAAU,gBAEtB,eAAC,GAAD,CACEiF,MApBI,WAChBa,EAAa,KAoBDd,KAAMY,EAAU,QAAUF,EAAa,WAAa,KAGxD,wBACErF,MAAO+E,EACPjF,SAtDmB,SAACa,GAC9B+E,EAAc/E,EAAEmB,OAAO9B,QAsDbH,KAAK,OACLF,UAAU,iBACVY,MAAO,CAAE2F,kBAAmB,QAC5BC,YAAY,iDAGhB,sBAAKtB,KAAK,SAASlF,UAAU,yBAAyBU,QA7B1C,WAClB+F,SAASC,cAAc,6BAA6BC,SA4B9C,SACI,eAAC,KAAD,UAGJjB,IAAeE,GACf,uBAAK5F,UAAU,kBAAf,UACE,sBAAKA,UAAU,4BAAf,gCACA,uBAAKA,UAAU,eAAf,UACE,eAAC,GAAD,CACEkE,KAAM,eAAC,KAAD,IACNxH,OApEM,WAClBoJ,EAAa,cAoEDlL,KAAK,aAEP,eAAC,GAAD,CACEsJ,KAAM,eAAC,KAAD,IACNxH,OArEG,WACfoJ,EAAa,WAqEDlL,KAAK,iBAKZ8K,GACC,eAAC,GAAD,CAAgBvB,WAAYA,EAAYiB,WAAYA,EAAYJ,KAAO,aAExEY,GACC,eAAC,GAAD,CAAgBzB,WAAYA,EAAYiB,WAAYA,EAAYJ,KAAO,aAG3E,sBAAKhF,UAAU,iBAAf,SACE,uECjCO4G,OAnEf,YAA+B,IAAD,cAANhD,EAAM,EAANA,GACtBpB,QAAQC,IAAImB,GACZ,MAAsB/B,YAAc+B,GAAMvJ,EAAGyH,WAAW,QAAQkC,IAAIJ,IAA7DnI,EAAP,oBACA,EAAwBoG,YACtB+B,GAAMvJ,EAAGyH,WAAW,eAAekC,IAAIJ,IADlCiD,EAAP,oBAIMjM,EAAI,OAAGa,QAAH,IAAGA,GAAH,UAAGA,EAAaiH,cAAhB,aAAG,EAAqB9H,KAC5BsI,EAAUkB,YAAYpF,IACxBwF,EAAI,OAAGqC,QAAH,IAAGA,GAAH,UAAGA,EAAenE,cAAlB,aAAG,EAAuB8B,KAE9B9I,EAAU,OAAGmL,QAAH,IAAGA,GAAH,UAAGA,EAAenE,cAAlB,aAAG,EAAuBX,MAAM0B,MAAK,SAAC1I,GAClD,OAAOA,EAAKsI,MAAQH,EAAQG,OAE1BmB,GAAQA,EAAK,KAAOA,EAAK,KAAI9I,EAAU,OAAGmL,QAAH,IAAGA,GAAH,UAAGA,EAAenE,cAAlB,aAAG,EAAuBX,MAAM,IAC3ES,QAAQC,IAAI/G,GACZ,IAAM4H,GAAqB,QAAV,EAAA5H,SAAA,eAAY4H,UAAZ,UACb5H,SADa,aACb,EAAY4H,SACZ,qBAEE3B,EAAWC,cA8BjB,OACE,sBAAK5B,UAAU,aAAakF,KAAK,SAASxE,QA9BpB,WACtB,GAAK8D,GAYE,GAAIqC,EAAe,CACxBlF,EACEvE,EAAU,CACRtC,OAAQ,QAGZ,IAAIgM,EAAYtC,EAAKf,MAAK,SAACJ,GAAD,OAASA,GAAOH,EAAQG,OAClD1B,EACEjE,EAAmB,CACjBrC,oBAAqBuI,EACrBzI,iBAAkB2L,WArBtBnF,EACEjE,EAAmB,CACjBvC,iBAAkB,KAClBE,oBAAqB,QAGzBsG,EACEvE,EAAU,CACRtC,OAAQ8I,KAiBd6C,SAASC,cAAc,oBAAoBC,SAG3C,SACE,uBAAK3G,UAAU,oBAAf,UACE,sBACEA,UAAU,eACVY,MAAO4D,EAAO,CAAEK,gBAAgB,OAAD,OAASvB,EAAT,MAAyB,GAF1D,SAIGkB,EAAO,GAAK,MAEf,uBAAMxE,UAAU,aAAhB,SACGwE,EAAI,UAAG9I,SAAH,aAAG,EAAYyH,YAAcvI,UCyK7BmM,OArNf,WACE,IAAM7D,EAAUkB,YAAYpF,IAC5B,EAAyB6C,YAAcxH,EAAGyH,WAAW,UAArD,mBAAOC,EAAP,KACMhH,GADN,KACU,OAAGgH,QAAH,IAAGA,OAAH,EAAGA,EAAOyB,KAAKC,MAAK,SAACC,GAAD,OAAUA,EAAKhB,OAAOW,OAAZ,OAAoBH,QAApB,IAAoBA,OAApB,EAAoBA,EAASG,SACrE,EAAkChC,oBAAS,GAA3C,mBAAO2F,EAAP,KAAkBC,EAAlB,KACMtF,EAAWC,cACXsF,EAAM,uCAAG,sBAAAlE,EAAA,sEACPzI,EACH4M,UACA5E,MAAK,WACJlI,EAAGyH,WAAW,SAASkC,IAAvB,OAA2BjJ,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAM6I,IAAIwD,OAAO,CAC1C5J,UAAU,OAGbmF,OAAM,SAACC,GAAD,OAAWC,MAAMD,EAAME,YARnB,OASbnB,EACErE,EAAM,CACJC,UAAW,QAXF,2CAAH,qDAgBN+C,EAAK,OAAGvF,QAAH,IAAGA,OAAH,EAAGA,EAAM2H,OAAOpC,MACrB6C,EAAW,OAAGpI,QAAH,IAAGA,OAAH,EAAGA,EAAM2H,OAAOS,YAC3BG,EAAQ,OAAGvI,QAAH,IAAGA,OAAH,EAAGA,EAAM2H,OAAOY,SAqC9B0C,qBAAU,WAeR,OAdIgB,GACFrF,EACE9D,EAAgB,CACdvC,aAAc,CACZ6H,YAAW,OAAEpI,QAAF,IAAEA,OAAF,EAAEA,EAAM2H,OAAOS,YAC1B7C,MAAK,OAAEvF,QAAF,IAAEA,OAAF,EAAEA,EAAM2H,OAAOpC,MACpB+C,IAAG,OAAEH,QAAF,IAAEA,OAAF,EAAEA,EAASG,IACdC,SAAUA,EACV9F,SAAQ,OAAE0F,QAAF,IAAEA,OAAF,EAAEA,EAAS1F,SACnB6J,QAAO,OAAEtM,QAAF,IAAEA,OAAF,EAAEA,EAAM2H,OAAO2E,YAKvB,WACLJ,GAAa,MAEd,CAACD,IAGJ,IAAMpL,EAAQwI,YAAYzE,IAC1B,OACE,uBAAKK,UAAU,mBAAf,UAEE,sBAAKA,UAAU,eAAf,SACE,gBAACsH,GAAA,EAAD,CAAUtH,UAAU,4BAApB,UACE,eAACsH,GAAA,EAASC,OAAV,CACEvH,UAAU,oCACV4D,GAAG,kBACH4D,QAAQ,UAHV,SAKE,eAAC,KAAD,CAAgBxH,UAAU,uBAE5B,gBAACsH,GAAA,EAASG,KAAV,CACEzH,UAAU,gBACV,kBAAgB,kBAChBY,MAAO,CAAE8G,MAAO,KAHlB,UAKE,sBAAK,cAAY,OAAO1H,UAAU,sBAAlC,oBALF,OAQGpE,QARH,IAQGA,OARH,EAQGA,EAAO0J,KAAI,SAAC1B,GACX,OAAO,eAAC,GAAD,CAAuBA,GAAIA,GAARA,cAOlC,uBAAK5D,UAAU,0BAAf,UACE,uBACEA,UAAU,wBACV4D,GAAG,2BACHsB,KAAK,SACL,iBAAe,WACf,gBAAc,QACd,qBAAmB,UANrB,UAQE,eAAC,KAAD,IAEA,oDAGF,eAAC,GAAD,OAIF,uBAAKlF,UAAU,gBAAf,UACE,gBAACsH,GAAA,EAAD,CAAUtH,UAAU,4BAApB,UACE,eAACsH,GAAA,EAASC,OAAV,CACEvH,UAAU,oCACV4D,GAAG,kBACH4D,QAAQ,UAHV,SAKE,eAAC,KAAD,MAEF,eAACF,GAAA,EAASG,KAAV,CACEzH,UAAU,gBACV,kBAAgB,kBAFlB,SAIE,sBAAK,cAAY,OAAOA,UAAU,sBAAlC,8DAKJ,sBAAKA,UAAU,iBAAf,SACE,gBAACsH,GAAA,EAAD,CAAUtH,UAAU,yBAApB,UACE,eAACsH,GAAA,EAASC,OAAV,CACEvH,UAAU,oCACV4D,GAAG,kBACH4D,QAAQ,UAHV,SAKE,sBACExH,UAAU,cACVY,MAAO,CACLiE,gBAAgB,OAAD,OACbvB,GAAsB,qBADT,UAMrB,gBAACgE,GAAA,EAASG,KAAV,CACEzH,UAAU,gBACV,kBAAgB,kBAFlB,UAIE,uBAAKA,UAAU,gCAAf,UACE,sBACEA,UAAU,0BACVY,MAAO,CACLiE,gBAAgB,OAAD,OACbvB,GAAsB,qBADT,QAKnB,uBAAKtD,UAAU,2BAAf,UACE,sBAAKA,UAAU,wBAAf,SACGmD,GAA4B7C,IAE/B,wBAAMN,UAAU,0BAAhB,UACE,eAAC,KAAD,CAAuBY,MAAO,CAAE+G,SAAU,WAD5C,kBAMJ,sBAAK3H,UAAU,oBAAf,SACE,qBAAIA,UAAU,8BAEhB,sBACEA,UAAU,gBACV,iBAAe,QACf,iBAAe,eAHjB,0BAOA,sBAAKA,UAAU,gBAAgBU,QA1KvB,WAClBuG,GAAa,GACbtF,EACEhE,EAAkB,CAChBzC,QAAO,OAAEgI,QAAF,IAAEA,OAAF,EAAEA,EAASG,OAGtB1B,EACE/D,EAAuB,CACrBxC,6BAA6B,KAGjCuG,EACE/D,EAAuB,CACrBxC,6BAA6B,KAIjCuG,EACE1E,EAAmB,CACjBjB,gBAAiB,QAGrB2F,EACE/E,EAAU,CACRP,OAAQ,QAGZsF,EACE9E,EAAiB,CACfT,eAAe,MA4IT,0BAGA,sBAAK4D,UAAU,oBAAf,SACE,qBAAIA,UAAU,8BAEhB,sBAAKA,UAAU,gBAAgBU,QAASwG,EAAxC,qC,6BCmBCU,OA7Nf,YAaI,IAZF1D,EAYC,EAZDA,KACA2D,EAWC,EAXDA,MACAvE,EAUC,EAVDA,SACAD,EASC,EATDA,IACAO,EAQC,EARDA,GACAtD,EAOC,EAPDA,MACA9C,EAMC,EANDA,SACA2I,EAKC,EALDA,OACA2B,EAIC,EAJDA,kBACAvC,EAGC,EAHDA,UACAC,EAEC,EAFDA,QACAuC,EACC,EADDA,WAEMpG,EAAWC,cAEXzG,EAAmBiJ,YAAYjF,IAC/B9D,EAAsB+I,YAAY9E,IAClCvE,EAAOqJ,YAAYpF,IACnB9D,EAAO,OAAGH,QAAH,IAAGA,OAAH,EAAGA,EAAMsI,IACtB,EAA+BxB,YAAcxH,EAAGyH,WAAW,gBAA3D,mBAAOuC,EAAP,KAAoBC,EAApB,KACA,EAAgBzC,YAAcxH,EAAGyH,WAAW,UAArCC,EAAP,oBACA,EAA4BV,oBAAS,GAArC,mBAAe2G,GAAf,WACMzD,EAAU,OAAGF,QAAH,IAAGA,OAAH,EAAGA,EAAab,KAAKC,MAAK,SAACO,GACzC,OAAIX,IAAQnI,EAER8I,EAAItB,OAAO8B,KAAK,KAAOR,EAAItB,OAAO8B,KAAK,IACvCR,EAAItB,OAAO8B,KAAKC,SAASvJ,GAEtB8I,EAAItB,OAAO8B,KAAKC,SAASvJ,IAAY8I,EAAItB,OAAO8B,KAAKC,SAASpB,MAGjE4E,EAAa,OAAG1D,QAAH,IAAGA,OAAH,EAAGA,EAAY7B,OAAOuF,cACnCC,EAAY,uCAAG,sBAAAlF,EAAA,yDACduB,IAAclB,IAAOnI,GAAYoJ,IAAWvC,EAD9B,gCAEX1H,EACHyH,WAAW,eACXiC,IAAI,CACHS,KAAM,CAACtJ,EAASmI,KAEjBd,MAAK,SAACyB,GAAS,IAAD,IACb3J,EAAGyH,WAAW,eACXkC,IAAIA,EAAIJ,IACRwD,OAAO,CACNrF,MAAO,QACLA,QADK,IACLA,GADK,UACLA,EAAOyB,KAAKC,MAAK,SAACO,GAAD,OAASA,EAAItB,OAAOW,MAAQnI,YADxC,aACL,EAAuDwH,OADlD,OAELX,QAFK,IAELA,GAFK,UAELA,EAAOyB,KAAKC,MAAK,SAACO,GAAD,OAASA,EAAItB,OAAOW,MAAQA,YAFxC,aAEL,EAAmDX,aAb5C,OAiBjBF,QAAQC,IAAI,UAjBK,2CAAH,qDA6ElBuD,qBAAU,WAER,OADAkC,IACO,WACLF,GAAU,MAEX,CAAC7M,EAAkBE,EAAqBiJ,IAE3C,IAEMxJ,EAASsJ,YAAYrF,IAEvBnD,EAAQwI,YAAYzE,IAmCxB,OAvBAqG,qBAAU,WACH+B,GAZU,SAACnE,GAChB,IAAIuE,EAAQ,OAAGvM,QAAH,IAAGA,OAAH,EAAGA,EAAOwM,QAAO,SAACpF,GAC5B,OAAOA,GAAKY,KAEduE,EAASE,QAAQzE,GACjBjC,EACExD,EAAS,CACPvC,MAAOuM,KAKMG,CAASxN,GAAkBO,KAC3C,CAACP,EAAQK,KAsBH,OAAPqK,QAAO,IAAPA,OAAA,EAAAA,EAASf,SAAS1J,EAAKsI,OACvB8C,GAzCoB,yBA0CpBvC,GACAmE,EAGE,uBACE/H,UACElF,IAAW8I,GAAMzI,IAAqBkI,EAClC,mCACA,4BAENkF,SAAS,IACTrD,KAAK,SACLxE,QACEqH,EAhCe,WACrBpG,EAAS/D,EAAuB,CAC9BxC,6BAA6B,KAE/BuG,EAAS/E,EAAU,CACjBP,QAAQ,KAEVsF,EAAS9E,EAAiB,CACxBT,cAAe,QAEjBuF,EAAS1E,EAAmB,CAC1BjB,gBAAiB,SAsBb4H,IAAOuC,EAxHO,WACpBxE,EAASnF,EAAc,CACrBF,WAAY,QAEd,IAAIkM,EAAmBV,EAAkBA,EAAkBnD,QAAQ,GAC/Df,IACE4E,EAAiB/D,SAAS1J,EAAKsI,MACjCmF,EAAiBC,KAAK1N,EAAKsI,KAE7B1B,EACEjE,EAAmB,CACjBvC,iBAAkB,QAGtBwG,EACEvE,EAAU,CACRtC,OAAQ8I,KAGZvJ,EAAGyH,WAAW,QACXkC,IAAIJ,GACJwD,OAAO,CACNa,cAAeO,MAkGiBrC,EA9FnB,WAWnB,GAVAxE,EAASnF,EAAc,CACrBF,WAAY,QAEd0L,GAAU,GACVrG,EACEvE,EAAU,CACRtC,OAAQ,QAIZ,OAAIyJ,QAAJ,IAAIA,OAAJ,EAAIA,EAAYX,GAAI,CAClB,IAAI4E,EAAmBP,EACnBO,IAAkBA,EAAmB,IACrCA,EAAiB/D,SAAS1J,EAAKsI,MAAMmF,EAAiBC,KAAK1N,EAAKsI,KACpE1B,EACEjE,EAAmB,CACjBvC,iBAAkBkI,EAClBhI,oBAAmB,OAAEkJ,QAAF,IAAEA,OAAF,EAAEA,EAAYX,MAIrCvJ,EAAGyH,WAAW,eACXkC,IAAIO,EAAWX,IACfwD,OAAO,CACNa,cAAeO,MAzFN,aAoJb,UAaGtE,GAAQ,sBAAKlE,UAAU,gBAAf,SAAgCkE,IACxCA,EACC,sBAAKlE,UAAU,yBAAf,SAAyC6H,IAEzC,uBAAK7H,UAAU,2BAAf,UACImG,EAME7C,EACF,sBACEtD,UAAU,MACVY,MAAO,CAAEiE,gBAAgB,OAAD,OAASvB,EAAT,QAG1B,sBAAKoF,IAAI,qBAAqBC,IAAI,WAXjCpD,EAGC,eAAC,KAAD,IAFA,sCAYJ,eAAC,KAAD,CACEvF,UACEmG,EACI3I,EACE,gBACA,iBACF,cAGR,uBAAMwC,WACK,OAAbiI,QAAa,IAAbA,OAAA,EAAAA,EAAexD,SAASvJ,MAAxB,OACA4M,QADA,IACAA,OADA,EACAA,EAAmBrD,SAASvJ,KAE3BgJ,EAAY,GAAP,OAJJ,SAIiB2D,GAAgBvH,UAU/B,0B,wCC9MCsI,OAnCf,SAAyB7I,GACrB,IAAI8I,GAAY,EAKhB,OACI,uBAAK7I,UAAU,qBAAf,UACI,uBAAKA,UAAU,4BACfE,KAAK,SAAS,iBAAe,WAAW,4BAAoBH,EAAM6D,IAAM,gBAAc,OAAO,0BAAkB7D,EAAM6D,IACrHlD,QAPY,WAChBmI,GAAaA,GAIT,UAII,sBAAK7I,UAAW6I,GAAyB,aAAd9I,EAAM8H,MAAmB,6BAA6C,gBAAjG,SACK9H,EAAMmE,OAEX,sBAAKlE,UAAU,aAAf,SACKD,EAAM8H,WAKf9H,EAAM+I,SAAW,sBAAK9I,UAAW,qBAAqBkF,KAAK,SAAS,iBAAe,QAAQ,iBAAe,iBAAzF,SACZnF,EAAM+I,UAIX,sBAAK9I,UAAU,WAAW4D,GAAE,UAAK7D,EAAM6D,IAAvC,SACK7D,EAAMgJ,SAAWhJ,EAAMgJ,QAAQzD,KAAI,SAAC0D,GAAW,OAAOA,W,wCCkBxDC,OA7Cf,WACE,OACE,+BACE,sBAAKjJ,UAAU,4BAAf,SACE,uBAAKA,UAAU,oBAAf,UACE,sBACEA,UAAU,2CACV4D,GAAG,mBACH,iBAAe,WACf,gBAAc,QAJhB,SAME,sBAAK5D,UAAU,0BAAf,SACE,0BAAQA,UAAU,gDAAlB,UACE,0CACA,eAAC,KAAD,WAIN,yBAAQA,UAAU,gCAAlB,SACE,eAAC,KAAD,CAAiBY,MAAO,CAAEsI,OAAQ,QAEpC,sBAAIlJ,UAAU,gBAAgB,kBAAgB,mBAA9C,UACE,uBAAK,cAAY,OAAOA,UAAU,sBAAlC,UACE,sBAAKA,UAAU,cAAf,SACE,+BACE,4CAGJ,6CAEF,sBACEA,UAAU,gBACVkF,KAAK,SACL,iBAAe,QACf,iBAAe,iBAJjB,uC,MCzBGiE,OANf,WACI,OACI,sBAAKnJ,UAAU,Y,oBCuGRoJ,OAvFf,YAA6B,IAAV1B,EAAS,EAATA,MACjB,EAAmC7F,YAAcxH,EAAGyH,WAAW,SAA/D,mBAAOuD,EAAP,KAAiBf,EAAjB,KAEA,GAFA,KACaF,YAAYpF,IACiB6C,YACxCxH,EAAGyH,WAAW,WADhB,mBAAOC,EAAP,KAAcC,EAAd,KAGA,GAHA,KAGsBH,YAAcxH,EAAGyH,WAAW,iBAC5CuH,GADN,oBACoB,IAEZ,OAARhE,QAAQ,IAARA,KAAU7B,KAAK8B,KAAI,SAACtB,GAAD,OACjBqF,EAAYZ,KACV,eAAC,GAAD,CACEZ,MAAO7D,EAAItB,OAAO9H,KAElBgJ,GAAII,EAAIJ,GACR2B,UAAWvB,EAAItB,OAAO6C,UACtBuC,kBAAmB9D,EAAItB,OAAOuF,cAC9BzC,QAASxB,EAAItB,OAAO8C,SAJfxB,EAAIJ,QAQf,IAAM0F,EAAY,GAgBlB,OAfK,OAALvH,QAAK,IAALA,KAAOyB,KAAK8B,KAAI,SAACtB,GAAD,OACdsF,EAAUb,KACR,eAAC,GAAD,CACEZ,MAAO7D,EAAItB,OAAOS,YAClB7C,MAAO0D,EAAItB,OAAOpC,MAElB+C,IAAKW,EAAItB,OAAOW,IAChBC,SAAUU,EAAItB,OAAOY,SACrB9F,SAAUwG,EAAItB,OAAOlF,SACrB2I,QAAQ,GAJHnC,EAAIJ,QAWb,sBAAK5D,UAAU,qBAAqBY,MAAO,CAAE8G,MAAOA,GAApD,SACGpD,GAAWtC,EACV,eAAC,GAAD,IAEA,uCACE,eAAC,GAAD,IACA,eAAC,GAAD,CACE6F,MAAM,cACN3D,KAAM,eAAC,KAAD,IACN6D,YAAc,IAoBhB,eAAC,GAAD,CACEF,MAAM,WACN3D,KAAM,eAAC,KAAD,IACNN,GAAI,WACJkF,QAAS,eAAC,KAAD,IACTC,QAASM,IAGX,eAAC,GAAD,CACExB,MAAM,iBACN3D,KAAM,eAAC,KAAD,IACNN,GAAG,gBACHmF,QAASO,U,iGClFNC,OAdf,YAA2D,IAAnCC,EAAkC,EAAlCA,MAAO3B,EAA2B,EAA3BA,MAAOnL,EAAoB,EAApBA,OACpC,OADwD,EAAZ+M,SAE1C,sBACE/I,QAAS,kBAAMhE,EAAO8M,IACtBxJ,UAAU,2CACV,iBAAe,UACf,oBAAkB,MAClB6H,MAAOA,EALT,SAOG2B,K,wCCWQE,OAlBf,YAAuD,IAAnCF,EAAkC,EAAlCA,MAAOG,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,QAASlJ,EAAW,EAAXA,QACnC3F,EAAOqJ,YAAYpF,IACzB,EAAgCqC,oBAAS,GAAzC,mBAAOwI,EAAP,KAAiBC,EAAjB,KAQA,OAPA9D,qBAAU,YACN,OAAG4D,QAAH,IAAGA,OAAH,EAAGA,EAASnF,SAAT,OAAkB1J,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAMoI,cACzB2G,GAAY,GAERA,GAAY,MAIpB,0BAAQ9J,UAAW6J,EAAS,sCAAsC,+BAAgCnJ,QAAS,kBAAMA,EAAQ8I,IAAzH,UACE,sBAAKxJ,UAAU,oBAAf,SAAoCwJ,IACpC,uBAAMxJ,UAAU,oBAAhB,SAAqC2J,Q,wCCkvB5BI,GA3tBCC,IAAMC,YACpB,WAuBEC,GACI,IAtBFtG,EAsBC,EAtBDA,GACAuG,EAqBC,EArBDA,SACAC,EAoBC,EApBDA,UACAtH,EAmBC,EAnBDA,QACAuH,EAkBC,EAlBDA,UACAhH,EAiBC,EAjBDA,IACAiH,EAgBC,EAhBDA,YACAC,EAeC,EAfDA,UACA7J,EAcC,EAdDA,QACA8J,EAaC,EAbDA,kBACAC,EAYC,EAZDA,WACAC,EAWC,EAXDA,YACAC,EAUC,EAVDA,QACAC,EASC,EATDA,QAEAC,GAOC,EARDC,WAQC,EAPDD,UACAE,EAMC,EANDA,cACAC,EAKC,EALDA,oBACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,WAIIhI,EAAUkB,YAAYpF,IACtBmE,GAAqB,OAAPD,QAAO,IAAPA,OAAA,EAAAA,EAASG,OAAQA,EAAM,MAAQ8G,EACnD,EAA8B9I,oBAAS,GAAvC,mBAAO8J,EAAP,KAAgBC,EAAhB,KACMC,EAAejH,YAAYrF,IAC3BjE,EAAUkQ,EAA+D,KAA1CD,GAA4BM,EAC3DC,EAAgBlH,YAAY9E,IAC5BiM,EAAYR,EAAsE,KAAvDC,GAAwCM,EACzE,EAAsBzJ,YACpB+B,IACG9I,EACGT,EACGyH,WAAW,QACXkC,IAAIlJ,GACJgH,WAAW,YACXkC,IAAIJ,GACJ9B,WAAW,eACX0J,QAAQ,YAAa,OACxBD,EACAlR,EACGyH,WAAW,eACXkC,IAAIuH,GACJzJ,WAAW,YACXkC,IAAIJ,GACJ9B,WAAW,eACX0J,QAAQ,YAAa,YACxBC,IAlBDC,GAAP,oBAqBA,GAAyB7J,YAAcxH,EAAGyH,WAAW,UAArD,qBAAOC,GAAP,MAAcuC,GAAd,MACMpJ,GAAUkJ,YAAYhF,IACtBrE,GAAI,OAAGgH,SAAH,IAAGA,QAAH,EAAGA,GAAOyB,KAAKC,MAAK,SAACC,GAAD,OAAUA,EAAKhB,OAAOW,MAAQnI,MACtDoI,IAAe,OAAJvI,SAAI,IAAJA,QAAA,EAAAA,GAAM2H,OAAOY,UAC1BvI,GAAK2H,OAAOY,SACZ,qBACE9F,GAAQ,OAAGzC,SAAH,IAAGA,QAAH,EAAGA,GAAM2H,OAAOlF,SACxBmO,GAAO,IAAIC,KAAJ,OAASvB,QAAT,IAASA,OAAT,EAASA,EAAWwB,UAC7BC,GAAOH,GAAKI,UACZC,GAAQL,GAAKM,WACbC,GAAQP,GAAKQ,WACbC,GAAUT,GAAKU,aACfD,GAAU,KACZA,GAAU,IAAMA,IAElB,IAAI5Q,GAAY0Q,GAAQ,IAAME,GAAU,IAExC5J,QAAQC,IAAIqJ,GAAOE,IACnB,OAAwC3K,oBAAS,GAAjD,qBAAOiL,GAAP,MAAqBC,GAArB,MAGA,GAAgClL,mBAAS,MAAzC,qBAAiBmL,IAAjB,aACMC,GAAY7B,EAAU,KAAOhH,EAAKiH,EAAW,MAAQjH,EAAK,IAAMA,EAoBtEoC,qBAAU,WACHwE,GACHY,GAAW,KAEZ,CAACZ,IAEJ,IAAM7I,GAAWC,cACX8K,GAAc,WACbpI,KACH3C,GACEhE,EAAkB,CAChBzC,QAASmI,KAIbkJ,IAAgB,GAChB/J,QAAQC,IAAI,gBAGhBD,QAAQC,IAAI,OACZ,IAAMkK,GAASvI,YAAY/E,IAC3B2G,qBAAU,WAcR,OAbIsG,IACF3K,GACE9D,EAAgB,CACdvC,aAAc,CACZ6H,YAAW,OAAEpI,SAAF,IAAEA,QAAF,EAAEA,GAAM2H,OAAOS,YAC1B7C,MAAK,OAAEvF,SAAF,IAAEA,QAAF,EAAEA,GAAM2H,OAAOpC,MACpB+C,IAAKnI,GACLoI,SAAUA,GACV9F,SAAUA,GACV6J,QAAO,OAAEtM,SAAF,IAAEA,QAAF,EAAEA,GAAM2H,OAAO2E,YAIvB,WACLkF,IAAgB,MAEjB,CAACD,GAAcpR,GAASyR,KAC3B,IAAMC,GAAY,aACZ5R,GAAYoJ,YAAYnF,IAI9B,GAA0BoC,mBAAS,IAAnC,qBAAcwL,IAAd,aAMMC,GAAgB,WACpBnL,GACE/D,EAAuB,CACrBxC,6BAA6B,KAGjCuG,GACE/E,EAAU,CACRP,OAAQ,QAIZsF,GACE9E,EAAiB,CACfT,cAAe,QAGnBuF,GACE1E,EAAmB,CACjBjB,iBAAiB,KAGrB2F,GACE3E,EAAmB,CACjBf,gBAAiB2H,KAGrBjC,GACE7E,EAAuB,CACrBZ,oBAAqB6O,GAA4BjQ,KAGrD6G,GACE5E,EAAyB,CACvBZ,sBAAuB6O,GAAwCO,MAK/DrP,GAAsBkI,YAAY1F,GAClCvC,GAAwBiI,YAAYzF,GAEpC9C,GAAmBuI,YAAYtF,IAC/BiO,GAAQ,uCAAG,kCAAA/J,EAAA,yDACfrB,GACEvD,EAAoB,CAClBvC,kBAAmBA,MAGnBmR,EAAarC,GAAoB,IACjC/G,EAPW,oBAQR+G,GAAYA,EAAQlG,SAASzJ,IARrB,gBASXgS,EAAWvE,KAAKzN,IACZiQ,GACF5Q,EAAGyH,WAAW,SACXkC,IAAIhJ,IACJ8G,WAAW,cACXiC,IAAI,CACHkJ,UAAWrJ,GAAU,KACrB9I,OAAQoB,IAA4C,KACpDgR,aAAc/Q,IAEV,KACJkO,UAAW1Q,IAASW,UAAU6S,WAAWC,kBACzCnC,QAASA,IAET/O,GACF7B,EAAGyH,WAAW,QACXkC,IAAI9H,IACJ4F,WAAW,YACXkC,IAAIiH,GACJnJ,WAAW,eACXkC,IAAIJ,GACJwD,OAAO,CACNuD,QAASqC,IAEJ7Q,IACT9B,EAAGyH,WAAW,eACXkC,IAAI7H,IACJ2F,WAAW,YACXkC,IAAIiH,GACJnJ,WAAW,eACXkC,IAAIJ,GACJwD,OAAO,CACNuD,QAASqC,KAGNnC,GACTxQ,EAAGyH,WAAW,SACXkC,IAAIhJ,IACJ8G,WAAW,cACXiC,IAAI,CACHkJ,UAAWrJ,GAAU,KACrB9I,OAAQoB,IAA4C,KACpDgR,aAAc/Q,GAAwBoP,EAAW,KACjDlB,UAAW1Q,IAASW,UAAU6S,WAAWC,oBAGzClR,GACF7B,EAAGyH,WAAW,QACXkC,IAAI9H,IACJ4F,WAAW,YACXkC,IAAIJ,GACJwD,OAAO,CACNuD,QAASqC,IAEJ7Q,IACT9B,EAAGyH,WAAW,eACXkC,IAAI7H,IACJ2F,WAAW,YACXkC,IAAIJ,GACJwD,OAAO,CACNuD,QAASqC,MAIf3S,EAAGyH,WAAW,SACXkC,IAAIhJ,IACJ8G,WAAW,cACXiC,IAAI,CACHkJ,UAAWrJ,GAAU,KACrB9I,OAAQA,GAAkB,KAC1BoS,aAAc3B,GAAsB,KACpClB,UAAW1Q,IAASW,UAAU6S,WAAWC,oBAGzCtS,EACFT,EAAGyH,WAAW,QACXkC,IAAIlJ,GACJgH,WAAW,YACXkC,IAAIJ,GACJwD,OAAO,CACNuD,QAASqC,IAEJzB,GACTlR,EAAGyH,WAAW,eACXkC,IAAIuH,GACJzJ,WAAW,YACXkC,IAAIJ,GACJwD,OAAO,CACNuD,QAASqC,KAjGN,8BAsGPK,EAAIL,EAAWpI,QAAQ5J,IAC3BgS,EAAWM,OAAOD,EAAG,GAvGV,UAwGYhT,EACpByH,WAAW,SACXkC,IAAIhJ,IACJ8G,WAAW,cACXyL,MAAM,YAAa,KAAM3J,GACzB4J,MA7GQ,QAwGLC,EAxGK,OA8GPC,EAAS,KACblL,QAAQC,IAAIgL,GACZA,EAASE,SAAQ,SAAC3J,GAAD,OAAU0J,EAAS1J,EAAIJ,MACxC8J,GACErT,EACGyH,WAAW,SACXkC,IAAIhJ,IACJ8G,WAAW,cACXkC,IAAI0J,GACJE,SACArL,MAAK,kBAAMC,QAAQC,IAAI,cACvBE,OAAM,SAACkB,GAAD,OAASrB,QAAQC,IAAIoB,EAAIf,YAEhCmI,EACE/O,GACF7B,EAAGyH,WAAW,QACXkC,IAAI9H,IACJ4F,WAAW,YACXkC,IAAIiH,GACJnJ,WAAW,eACXkC,IAAIJ,GACJwD,OAAO,CACNuD,QAASqC,IAEJ7Q,IACT9B,EAAGyH,WAAW,eACXkC,IAAI7H,IACJ2F,WAAW,YACXkC,IAAIiH,GACJnJ,WAAW,eACXkC,IAAIJ,GACJwD,OAAO,CACNuD,QAASqC,IAGNnC,EACL3O,GACF7B,EAAGyH,WAAW,QACXkC,IAAI9H,IACJ4F,WAAW,YACXkC,IAAIJ,GACJwD,OAAO,CACNuD,QAASqC,IAEJ7Q,IACT9B,EAAGyH,WAAW,eACXkC,IAAI7H,IACJ2F,WAAW,YACXkC,IAAIJ,GACJwD,OAAO,CACNuD,QAASqC,IAGNlS,EACTT,EAAGyH,WAAW,QACXkC,IAAIlJ,GACJgH,WAAW,YACXkC,IAAIJ,GACJwD,OAAO,CACNuD,QAASqC,IAEJzB,GACTlR,EAAGyH,WAAW,eACXkC,IAAIuH,GACJzJ,WAAW,YACXkC,IAAIJ,GACJwD,OAAO,CACNuD,QAASqC,IAjLJ,sGAAH,qDAyLRa,GAAe,SAACrE,GAcpB,GAbA7H,GACEzE,EAAqB,CACnBnB,mBAAmB,KAGvB+R,YAAW,WACTnM,GACEzE,EAAqB,CACnBnB,mBAAmB,IAErB,QAGA6H,EAAJ,CACMgH,GACFjJ,GACEvD,EAAoB,CAAEvC,kBAAmBA,MAE7C,IAAIkS,EAAexD,EAAYA,EAAU5F,QAAU,GAC7CqJ,EAAYD,EAAaE,WAAU,SAACC,EAAUC,GAClD,GAAID,EAASrG,QAAU2B,EACrB,OAAO,KAIX,GAAIwE,GAAa,EAAG,CAClB,IAAIrE,EAAQoE,EAAaC,GAAWrE,MAChCyE,EAAYlL,EAAQC,YACpByG,EAAUmE,EAAaC,GAAWpE,QACtC,GAAIA,EAAQnF,SAAR,OAAiBvB,QAAjB,IAAiBA,OAAjB,EAAiBA,EAASC,aAAc,CAC1C,IAAIkL,EAAYzE,EAAQhF,QAAQwJ,GAChCxE,EAAQ0D,OAAOe,EAAW,GAC1B1E,GAAgB,OAEhBA,GAAgB,EAChBC,EAAQnB,KAAK2F,GAEfL,EAAaC,GAAWpE,QAAUA,EAClCmE,EAAaC,GAAWrE,MAAQA,OAC3B,IAAmB,IAAfqE,EAAkB,CAC3B,IACII,EAAYlL,EAAQC,YACpByG,EAAU,GACdA,EAAQnB,KAAK2F,GACbL,EAAatF,KAAK,CAChBZ,MAAO2B,EACPI,QAASA,EACTD,MAAOA,IAGPkB,EACE1O,GACF9B,EAAGyH,WAAW,eACXkC,IAAI7H,IACJ2F,WAAW,YACXkC,IAAIJ,GACJwD,OAAO,CACNmD,UAAWwD,IAER7R,IACP7B,EAAGyH,WAAW,QACXkC,IAAI9H,IACJ4F,WAAW,YACXkC,IAAIJ,GACJwD,OAAO,CACNmD,UAAWwD,IAGR9C,EACL9O,GACF9B,EAAGyH,WAAW,eACXkC,IAAI7H,IACJ2F,WAAW,YACXkC,IAAIiH,GACJnJ,WAAW,eACXkC,IAAIJ,GACJwD,OAAO,CACNmD,UAAWwD,IAER7R,IACP7B,EAAGyH,WAAW,QACXkC,IAAI9H,IACJ4F,WAAW,YACXkC,IAAIiH,GACJnJ,WAAW,eACXkC,IAAIJ,GACJwD,OAAO,CACNmD,UAAWwD,IAGRxC,GACT/I,QAAQC,IAAImB,GACZvJ,EAAGyH,WAAW,eACXkC,IAAIuH,GACJzJ,WAAW,YACXkC,IAAIJ,GACJwD,OAAO,CACNmD,UAAWwD,KAENjT,GACTT,EAAGyH,WAAW,QACXkC,IAAIlJ,GACJgH,WAAW,YACXkC,IAAIJ,GACJwD,OAAO,CACNmD,UAAWwD,MAMrB/H,qBAAU,WAENyE,GACe,KAAfA,GACAD,GACA5G,KAAE,OAAK4G,QAAL,IAAKA,OAAL,EAAKA,EAAmB5G,MAE1BpB,QAAQC,IAAIgI,GACZoD,GAAapD,MAEd,CAACC,IAGJ,IAAM5O,GAAcsI,YAAYxE,IAChCoG,qBAAU,WACU,IAAD,EAAblK,KACC,OAAHoO,QAAG,IAAHA,GAAA,UAAAA,EAAKoE,eAAL,SAAcC,eAAe,KAG/B,OAAO,WACLT,YAAW,WACTnM,GAASxE,EAAe,CAAErB,YAAa,UACtC,QAEJ,CAAChB,EAAQyQ,EAAUzP,KAEJ0S,iBAAO,MAAzB,IAKA,GAA0CnN,oBAAS,GAAnD,qBAAOoN,GAAP,MAAsBC,GAAtB,MAmBA,OACE,uBACExE,IAAKA,EACLlK,UACEmL,IAAYD,GACD,OAAPP,QAAO,IAAPA,OAAA,EAAAA,EAASlG,SAASzJ,KAChB,iCACA,4BACK,OAAP2P,QAAO,IAAPA,OAAA,EAAAA,EAASlG,SAASzJ,OAAekQ,EACjC,0BACA,oBAENyD,YA/ciB,WACfrE,GAAgBE,GAAqBA,EAAkB5G,KAAOA,EAChEwH,GAAW,GACNA,GAAW,IA6chBwD,WA3coB,WAClBpE,GAAqBA,EAAkB5G,KAAOA,EAChDwH,GAAW,GACNA,GAAW,IAychBxH,GAAI6I,GAbN,WAeU,OAAP9B,QAAO,IAAPA,OAAA,EAAAA,EAASlG,SAASzJ,OAAekQ,GAChC,uBAAKlL,UAAU,iBAAf,UACE,sBAAKA,UAAU,uBAAf,SAAuC,eAAC,KAAD,MACvC,sBAAKkF,KAAK,SAASlF,UAAU,0BAA7B,0CAKJ,uBAAKA,UAAW,2BAAhB,WACIqK,GAAaC,IACb,uCACE,sBACE1J,MAAO,CAAEiE,gBAAgB,OAAD,OAASuF,EAAT,MACxBzB,IAAI,GACJzD,KAAK,SACLxE,QAAS2C,EAAMqJ,GAAcE,GAC7B,iBAAgBvJ,EAAM,QAAU,QAChC,iBAAe,gBACfrD,UAAU,oBAGZ,uBAAKA,UAAU,gBAAf,UACE,uBAAKA,UAAU,SAAf,UACE,oBACEkF,KAAK,SACLxE,QAAS2C,EAAMqJ,GAAcE,GAC7B,iBAAgBvJ,EAAM,QAAU,QAChC,iBAAe,gBAJjB,SAMGiH,EAAcH,EAAWhH,IACvB,IACL,gCAAOmH,EAAc,GAAK9O,QAE5B,oBAAGwE,UAAU,UAAb,SAAwB8C,IACxB,sBAAK9C,UAAU,wBAAf,SACGuK,EACGA,EAAUjF,KAAI,SAAC4I,GACb,GAAIA,EAASvE,MAAQ,EACnB,OACE,eAAC,GAAD,CACEH,MAAO0E,EAASrG,MAChB8B,MAAOuE,EAASvE,MAChBC,QAASsE,EAAStE,QAElBlJ,QAASmN,IADJK,EAASrG,UAKtB,MAEM,OAAX6D,SAAW,IAAXA,QAAA,EAAAA,GAAalI,KAAKqL,QAAS,IAAMhE,IAAaK,GAC7C,uBACElL,UAAU,yBACV2O,YAvFa,WAC3BD,IAAiB,IAuFHE,WArFgB,WAC9BF,IAAiB,IAiFL,UAKE,sBACE1O,UAAU,yBACVY,MAAO,CACLiE,gBAAgB,OAAD,OACb6G,GAAYlI,KAAKkI,GAAYlI,KAAKqL,OAAS,GAAGnM,OAC3C0H,UAFU,MAKjBzB,IAAI,GACJzD,KAAK,SACLxE,QAAS,kBACPgL,GAAYlI,KAAKkI,GAAYlI,KAAKqL,OAAS,GAAGnM,OAAOW,KA/F9CyL,EAiGDpD,GAAYlI,KACVkI,GAAYlI,KAAKqL,OAAS,GAC1BnM,OAAOW,SAlG5BiB,KACH3C,GACEhE,EAAkB,CAChBzC,QAAS4T,KAIbvC,IAAgB,GAChB/J,QAAQC,IAAI,sBA4FQmK,EArGE,IAACkC,GAuGT,iBAAgBzL,EAAM,QAAU,QAChC,iBAAe,kBAEjB,sBACErD,UAAU,wBACVU,QAASoM,GAFX,UAIc,OAAXpB,SAAW,IAAXA,QAAA,EAAAA,GAAalI,KAAKqL,QAAS,GACb,OAAXnD,SAAW,IAAXA,QAAA,EAAAA,GAAalI,KAAKqL,QAAS,YAChB,OAAXnD,SAAW,IAAXA,QAAA,EAAAA,GAAalI,KAAKqL,QAAS,WAEjC,sBACE7O,UAAU,8BACVU,QAASoM,GAFX,SAII2B,GAKA,uCACE,uBAAMzO,UAAU,uCAAhB,yBAGA,eAAC,KAAD,CAA4BA,UAAU,0BARxC,uBAAMA,UAAU,uCAAhB,mCAkBZ,sBACEA,UACEmL,EAAU,oBAAsB,6BAFpC,SAKE,uBAAKnL,UAAU,2BAAf,WACI4K,IAAYK,IAAYJ,GACxB,uCACE,eAAC,GAAD,CACEnO,OAAQmR,GACRrE,MAAO,SACP3B,MAAM,cAER,eAAC,GAAD,CACEnL,OAAQmR,GACRrE,MAAO,eACP3B,MAAM,qBAER,eAAC,GAAD,CACEnL,OAAQmR,GACRrE,MAAO,eACP3B,MAAM,mBAIZ,eAAC,GAAD,CACE4B,SAliBM,SAACzI,GACnB,IAAIwI,EAAQxI,EAAE+N,OACdlC,GAASrD,IAiiBG9M,OAnmBc,WAC1B,IAEMsS,EAFcvI,SAASC,cAAc,IAAM+F,IAEhBwC,wBACjCzC,GAAYwC,GACZtO,EAAQ,CAAEsO,eAAcpL,QA+lBZ4F,MAAO,eAAC,KAAD,IACP3B,MAAM,oBAEPgD,GACC,eAAC,GAAD,CACEnO,OAnLM,aAoLN8M,MAAO,eAAC,KAAD,IACP3B,MAAM,qBAGRoD,IAAYJ,GACZ,eAAC,GAAD,CACEnO,OAAQoQ,GACRtD,MAAO,eAAC,KAAD,IACP3B,MAAM,oBAQV,eAAC,GAAD,CACEnL,OAAQqQ,GACRvD,OACE,OAACmB,QAAD,IAACA,OAAD,EAACA,EAASlG,SAASzJ,KAGjB,eAAC,KAAD,CAAc4F,MAAO,CAAEC,MAAO,SAF9B,eAAC,KAAD,IAKJgH,MAAM,qC,oBClKTqH,OA9iBf,YAA2C,IAAD,kBAAjBxH,EAAiB,EAAjBA,MACjBpM,GADkC,EAAV6T,OACT/K,YAAY7E,KAC3B+D,EAAQ,OAAGhI,QAAH,IAAGA,OAAH,EAAGA,EAAcgI,SACzBuE,EAAK,OAAGvM,QAAH,IAAGA,OAAH,EAAGA,EAAc6H,YACtB3F,EAAQ,OAAGlC,QAAH,IAAGA,OAAH,EAAGA,EAAckC,SACzBmP,EAASvI,YAAY/E,IACrB+P,EAAgBhL,YAAYrF,IAC5BsQ,EAAkBjL,YAAY9E,IAC9BqC,EAAWC,cACXsB,EAAUkB,YAAYpF,IACtBsQ,EAAG,OAAGhU,QAAH,IAAGA,OAAH,EAAGA,EAAc+L,QACpB7L,EAAY4I,YAAY5E,IACxB0K,EAAMsE,iBAAO,MACbxT,EAAYoJ,YAAYnF,IAC9B,EAAoCoC,mBAAS,IAA7C,mBAAOoJ,EAAP,KAAmB8E,EAAnB,KACA,EAAsClO,oBAAS,GAA/C,mBAAOqJ,EAAP,KAAoB8E,EAApB,KACA,GAAgCnO,mBAAS,MAAzC,qBAAOoO,GAAP,MAAiBjD,GAAjB,MACA,GAA8B3K,YAAcxH,EAAGyH,WAAW,UAA1D,qBAAOC,GAAP,MACMlG,IADN,MACyBuI,YAAYtF,KACrC,GAAgB+C,YAAcxH,EAAGyH,WAAW,SAArC4N,GAAP,qBAEA,GAAuB7N,YACrBuN,GACE/U,EAAGyH,WAAW,QAAQkC,IAAIoL,GAAetN,WAAW,aAFjD6N,GAAP,qBAIA,GAAsB9N,YAAcxH,EAAGyH,WAAW,gBAA3CuC,GAAP,qBACA,GAAyBxC,YACvBwN,GACEhV,EAAGyH,WAAW,eAAekC,IAAIqL,GAAiBvN,WAAW,aAF1D8N,GAAP,qBAIApN,QAAQC,IAAI4M,GACZ,OAAuCxN,YACrC7G,GACEX,EACGyH,WAAW,SACXkC,IAAIhJ,GACJ8G,WAAW,cACX0J,QAAQ,YAAa,SAN5B,qBAAOqE,GAAP,MAAuBC,GAAvB,MAQMC,GAAiB,WACrBpO,EACE/D,EAAuB,CACrBxC,6BAA6B,KAGjCuG,EACE9E,EAAiB,CACfT,cAAe,QAGnBuF,EACE1E,EAAmB,CACjBjB,gBAAiB,QAGrB2F,EACE/E,EAAU,CACRP,OAAQ,QAGZmG,QAAQC,IAAI,SACZ,IAAMuN,EAAgBvJ,SAASC,cAAc,mBAChC,OAAbsJ,QAAa,IAAbA,KAAeC,UAAUC,OAAO,aAGlC1N,QAAQC,IAAI5G,IAEZmK,qBAAU,WACR,SAASmK,EAAmBC,GACtBlG,EAAIoE,UAAYpE,EAAIoE,QAAQ+B,SAASD,EAAMjO,SAC7CqK,GAAY,MAKhB,OADA/F,SAAS6J,iBAAiB,YAAaH,GAChC,WAEL1J,SAAS8J,oBAAoB,YAAaJ,OAI9C,IAAMK,GAAgB,SAACf,GACrBjD,GAAYiD,GACZjN,QAAQC,IAAIgN,IAEd,GAA0CpO,mBAAS,MAAnD,qBAAOoP,GAAP,MAAsBC,GAAtB,MA6CA1K,oBAAS,sBAAC,4BAAAhD,EAAA,sDACRR,QAAQC,IAAI,UACRkO,EA5CG,OAAGd,SAAH,IAAGA,QAAH,EAAGA,GAAgBrM,KAAK8B,IAArB,uCAAyB,WAAOtB,GAAP,uBAAAhB,EAAA,6DAC3BiK,EAAYjJ,EAAItB,OAAOuK,UACvBnS,EAASkJ,EAAItB,OAAO5H,OACpBoS,EAAelJ,EAAItB,OAAOwK,aAC1BjC,EAAUjH,EAAItB,OAAOuI,QACvB2F,EAAa,KACb3F,GACFzI,QAAQC,IAAI,YACR3H,EACF8V,EAAavW,EACVyH,WAAW,QACXkC,IAAIlJ,GACJgH,WAAW,YACXkC,IAAIiH,GACJuC,MACIN,IACP0D,EAAavW,EACVyH,WAAW,eACXkC,IAAIkJ,GACJpL,WAAW,YACXkC,IAAIiH,GACJuC,QACI1S,EACT8V,EAAavW,EACVyH,WAAW,QACXkC,IAAIlJ,GACJgH,WAAW,YACXkC,IAAIiJ,GACJO,MACMN,GAAgBD,IACzB2D,EAAavW,EACVyH,WAAW,eACXkC,IAAIkJ,GACJpL,WAAW,YACXkC,IAAIiJ,GACJO,OAnC4B,kBAsC1BoD,GAtC0B,2CAAzB,uDA6CVpO,QAAQC,IAAIkO,GACC,GACTA,IACOE,QAAQC,IAAIH,GACdpO,MAAK,SAACwO,GAAD,OAAYL,GAAiBK,MACzCvO,QAAQC,IAAIgO,KARN,2CAUP,CAAC5U,GAAkBgU,GAAgBF,GAAcC,KASpD,IAQMoB,GAAgB,SAACC,GACrB,GAAIA,EAAKC,iBAAkB,CACzB,IAAIC,EAAaF,EAAKC,iBAAiBpW,OACnCsW,EAAmBH,EAAKC,iBAAiBhE,aAC7C,GAAIiE,EAAY,CACd,IAAIlJ,EAAa,OAAGyH,SAAH,IAAGA,QAAH,EAAGA,GAAOlM,KACxBC,MAAK,SAACO,GAAD,OAASA,EAAIJ,KAAOuN,KACzBzO,OAAOuF,cACLA,IAAeA,EAAgB,IAC/BA,EAAcxD,SAASvB,EAAQG,MAClC4E,EAAcQ,KAAKvF,EAAQG,KAC7B1B,EACEjE,EAAmB,CACjBrC,oBAAqB,KACrBF,iBAAkB,QAGtBwG,EACEvE,EAAU,CACRtC,OAAQqW,KAGZ9W,EAAGyH,WAAW,QAAQkC,IAAImN,GAAY/J,OAAO,CAC3Ca,cAAeA,SAEZ,GAAImJ,EAAkB,CAC3B5O,QAAQC,IAAI,UACZ,IAAIwF,EAAa,OAAG5D,SAAH,IAAGA,QAAH,EAAGA,GAAab,KAC9BC,MAAK,SAACO,GAAD,OAASA,EAAIJ,KAAOwN,KACzB1O,OAAOuF,cACLA,IAAeA,EAAgB,IAC/BA,EAAcxD,SAASvB,EAAQG,MAClC4E,EAAcQ,KAAKvF,EAAQG,KAC7B1B,EACEvE,EAAU,CACRtC,OAAQ,QAGZ6G,EACEjE,EAAmB,CACjBrC,oBAAqB+V,EACrBjW,iBAAkB8V,EAAK5N,OAG3BhJ,EAAGyH,WAAW,eAAekC,IAAIoN,GAAkBhK,OAAO,CACxDa,cAAeA,IAInBtG,EAASxE,EAAe,CAAErB,YAAamV,EAAKrN,QAGhDpB,QAAQC,IAAI2M,GAEZ,IAAMpT,GAAkBoI,YAAYvF,GAC9B5C,GAAkBmI,YAAYxF,GAC9B1C,GAAsBkI,YAAY1F,GAClCvC,GAAwBiI,YAAYzF,GAC1C,GAAuC0S,YACrCpV,KACGC,GACG7B,EACGyH,WAAW,QACXkC,IAAI9H,IACJ4F,WAAW,YACXkC,IAAI/H,IACPE,GACA9B,EACGyH,WAAW,eACXkC,IAAI7H,IACJ2F,WAAW,YACXkC,IAAI/H,SACPwP,IAdR,qBAAO6F,GAAP,MAAsBC,GAAtB,MAiBA,GAAsB1P,YACpB5F,KACGC,GACG7B,EACGyH,WAAW,QACXkC,IAAI9H,IACJ4F,WAAW,YACXkC,IAAI/H,IACJ6F,WAAW,eACX0J,QAAQ,YAAa,OACxBrP,GACA9B,EACGyH,WAAW,eACXkC,IAAI7H,IACJ2F,WAAW,YACXkC,IAAI/H,IACJ6F,WAAW,eACX0J,QAAQ,YAAa,YACxBC,IAlBDC,GAAP,qBAoBM8F,GAAcpN,YAAY3F,GAC1BpC,GAAS+H,YAAY5F,GAC3B,GAAoB6S,YAClBpV,KACGC,GACG7B,EAAGyH,WAAW,QAAQkC,IAAI9H,IAC1BC,GACA9B,EAAGyH,WAAW,eAAekC,IAAI7H,SACjCsP,IANDgG,GAAP,qBAQMC,GACJzV,KACCC,GAAmB,OAChBuV,SADgB,IAChBA,QADgB,EAChBA,GAAW/O,OAAO9H,KAClBuB,GAAqB,OACrBsV,SADqB,IACrBA,IADqB,UACrBA,GAAW/O,OAAOX,aADG,iBACrB,EAAyB0B,MAAK,SAAC1I,GAC7B,OAAIgH,GAAM,KAAOA,GAAM,GAAWhH,EAAKsI,MAAQH,EAAQG,IAC3CH,EAAQG,MAAQtI,EAAKsI,cAHd,aACrB,EAGIF,iBACJsI,GAUAnP,GAAa8H,YAAY9F,GAC/B,OACE,uBACE0B,WACE2M,GAAYtQ,IAAUC,GAElB,2BADA,kCAGNsE,MAAO,CAAE8G,MAAOA,GANlB,UAQG+H,IACC,uBACEvF,IAAKA,EACLlK,UAAU,0BACVY,MAAO,CACL6O,SAAU,QACVkC,MAAOC,OAAOC,WAAapC,GAAST,aAAa2C,MAAQ,GACzDG,IACErC,GAAST,aAAa+C,EAAI,IAAM,GAC5BtC,GAAST,aAAa+C,EAAI,IAC1B,GACNC,OAAQ,IAVZ,SAaE,eAAC,KAAD,CAAQvI,SA5JC,SAACzI,GAChB,IAAIwI,EAAQxI,EAAE+N,OACdQ,EAAc/F,GACdgG,GAAgB9E,QA4Jd,uBAAK1K,UAAU,yBAAf,UACE,sBAAKA,UAAU,+BAAf,SACE,uBAAKA,UAAU,sCAAf,UACE,uBAAMA,UAAU,4BAAhB,SACGwR,GACG,UACAxV,GACA,SACA,gBAELA,IACC,uBAAMgE,UAAU,cAAhB,SAA+B0R,UAIrC,uBAAK1R,UAAU,gCAAf,UACG3D,IACC,yBACE2D,UAAU,iCACV6H,MAAM,oBACNnH,QAvDS,WACnBiB,EACEnF,EAAc,CACZF,YAAY,KAGhByT,MA8CQ,SAKE,eAAC,KAAD,MAGJ,yBACE/P,UAAU,iCACVU,QAASqP,GACTlI,MAAM,QAHR,SAKE,eAAC,KAAD,YAKL2J,IACC,sBAAKxR,UAAU,uBAAf,SACE,uBAAKA,UAAU,8BAAf,UACE,sBAAKA,UAAU,mCAAf,SACE,sBAAK0I,IAAKpF,EAAUqF,IAAI,OAE1B,uBAAK3I,UAAU,uBAAf,UACE,sBAAKA,UAAU,6BAAf,SAA6C6H,IAC7C,sBAAK7H,UAAU,yBAAf,SACE,eAAC,KAAD,CACEA,UAAYxC,EAA8B,gBAAnB,wBAK7B,yBACE,kBACS,OAAP0F,QAAO,IAAPA,OAAA,EAAAA,EAASG,QAAT,OAAiB/H,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAc+H,KAAM,QAAU,QAEjD,iBAAe,eACfrD,UAAU,gCACVY,MAAO,CAAEC,MAAM,qBAAuBoR,WAAY,OANpD,SAQG3C,GAAY,cAGf,uBAAKtP,UAAU,yBAAf,UACE,uBAAKA,UAAU,wBAAf,UACE,sBAAKA,UAAU,+BAAf,0BACA,sBAAKA,UAAU,+BAAf,gBACG1E,QADH,IACGA,OADH,EACGA,EAAc6H,iBAGnB,uBAAKnD,UAAU,wBAAf,UACE,sBAAKA,UAAU,+BAAf,uBACA,sBAAKA,UAAU,+BAAf,gBACG1E,QADH,IACGA,OADH,EACGA,EAAc+L,aAGnB,uBAAKrH,UAAU,wBAAf,UACE,sBAAKA,UAAU,+BAAf,wBACA,sBAAKA,UAAU,+BAAf,SAA+CxE,OAEjD,uBAAKwE,UAAU,wBAAf,UACE,sBAAKA,UAAU,+BAAf,2BAGA,sBAAKA,UAAU,+BAAf,gBACG1E,QADH,IACGA,OADH,EACGA,EAAcgF,mBAQ1BjE,IACC,sBAAK2D,UAAU,kCAAf,SACG8P,GACC,eAAC,GAAD,IAEA,4CACGW,SADH,IACGA,QADH,EACGA,GAAenL,KAAI,SAACtB,GACnB,IAAIkN,EAAgB,OAAGrB,SAAH,IAAGA,QAAH,EAAGA,GAAgBrM,KAAKC,MAAK,SAACyO,GAChD,OAAIA,EAAKxP,OAAOuI,QACPiH,EAAKxP,OAAOuI,UAAYjH,EAAIJ,GACzBsO,EAAKxP,OAAOuK,YAAcjJ,EAAIJ,MAExChJ,EAAO,GACPqW,EAAO,GAgBX,IAdA,OAAIC,QAAJ,IAAIA,OAAJ,EAAIA,EAAkBxO,OAAO5H,UAC3BF,EAAI,OAAG8U,SAAH,IAAGA,QAAH,EAAGA,GAAOlM,KACXC,MAAK,SAACO,GAAD,OAASA,EAAIJ,KAAOsN,EAAiBxO,OAAO5H,UACjD4H,OAAO9H,KACVqW,EAAKC,iBAAmBA,EAAiBxO,SAE3C,OAAIwO,QAAJ,IAAIA,OAAJ,EAAIA,EAAkBxO,OAAOwK,gBAC3BtS,EAAO,iBACPqW,EAAKC,iBAAmBA,EAAiBxO,SAE3C,OAAIwO,QAAJ,IAAIA,OAAJ,EAAIA,EAAkBxO,OAAOuI,UAC3BzI,QAAQC,IAAI,SAAU7H,GAGpBoJ,EAAItB,OAAQ,CACd,MAQIsB,EAAItB,OAPNI,EADF,EACEA,QACAuH,EAFF,EAEEA,UACAtP,EAHF,EAGEA,KACAqP,EAJF,EAIEA,UACA/G,EALF,EAKEA,IACAsH,EANF,EAMEA,QACAJ,EAPF,EAOEA,UAKF,OAHA/H,QAAQC,IAAI,OACZwO,EAAK5N,IAAMA,EACX4N,EAAKrN,GAAKI,EAAIJ,GAEZ,uBACE5D,UAAU,uBACVkF,KAAK,SACLxE,QAAS,kBAAMsQ,GAAcC,IAH/B,UAKE,sBAAKjR,UAAU,wBAAf,SAAwCpF,IACxC,eAAC,GAAD,CACEkQ,WAAY,kBAAMkG,GAAcC,IAChCzG,kBAAmBiF,GACnB/O,QAAS8P,GAET1N,QAASA,EACTuH,UAAWA,EACXF,SAAUpP,EACVqP,UAAWA,EACX/G,IAAKA,EACLsH,QAASA,EACTF,WAAYA,EACZC,YAAaA,EACbyH,MAAM,GACNzK,MAAOA,EACP9D,GAAII,EAAIJ,GACR2G,UAAWA,EACXK,SAAS,GAbJ5G,EAAIJ,eAwB1B5H,IACC,sBAAKgE,UAAU,uBAAf,SACGuR,KAAkBD,GACjB,eAAC,GAAD,IAEA,qCACE,uBAAKtR,UAAU,4BAAf,UACGsR,IACC,sBAAKtR,UAAU,mBAAf,SACE,eAAC,GAAD,CACEwK,kBAAmBiF,GACnB/O,QAAS8P,GAET1N,QAAO,UAAEwO,GAAc5O,cAAhB,aAAE,EAAsBI,QAC/BuH,UAAS,UAAEiH,GAAc5O,cAAhB,aAAE,EAAsB2H,UACjCF,SAAQ,UAAEmH,GAAc5O,cAAhB,aAAE,EAAsB3H,KAChCqP,UAAS,UAAEkH,GAAc5O,cAAhB,aAAE,EAAsB0H,UACjC/G,IAAG,UAAEiO,GAAc5O,cAAhB,aAAE,EAAsBW,IAC3BsH,QAAO,UAAE2G,GAAc5O,cAAhB,aAAE,EAAsBiI,QAC/BF,WAAYA,EACZC,YAAaA,EACbyH,MAAM,GACNzK,MAAOA,EACP9D,GAAI3H,GACJsO,UAAS,UAAE+G,GAAc5O,cAAhB,aAAE,EAAsB6H,UACjCM,UAAU,GAbL5O,OAiBC,OAAXyP,SAAW,IAAXA,QAAA,EAAAA,GAAalI,KAAKqL,QAAS,GAC1B,sBAAK7O,UAAU,sBAAf,SACE,uBAAKA,UAAU,6BAAf,UACE,uBAAMA,UAAU,6BAAhB,UACc,OAAX0L,SAAW,IAAXA,QAAA,EAAAA,GAAalI,KAAKqL,QAAS,GACb,OAAXnD,SAAW,IAAXA,QAAA,EAAAA,GAAalI,KAAKqL,QAAS,YAChB,OAAXnD,SAAW,IAAXA,QAAA,EAAAA,GAAalI,KAAKqL,QAAS,WAEjC,qBAAI7O,UAAU,mCA/BtB,OAmCG0L,SAnCH,IAmCGA,QAnCH,EAmCGA,GAAalI,KAAK8B,KAAI,SAAC8M,GACtB,MAQIA,EAAW1P,OAPbI,EADF,EACEA,QACAuH,EAFF,EAEEA,UACAtP,EAHF,EAGEA,KACAqP,EAJF,EAIEA,UACA/G,EALF,EAKEA,IACAsH,EANF,EAMEA,QACAJ,EAPF,EAOEA,UAEF,OACE,eAAC,GAAD,CACEC,kBAAmBiF,GACnB/O,QAAS8P,GAET1N,QAASA,EACTuH,UAAWA,EACXF,SAAUpP,EACVqP,UAAWA,EACX/G,IAAKA,EACLsH,QAASA,EACTF,WAAYA,EACZC,YAAaA,EACbyH,MAAM,GACNzK,MAAOA,EACP9D,GAAIwO,EAAWxO,GACf2G,UAAWA,EACXU,QAAShP,IAbJmW,EAAWxO,OAiBtB,eAAC,GAAD,CAAWiH,UAAU,EAAM5O,gBAAiBA,gBC3W7CoW,OAjNf,YAOI,IANFC,EAMC,EANDA,YACAC,EAKC,EALDA,UAEAC,GAGC,EAJDC,QAIC,EAHDD,UACA3H,EAEC,EAFDA,SACA5O,EACC,EADDA,gBAEMlB,EAAOqJ,YAAYpF,IACnB0T,EAAWlE,iBAAO,MACxB,EAA0BnN,mBAAS,IAAnC,mBAAOsR,EAAP,KAAcC,EAAd,KA0CMC,EAAW,SAAC7R,GAChB,IAAIwI,EAAQxI,EAAE+N,OACd6D,EAASD,EAAQnJ,IAGnB,EAAoCnI,oBAAS,GAA7C,mBAAOyR,EAAP,KACA,GADA,KACgCzR,mBAAS,OAAzC,mBAAOoO,EAAP,KAAiBjD,EAAjB,KAQAxG,qBAAU,WACR,IAAM+M,EAAkBtM,SAASC,cAAc,qBAEzCsM,GADOvM,SAASwM,iBAAiB,kCAClBxM,SAASC,cAAc,mBACtCwM,EAAazM,SAASC,cAAc,iBACpCyM,EAAS1M,SAASC,cAAc,qBAChC0M,EAAmB3M,SAASC,cAAc,uBAC1C2M,EAAiB5M,SAASC,cAAc,cACxC4M,EAAS7M,SAASC,cAAc,eAChC6M,EAAqB9M,SAASC,cAAc,yBAC5C8M,EAAqB/M,SAASC,cAClC,6BAGI+M,EAAW,WACfV,EAAgB9C,UAAUC,OAAO,aAE7BwD,EAAY,WAChBX,EAAgB9C,UAAUlM,IAAI,aAYhC,OAVK8G,IACH0I,EAAmBjD,iBAAiB,QAASmD,GAC7CL,EAAiB9C,iBAAiB,QAASoD,GAC3CL,EAAe/C,iBAAiB,QAASoD,GACzCJ,EAAOhD,iBAAiB,QAASoD,GACjCV,EAAa1C,iBAAiB,QAASoD,GACvCR,EAAW5C,iBAAiB,QAASoD,GACrCP,EAAO7C,iBAAiB,QAASoD,GACjCF,EAAmBlD,iBAAiB,QAASoD,IAExC,WACL,IAAK7I,EAAU,CAEX0I,EAAmBhD,oBAAoB,QAASkD,OAKrD,CAACX,IAGJ,IAAM5W,EAAsBkI,YAAY1F,GAClCvC,EAAwBiI,YAAYzF,GAiD1C,OAbAqH,qBAAU,WACR,SAASmK,EAAmBC,GACtBsC,EAASpE,UAAYoE,EAASpE,QAAQ+B,SAASD,EAAMjO,SACvDqK,EAAY,MAKhB,OADA/F,SAAS6J,iBAAiB,YAAaH,GAChC,WAEL1J,SAAS8J,oBAAoB,YAAaJ,OAI5C,uBAAKnQ,UAAU,uBAAuB4D,GAAG,qBAAzC,UACGiH,EACC4E,GACE,uBACEvF,IAAKwI,EACL1S,UAAU,0BACVY,MAAO,CACL6O,SAAU,QACVkC,MACEC,OAAOC,YAAP,OAAoBpC,QAApB,IAAoBA,OAApB,EAAoBA,EAAUkC,OAAQ,IAAM,EACxCC,OAAOC,YAAP,OAAoBpC,QAApB,IAAoBA,OAApB,EAAoBA,EAAUkC,OAAQ,IACtC,EACNG,IAAKF,OAAO+B,YAAclE,EAASsC,EACnCC,OAAQ,IAVZ,SAaE,eAAC,KAAD,CAAQvI,SAAUoJ,MAItB,uBAAM7S,UAAU,4BAAhB,SACE,eAAC,KAAD,CAAQyJ,SAAUoJ,MAItB,kCACE,sBACE7S,UAAU,uBACVkF,KAAK,SACLxE,QAhIe,WACrB,IAAIkT,EAAcnN,SACfC,cAAc,uBACduI,wBACHzC,EAAYoH,IAyHR,SAKE,eAAC,KAAD,MAEF,wBACEvT,MAAOsS,EACPzS,KAAK,OACLC,SAnJmB,SAACa,GAC1B,IAAM6S,EAAWC,mBAAQ9S,EAAEmB,OAAO9B,MAAO,CAAE0T,OAAQ,YACnDnB,EAASiB,IAkJHrN,YAAaqE,EAAW,WAAH,mBAA4ByH,KAEnD,yBACE5R,QAASmK,EAzFW,SAAC7J,GAC3BA,EAAEqB,iBACY,KAAVsQ,IACEzW,GACFsG,QAAQC,IAAI,SACZpI,EAAGyH,WAAW,QACXkC,IAAI9H,GACJ4F,WAAW,YACXkC,IAAI/H,GACJ6F,WAAW,eACXiC,IAAI,CACHjB,QAAS6P,EACTtI,UAAW1Q,IAASW,UAAU6S,WAAWC,kBACzCrS,KAAMA,EAAKoI,YACXiH,UAAWrP,EAAKuI,SAChBD,IAAKtI,EAAKsI,OAELlH,GACT9B,EAAGyH,WAAW,eACXkC,IAAI7H,GACJ2F,WAAW,YACXkC,IAAI/H,GACJ6F,WAAW,eACXiC,IAAI,CACHjB,QAAS6P,EACTtI,UAAW1Q,IAASW,UAAU6S,WAAWC,kBACzCrS,KAAMA,EAAKoI,YACXiH,UAAWrP,EAAKuI,SAChBD,IAAKtI,EAAKsI,OAIlBuP,EAAS,KAyDuC,SAAC5R,GAAD,OA3L9B,SAACA,GAEnB,GADAA,EAAEqB,iBACW,IAATsQ,EAAa,CACf,IAAKJ,EAAW,OAAO,EAClBC,GAcHnY,EAAGyH,WAAW,eAAekC,IAAIuO,GAAWzQ,WAAW,YAAYiC,IAAI,CACrEjB,QAAS6P,EACTtI,UAAW1Q,IAASW,UAAU6S,WAAWC,kBACzCrS,KAAMA,EAAKoI,YACXiH,UAAWrP,EAAKuI,SAChBD,IAAKtI,EAAKsI,MAEZhJ,EAAGyH,WAAW,eACXkC,IAAIuO,GACJnL,OAAO,CACNa,cAAe,CAAClN,EAAKsI,SAvBzBhJ,EAAGyH,WAAW,QAAQkC,IAAIuO,GAAWzQ,WAAW,YAAYiC,IAAI,CAC9DjB,QAAS6P,EACTtI,UAAW1Q,IAASW,UAAU6S,WAAWC,kBACzCrS,KAAMA,EAAKoI,YACXiH,UAAWrP,EAAKuI,SAChBD,IAAKtI,EAAKsI,MAEZhJ,EAAGyH,WAAW,QACXkC,IAAIuO,GACJnL,OAAO,CACNa,cAAe,CAAClN,EAAKsI,QAgB3BuP,EAAS,KA4J4C9U,CAAYkD,IAC7Dd,KAAK,SACLF,UAAU,gCAHZ,SAKE,eAAC,KAAD,aCvMKgU,OAlBf,YAA+D,IAAnCrI,EAAkC,EAAlCA,KAAMsI,EAA4B,EAA5BA,SAAU5Q,EAAkB,EAAlBA,IAAKgH,EAAa,EAAbA,UAE/C,OACE,uBAAKrK,UAAU,gCAAf,WAEQqK,IAAYhH,IACZ,uBAAKrD,UAAU,8BAAf,UACE,sBAAKA,UAAU,qCACf,sBAAKA,UAAU,4BAAf,SACG2L,EAAKG,KAAO,IAAMH,EAAKK,MAAQ,IAAML,EAAKuI,UANvD,OAUOD,QAVP,IAUOA,OAVP,EAUOA,EAAU3O,KAAI,SAACtB,GAAD,OAASA,S,oBC+enBmQ,OA7df,SAAcpU,GAAQ,IAAD,wBACb4B,EAAWC,cACX6Q,EAAUjE,iBAAO,MACjBzT,EAAOqJ,YAAYpF,IAGnBlE,EAASsJ,YAAYrF,IACrB5D,EAAmBiJ,YAAYjF,IACrC,EAAoCkC,mBAAS,IAA7C,mBAAOoJ,EAAP,KAAmB8E,EAAnB,KACA,EAAsClO,oBAAS,GAA/C,mBAAOqJ,EAAP,KAAoB8E,EAApB,KACK1U,GAAWK,GACdwG,EACEvE,EAAU,CACRtC,OATgB,0BAatB,MAAmC+G,YACjC/G,GAAUT,EAAGyH,WAAW,QAAQkC,IAAIlJ,IADtC,mBAAOW,EAAP,KAAoB2Y,EAApB,KAIA,EAAgCvS,YAC9B/G,GACET,EACGyH,WAAW,QACXkC,IAAIlJ,GACJgH,WAAW,YACX0J,QAAQ,YAAa,QAN5B,mBAAOmE,EAAP,KAAqBrL,EAArB,KAUA,EAAgCjD,mBAAS,MAAzC,mBAAOoO,EAAP,KAAiBjD,EAAjB,KACMgE,EAAgB,SAACf,GACrBjD,EAAYiD,GACZjN,QAAQC,IAAIgN,IAGRvF,EAAMsE,iBAAO,MACnBxI,qBAAU,WACR,SAASmK,EAAmBC,GACtBlG,EAAIoE,UAAYpE,EAAIoE,QAAQ+B,SAASD,EAAMjO,SAC7CqK,EAAY,MAKhB,OADA/F,SAAS6J,iBAAiB,YAAaH,GAChC,WAEL1J,SAAS8J,oBAAoB,YAAaJ,OAK9C,IAMMjD,EAAe9I,YAAY9E,IACjC,EAA8BuC,YAAcxH,EAAGyH,WAAW,UAA1D,mBAAOC,EAAP,KAAcC,GAAd,KACMtG,GAAU,OAAGqG,QAAH,IAAGA,OAAH,EAAGA,EAAOyB,KAAKC,MAC7B,SAACO,GAAD,OAASA,EAAItB,OAAOW,MAAQlI,KAE9B,GAA4C0G,YAC1CqL,GACE7S,EACGyH,WAAW,eACXkC,IAAIkJ,GACJpL,WAAW,YACX0J,QAAQ,YAAa,QAN5B,qBAAO6I,GAAP,MAA2BC,GAA3B,MAQMC,IAAwB,OAAV7Y,SAAU,IAAVA,IAAA,UAAAA,GAAYgH,cAAZ,eAAoBS,aAApB,OAChBzH,SADgB,IAChBA,QADgB,EAChBA,GAAYgH,OAAOS,YADH,OAEhBzH,SAFgB,IAEhBA,QAFgB,EAEhBA,GAAYgH,OAAOpC,MACjBkU,GAAS,OAAG9Y,SAAH,IAAGA,IAAH,UAAGA,GAAYgH,cAAf,aAAG,EAAoBY,SAChCmR,GAAY,OAAG/Y,SAAH,IAAGA,IAAH,UAAGA,GAAYgH,cAAf,aAAG,EAAoBlF,SAInCkX,GAAWlG,iBAAO,MAClB1S,GAAcsI,YAAYxE,IAC1B7D,GAAoBqI,YAAYvE,IAGtCmG,qBAAU,WAML,IAAD,GALFxD,QAAQC,IAAI3G,KAET6T,IAAgB0E,IAChBvY,IACAC,MAEDyG,QAAQC,IAAI,WACL,OAAPgQ,QAAO,IAAPA,GAAA,UAAAA,EAASnE,eAAT,SAAkBC,eAAe,CAC/BoG,SAAU,WAEZ7G,YAAW,WAAO,IAAD,EACR,OAAP2E,QAAO,IAAPA,GAAA,UAAAA,EAASnE,eAAT,SAAkBC,eAAe,CAC/BoG,SAAU,aAEX,QAEJ,QACDhF,QADC,IACDA,OADC,EACDA,EAAcnM,KAAKqL,OADlB,OAEDwF,SAFC,IAEDA,QAFC,EAEDA,GAAoB7Q,KAAKqL,OACzBuF,EACAE,KAGF,IAAMM,GAAgB,GACtB9Z,EAAM,OACF6U,QADE,IACFA,KAAcnM,KAAK8B,KAAI,SAACtB,GACtB,MACEA,EAAItB,OADEI,EAAR,EAAQA,QAASuH,EAAjB,EAAiBA,UAAWtP,EAA5B,EAA4BA,KAAMqP,EAAlC,EAAkCA,UAAW/G,EAA7C,EAA6CA,IAAKsH,EAAlD,EAAkDA,QAE5CgB,EAAO,IAAIC,KAAJ,OAASvB,QAAT,IAASA,OAAT,EAASA,EAAWwB,UAC7BC,EAAOH,EAAKI,UACZmI,EAAOvI,EAAKkJ,cACZ7I,EAAQL,EAAKM,WACb6I,EAAShJ,EAAO,IAAME,EAAQ,IAAMkI,EAEpC9H,GADQT,EAAKQ,WACHR,EAAKU,cACfD,EAAU,KACZA,EAAU,IAAMA,GAEbwI,GAAcE,KAASF,GAAcE,GAAU,IAC/CF,GAAcE,GAAQnJ,OACzBiJ,GAAcE,GAAd,KAAgC,CAC9BhJ,KAAMA,EACNoI,KAAMA,EACNlI,MAAOA,IAEX4I,GAAcE,GAAd,UAAqCzK,EACrCuK,GAAcE,GAAQrM,KACpB,eAAC,GAAD,CACEyB,IAAKlG,EAAIJ,KAAO9H,GAAc4Y,GAAW,KACzClK,kBAAmBiF,EACnB/O,QAAS8P,EAET5M,GAAII,EAAIJ,GACRd,QAASA,EACTuH,UAAWA,EACXF,SAAUpP,EACVqP,UAAWA,EACX/G,IAAKA,EACLkH,UAAWvG,EAAItB,OAAO6H,UACtBiI,UAAU,EACV/H,WAAYA,EACZC,YAAaA,EACbC,QAASA,EACTI,cAAiBjQ,GAZZkJ,EAAIJ,QA3Bb,OA2CFyQ,SA3CE,IA2CFA,OAAoB7Q,KAAK8B,KAAI,SAACtB,GAC5B,MACEA,EAAItB,OADEI,EAAR,EAAQA,QAASuH,EAAjB,EAAiBA,UAAWtP,EAA5B,EAA4BA,KAAMqP,EAAlC,EAAkCA,UAAW/G,EAA7C,EAA6CA,IAAKsH,EAAlD,EAAkDA,QAE5CgB,EAAO,IAAIC,KAAJ,OAASvB,QAAT,IAASA,OAAT,EAASA,EAAWwB,UAC7BC,EAAOH,EAAKI,UACZmI,EAAOvI,EAAKkJ,cACZ7I,EAAQL,EAAKM,WACb6I,EAAShJ,EAAO,IAAME,EAAQ,IAAMkI,EAEpC9H,GADQT,EAAKQ,WACHR,EAAKU,cACfD,EAAU,KACZA,EAAU,IAAMA,GAEbwI,GAAcE,KAASF,GAAcE,GAAU,IAC/CF,GAAcE,GAAQnJ,OACzBiJ,GAAcE,GAAd,KAAgC,CAC9BhJ,KAAMA,EACNoI,KAAMA,EACNlI,MAAOA,IAGX4I,GAAcE,GAAd,UAAqCzK,EACrCuK,GAAcE,GAAQrM,KACpB,eAAC,GAAD,CACEyB,IAAKlG,EAAIJ,KAAO9H,GAAc4Y,GAAW,KACzClK,kBAAmBiF,EACnB/O,QAAS8P,EAET1N,QAASA,EACTuH,UAAWA,EACXF,SAAUpP,EACVqP,UAAWA,EACX/G,IAAKA,EACLmP,UAAU,EACV/H,WAAYA,EACZC,YAAaA,EACbC,QAASA,EACTJ,UAAWvG,EAAItB,OAAO6H,UACtB3G,GAAII,EAAIJ,GACRoH,oBAAuBkC,GAZlBlJ,EAAIJ,QAgBnB,IAAMmR,GAAmBC,OAAOC,QAAQL,IAExC5O,qBAAU,WACHoO,GACHzS,EAAS3D,EAAe,CAAEvC,YAAW,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAaiH,YAErD,CAAC5H,EAAQW,IAEZuK,qBAAU,WACHhE,IACHL,EACE1D,EAAc,CACZvC,WAAU,OAAEA,SAAF,IAAEA,QAAF,EAAEA,GAAYgH,YAI7B,CAACwK,IAEJ,IAAM1H,GAAO,OAAG/J,QAAH,IAAGA,GAAH,UAAGA,EAAaiH,cAAhB,aAAG,EAAqB8C,QAErC,IADgB,OAAGA,SAAH,IAAGA,OAASb,QACJtD,oBAAS,IAAjC,qBAAO6T,GAAP,MAAaC,GAAb,MAKAnP,qBAAU,WACR,GAAIkP,KAASd,EAAa,CACxB,IAAIgB,EAAU,OAAG5P,SAAH,IAAGA,QAAH,EAAGA,GAASb,QACrByQ,IAAYA,EAAa,IAC9BA,EAAW3M,KAAK1N,EAAKsI,KACrBb,QAAQC,IAAI2S,GACZ/a,EAAGyH,WAAW,QACXkC,IAAIlJ,GACJsM,OAAO,CACN5B,QAAS4P,IAEV7S,MAAK,WACJ,IAAIoQ,EAAK,kBAAclX,EAAYiH,OAAO9H,KAAjC,KACTP,EAAGyH,WAAW,QAAQkC,IAAIlJ,GAAQgH,WAAW,YAAYiC,IAAI,CAC3DjB,QAAS6P,EACTtI,UAAW1Q,IAASW,UAAU6S,WAAWC,kBACzCrS,KAAMA,EAAKoI,YACXiH,UAAWrP,EAAKuI,SAChBD,IAAKtI,EAAKsI,SAIlB,OAAO,WACL8R,IAAQ,MAET,CAACD,GAAMd,IAEV,IAMIiB,GACAC,GACEC,GAA2BnR,YAAY/E,IAC7C,GAAgCgC,mBAAS,SAAzC,qBAAOmU,GAAP,MAAiBC,GAAjB,MAmEA,OAlEAzP,qBAAU,WACRxD,QAAQC,IAAI,WACZ,IAAMuN,EAAgBvJ,SAASC,cAAc,mBACvC0M,EAAmB3M,SAASC,cAAc,uBAC1CgP,EAAiBjP,SAASC,cAC9B,4CAGI8M,EAAqB/M,SAASC,cAClC,6BAGIiP,EAAmB,WACvBN,GAAczD,OAAOC,YACrByD,GAAYtF,EAAc4F,aAEZ,OACZ,OAACxC,QAAD,IAACA,OAAD,EAACA,EAAkBnD,UAAUI,SAAS,sBAEtB,OAAhB+C,QAAgB,IAAhBA,KAAkBnD,UAAUlM,IAAI,oBAChC0R,IAAY,GACZjT,QAAQC,IAAI,KAER4S,GAAc,MACA,OAAhBjC,QAAgB,IAAhBA,KAAkBnD,UAAUlM,IAAI,oBAChC0R,IAAY,GACC,OAAbzF,QAAa,IAAbA,KAAeC,UAAUC,OAAO,YAChC1N,QAAQC,IAAI,KACR4S,IAAe,KAAOE,KACX,OAAbvF,QAAa,IAAbA,KAAeC,UAAUlM,IAAI,YACX,OAAlByP,QAAkB,IAAlBA,KAAoBvD,UAAUlM,IAAI,QAClCvB,QAAQC,IAAI,MAET8S,KACU,OAAbvF,QAAa,IAAbA,KAAeC,UAAUC,OAAO,YAChC1N,QAAQC,IAAI,MAIhB6S,IAAa,MAAb,OACAlC,QADA,IACAA,OADA,EACAA,EAAkBnD,UAAUI,SAAS,uBAErB,OAAhB+C,QAAgB,IAAhBA,KAAkBnD,UAAUC,OAAO,oBACnC1N,QAAQC,IAAIiT,GACZD,IAAY,GACZjT,QAAQC,IAAI,MAId,IAAMoT,EAAkBpP,SAASC,cAAc,qBACzCoP,EAAe,WACJ,OAAfD,QAAe,IAAfA,KAAiB5F,UAAUC,OAAO,kBAEpCF,EAAcM,iBAAiB,QAASwF,GACxCtC,EAAmBlD,iBAAiB,QAASwF,IAG/CH,IACA/D,OAAOtB,iBAAiB,SAAUqF,MAIpCnT,QAAQC,IAAIgN,GAEKrL,YAAY9F,GAG3B,sBAAK0B,UAAU,iBAAf,SACGsE,GAAWgQ,IAAiBtS,GAC3B,eAAC,GAAD,IAEA,uCACGyN,GACC,uBACEvF,IAAKA,EACLlK,UAAU,0BACVY,MAAO,CACL6O,SAAU,QACVkC,MAAOC,OAAOC,WAAapC,EAAST,aAAa2C,MAAQ,GACzDG,IACErC,EAAST,aAAa+C,EAAI,IAAM,GAC5BtC,EAAST,aAAa+C,EAAI,IAC1B,GACNC,OAAQ,IAVZ,SAaE,eAAC,KAAD,CAAQvI,SAnSH,SAACzI,GAChB,IAAIwI,EAAQxI,EAAE+N,OACdQ,EAAc/F,GACdgG,GAAgB9E,QAmSV,uBAAK1K,UAAU,eAAf,UACE,uBAAKA,UAAU,qBAAf,UACE,sBACEU,QAtGM,WAClB,IAAI0S,EAAmB3M,SAASC,cAAc,uBAC9B,OAAhB0M,QAAgB,IAAhBA,KAAkBnD,UAAUlM,IAAI,kBAqGpB/D,UACEwV,GACI,8EACA,sEALR,SAQE,gCACE,eAAC,KAAD,QAGH1a,EACC,uBACEoK,KAAK,SACL,iBAAe,QACf,iBAAgB,KAAYpK,EAC5BkF,UAAU,6BAJZ,UAME,uBAAMA,UAAU,qBAAhB,eACA,uCAAOvE,QAAP,IAAOA,GAAP,UAAOA,EAAaiH,cAApB,aAAO,EAAqB9H,UAG9B,uBACEsK,KAAK,SACL,iBAAe,QACf,iBAAgB,KAAYgI,EAC5BlN,UAAU,6BAJZ,UAME,sBACEA,UAAU,uBACVY,MAAO,CAAEiE,gBAAgB,OAAD,OAAS2P,GAAT,MAF1B,SAIE,eAAC,KAAD,CACExU,UAAWyU,GAAe,gBAAkB,aAGhD,gCAAOF,WAIb,sBACEvU,UAAU,sBACV,iBAAgBlF,GAAUoS,EAAe,QAAU,GACnD,iBACEpS,GAAUoS,EACN,MAAapS,GAAkBoS,GAC/B,GANR,SASE,uBAAMhI,KAAK,SAAX,0BAIJ,uBAAKlF,UAAU,gBAAf,UACE,eAAC,GAAD,CACEoK,UAAU,wFACVD,SACErP,IACgB,OAAXW,QAAW,IAAXA,GAAA,UAAAA,EAAaiH,cAAb,eAAqBqT,WAArB,OACGta,QADH,IACGA,GADH,UACGA,EAAaiH,cADhB,aACG,EAAqBqT,UAAU5S,YAC/B,OAFJ,+BAGiB1H,QAHjB,IAGiBA,GAHjB,UAGiBA,EAAaiH,cAH9B,aAGiB,EAAqB9H,KAHtC,aAIA,mDAENkI,QACEhI,GACe,OAAXW,QAAW,IAAXA,GAAA,UAAAA,EAAaiH,cAAb,eAAqBsT,KAArB,OACEva,QADF,IACEA,GADF,UACEA,EAAaiH,cADf,aACE,EAAqBsT,IACrB,GAHA,kEAKAta,SALA,IAKAA,QALA,EAKAA,GAAYgH,OAAOS,YALnB,KAQRmH,aAAa,IApBjB,OAsBGyK,SAtBH,IAsBGA,QAtBH,EAsBGA,GAAkBzP,KAAI,SAACtB,GAAS,IAAD,EAC1B2H,EAAO3H,EAAI,GAAG2H,KACdtB,EAAYrG,EAAI,GAAGqG,UACnB4L,EAAS,UAAGjS,EAAI,GAAG,UAAV,aAAG,EAAWjE,MAAMsD,IACjC,OACE,eAAC,GAAD,CACEA,IAAK4S,EACL3R,QAASgQ,IAAiBhQ,EAE1BqH,KAAMA,EACNsI,SAAUjQ,EAAI,GACdqG,UAAWA,GAHNsB,EAAKG,KAAOH,EAAKK,MAAQL,EAAKuI,SAOzC,sBAAKlU,UAAU,cAAckK,IAAKuI,OAEpC,uBAAKzS,UAAU,eAAf,WACW,OAAPwF,SAAO,IAAPA,QAAA,EAAAA,GAASf,SAAS1J,EAAKsI,OAAQvI,IAAYA,EAC3C,eAAC,GAAD,CACEyX,UAAWzX,GAAkBoS,EAC7BoF,YAAaxX,EAAM,OAAGW,QAAH,IAAGA,GAAH,UAAGA,EAAaiH,cAAhB,aAAG,EAAqB9H,KAAO2Z,GAClD/B,UAAU1X,IAGZ,uBAAKkF,UAAU,sBAAf,UACE,uBAAKA,UAAU,eAAf,6BACkB,+CAAUvE,QAAV,IAAUA,GAAV,UAAUA,EAAaiH,cAAvB,aAAU,EAAqB9H,WAGjD,uBAAKoF,UAAU,gBAAf,UACE,yBAAQA,UAAU,kBAAkBU,QA/OnC,WACfyU,IAAQ,IA8OM,uBAGA,yBACEnV,UAAU,oBACV,iBAAe,QACf,iBAAgB,KAAOlF,EAHzB,oCAUN,sBAAKkF,UAAU,mBC7cZkW,OArCf,WACI,MAAwBjU,YAAa1H,GAArC,mBAAa+J,GAAb,WACA,EAAkCjD,oBAAS,GAA3C,mBAAO8U,EAAP,KAAkBC,EAAlB,KAQA,SAASC,IACLvI,YAAW,WACPsI,GAAcD,KAEhB,KAMN,OAjBAnQ,qBAAU,WAEN,OADAqQ,IACO,eAGR,CAAC/R,IAUJ+R,IAGI,uBAAKrW,UAAU,oBAAf,UACI,uBAAKA,UAAU,mBAAf,UACI,0CACA,uBAAKA,UAAU,OAAf,UACI,sBAAKA,UAAWmW,EAAU,gBAAgB,UAC1C,sBAAKnW,UAAWmW,EAAU,gBAAgB,UAC1C,sBAAKnW,UAAWmW,EAAU,gBAAgB,UAC1C,sBAAKnW,UAAWmW,EAAU,gBAAgB,UAC1C,sBAAKnW,UAAWmW,EAAU,gBAAgB,gBAGtD,gC,OCuFOG,OApHf,SAAsBvW,GACpB,IA+EIwW,EA/EExb,EAAOqJ,YAAYpF,IACnBwX,EACW,gBAAfzW,EAAMnF,MACE,OAAJG,QAAI,IAAJA,OAAA,EAAAA,EAAMoI,aACJpI,EAAKoI,YACL,GACa,YAAfpD,EAAMnF,OACF,OAAJG,QAAI,IAAJA,OAAA,EAAAA,EAAMsM,SACJtM,EAAKsM,QAEP,GACN,EAA0BhG,mBAASmV,GAAnC,mBAAO7D,EAAP,KAAcC,EAAd,KACA,EAA4BvR,mBAAQ,OAACtG,QAAD,IAACA,OAAD,EAACA,EAAMuI,UAA3C,mBAAOmT,EAAP,KAAeC,EAAf,KACM/U,EAAWC,cACX+U,EAAe,uCAAG,WAAO3V,GAAP,mBAAAgC,EAAA,yDAChB4T,EAAO5V,EAAEmB,OAAO0U,MAAM,GADN,wDAGhBC,EAAa1c,EAAQ8P,MACrB6M,EAAUD,EAAWE,MAAMJ,EAAKhc,MAJhB,SAKhBmc,EAAQE,IAAIL,GALI,mBAMtBF,EANsB,UAMNK,EAAQG,iBANF,+EAAH,sDAgBrB,EAAyBrV,YAAcxH,EAAGyH,WAAW,UAArD,mBAAOC,EAAP,KAAcuC,EAAd,KACM6S,EAAW,OAAGpV,QAAH,IAAGA,OAAH,EAAGA,EAAOyB,KAAKC,MAAK,SAACC,GAAD,OAAUA,EAAKhB,OAAOW,OAAZ,OAAoBtI,QAApB,IAAoBA,OAApB,EAAoBA,EAAMsI,QACnEO,EAAE,OAAGuT,QAAH,IAAGA,OAAH,EAAGA,EAAavT,GAClBwT,EAAU,uCAAG,4BAAApU,EAAA,yDACbjB,EAAQ1H,EAAGyH,WAAW,SACrBwC,IAAWV,IAAM7B,EAFL,qBAGXhC,EAAMqX,WAHK,oBAIM,UAAfrX,EAAMG,KAJG,gCAKL6B,EACHiC,IAAIJ,GACJwD,OAAO,CACN9D,SAAUmT,IAEX9T,OAAM,SAACkB,GAAD,OAAShB,MAAMgB,EAAIf,YAVjB,iCAWa,SAAf/C,EAAMG,KAXJ,oBAYQ,gBAAfH,EAAMnF,KAZC,kCAaHmH,EACHiC,IAAIJ,GACJwD,OAAO,CACNjE,YAAawP,IAEdhQ,OAAM,SAACkB,GAAD,OAAShB,MAAMgB,EAAIf,YAlBnB,mCAmBa,YAAf/C,EAAMnF,KAnBJ,kCAoBHmH,EACHiC,IAAIJ,GACJwD,OAAO,CACNC,QAASsL,IAEVhQ,OAAM,SAACkB,GAAD,OAAShB,MAAMgB,EAAIf,YAzBnB,QA2BbnB,EACElE,EAAa,CACXxC,aAAa,KA7BJ,4CAAH,qDAgDhB,OAZA+K,qBAAU,WAER,OADAoR,IACO,WACLzV,EACElE,EAAa,CACXxC,YAAa,WAIlB,CAAC8E,EAAMsX,SAIR,uBAAKrX,UAAU,kBAAf,UACE,wBAAOsX,QAAQ,GAAGtX,UAAU,aAA5B,SACGD,EAAMoS,QAEO,UAAfpS,EAAMG,KACL,iCACE,sBAAKwI,IAAK+N,EAAQ9N,IAAI,GAAG/H,MAAO,CAAE8G,MAAM,UACxC,wBACEwC,IAAK,SAACyI,GAAD,OAAY4D,EAAe5D,GAChCzS,KAAK,OACLC,SAAUwW,EACV3W,UAAU,gBAEZ,wBACEkF,KAAK,SACLlF,UAAU,iCACVU,QA3EW,WACnB6V,EAAa5P,SAuEP,4BAKkB,UAIpB,wBACEzG,KAAK,OACLF,UAAU,eACVK,MAAOsS,EACPxS,SAjFkB,SAACa,GACzB4R,EAAS5R,EAAEmB,OAAO9B,cCwFPkX,OA9Gf,WACE,IAAMH,GAAa,EACblU,EAAUkB,YAAYpF,IAC5B,EAAwCqC,oBAAS,GAAjD,mBAAOP,EAAP,KAAqBoB,EAArB,KACMjH,EAAcmJ,YAAYlF,IAChC,EAA4BmC,oBAAS,GAArC,mBAAOgW,EAAP,KAAerP,EAAf,KACA,EAAyBnG,YAAcxH,EAAGyH,WAAW,UAArD,mBAAOC,EAAP,KACMhH,GADN,KACU,OAAGgH,QAAH,IAAGA,OAAH,EAAGA,EAAOyB,KAAKC,MAAK,SAACC,GAAD,OAAUA,EAAKhB,OAAOW,OAAZ,OAAoBH,QAApB,IAAoBA,OAApB,EAAoBA,EAASG,SAC/DmU,EAAQ,OAAGzc,QAAH,IAAGA,OAAH,EAAGA,EAAM2H,OASjBf,EAAWC,cACX6V,EAAe,uCAAG,sBAAAzU,EAAA,sDAClBwU,GACF7V,EAAStE,EAAa,CAAEtC,KAAMyc,KAC9BhV,QAAQC,IAAI,cAAgB+U,EAASnQ,UAChC7E,QAAQC,IAAI,eAJG,2CAAH,qDAarB,OANAuD,qBAAU,WACJ/K,GACFwc,MAED,CAACxc,IAGF,sBACE+E,UAAU,aACV4D,GAAG,cACH2E,SAAS,KACT,kBAAgB,cAChB,cAAY,OALd,SAOE,sBAAKvI,UAAU,4EAAf,SACE,uBAAKA,UAAU,gCAAf,UACE,uBAAKA,UAAU,+BAAf,UACE,sBAAKA,UAAU,yBAAf,SACE,8BACE,sBAAKA,UAAU,OAAf,qCAGc,IAAjBc,GACC,sBAAKd,UAAU,gCAAf,iDAIF,yBAAQA,UAAU,iCAAiC,kBAAgB,QAAQ,iBAAe,eAA1F,SACE,eAAC,KAAD,SAIJ,sBAAKA,UAAU,2BAAf,SACE,sBAAKA,UAAU,yBAAf,SACE,uBAAKA,UAAU,yBAAf,UACE,uBAAKA,UAAU,oBAAf,UACE,eAAC,GAAD,CACEmS,MAAM,eACNvX,KAAK,cACLsF,KAAK,OACLkX,WAAYA,EACZC,OAAQA,IAEV,eAAC,GAAD,CACElF,MAAM,YACNvX,KAAK,UACLsF,KAAK,OACLkX,WAAYA,EACZC,OAAQA,OAIZ,sBAAKrX,UAAU,4BAAf,SACE,eAAC,GAAD,CACEmS,MAAM,gBACNjS,KAAK,QACLkX,WAAYA,EACZC,OAAQA,aAOlB,uBAAKrX,UAAU,kBAAf,UACE,yBACEA,UAAU,+CACV,kBAAgB,QAFlB,oBAOA,yBACEA,UAAU,+CACVU,QA1Fa,SAACM,GACxBA,EAAEqB,iBACF2F,GAAWqP,GACXnV,GAAgB,GAChB4L,YAAW,WACT5L,GAAgB,KACf,MAkFK,qCCrGGwV,OARf,SAAiB3X,GACb,OACI,sBAAKC,UAAU,gCAAgC2X,YAAa5X,EAAM4X,eCyG3DC,OAvGf,YAAkC,IAAXtT,EAAU,EAAVA,QACb3C,EAAWC,cACX7G,EAAOqJ,YAAYpF,IACnB1D,EAAe8I,YAAY7E,IAC3B+D,EAAQ,OAAGhI,QAAH,IAAGA,OAAH,EAAGA,EAAcgI,SACzBH,EAAW,OAAI7H,QAAJ,IAAIA,OAAJ,EAAIA,EAAc6H,YAC7BE,EAAG,OAAG/H,QAAH,IAAGA,OAAH,EAAGA,EAAc+H,IAEpB7F,GADK,OAAGlC,QAAH,IAAGA,KAAcgF,MACd,OAAGhF,QAAH,IAAGA,OAAH,EAAGA,EAAckC,UACzBgU,EAAc,WAChB7P,EAAS/D,EAAuB,CAC5BxC,6BAA6B,KAGjCuG,EAAS1E,EAAmB,CACxBjB,gBAAiB,QAErB2F,EAAS/E,EAAU,CACfP,OAAQ,QAEZsF,EAAS9E,EAAiB,CACtBT,eAAe,MAejBZ,EAAY4I,YAAY5E,IACxBqY,EAAa,WACf,IAAIC,EAAc,IAAIlM,KAClBM,EAAQ4L,EAAY3L,WACpBC,EAAU0L,EAAYzL,aACtBD,EAAU,KACdA,EAAU,IAAMA,GAIhBzK,EAAS5D,EAAQ,CACbvC,UAHY0Q,EAAQ,IAAME,EAAU,QAW5C,OAJApG,qBAAU,WACN+R,YAAYF,EAAY,OAEzB,CAACrc,IAEA,sBAAKoI,GAAK,eAAgB5D,UAAU,QAAS,cAAY,OAAOuI,SAAS,KAAK,kBAAgB,eAA9F,SACI,sBAAKvI,UAAU,qCAAf,SAEI,sBAAKA,UAAU,6BAAf,SACCsE,EAAQ,eAAC,GAAD,IACT,uCACI,sBAAKtE,UAAU,uBAAf,SACI,sBAAKkF,KAAK,SAAS,kBAAgB,QAAQxE,QAAS8Q,EAAaxR,UAAU,wBAAwBY,MAAS,CAACiE,gBAAgB,OAAD,OAASvB,EAAT,UAIhI,uBAAKtD,UAAU,qBAAf,UACI,sBAAKA,UAAU,4BAA4BkF,KAAK,SAASxE,QAAS8Q,EAAa,kBAAgB,QAA/F,SACKrO,IAEL,sBAAKnD,UAAWxC,EAAS,oCAAqC,6BAA9D,SACI,eAAC,KAAD,CAAuBwC,UAAU,gBAIzC,sBAAKA,UAAU,qBAAqBkF,KAAK,SAASxE,QAAS8Q,EAAa,kBAAgB,QAAQ,iBAAe,YAA/G,+BAIA,uBAAKxR,UAAU,2BAAf,UACI,sBAAKA,UAAU,kCAAf,wBAGA,sBAAKA,UAAU,kCAAf,SACKxE,OAIT,uBAAKwE,UAAU,wBAAf,UACI,yBAAQA,UAAU,4BAA4BU,QAjE9C,WAChB8B,QAAQC,IAAI,KACZd,EAASjE,EAAmB,CACxBvC,iBAAkBkI,MA8D8D,kBAAgB,QAApF,sBACK,OAAJtI,QAAI,IAAJA,OAAA,EAAAA,EAAMsI,OAAQA,GAAK,yBAAQrD,UAAU,4BAA4B,iBAAe,QAAQ,kBAAgB,QAAQ,iBAAe,eAA5G,uC,OCrF7BgY,OAVf,YAAoF,IAA/DC,EAA8D,EAA9DA,WAAY1X,EAAkD,EAAlDA,SAAsBJ,GAA4B,EAAxC+X,WAAwC,EAA5B/X,UAAUE,EAAkB,EAAlBA,MAAOgG,EAAW,EAAXA,SAEpE,OACI,uBAAKrG,UAAU,yBAAf,UACI,wBAAOsX,QAAQ,aAAatX,UAAU,aAAtC,SAAmD,kCAASiY,MAC5D,wBAAO5R,SAAUA,EAAUhG,MAASA,EAAOF,SAAYA,EAAUD,KAAK,OAAOF,UAAU,eAAeO,SAAUA,GAAkB,S,oBCqP/H4X,OAxOf,YAOI,IANFC,EAMC,EANDA,SACAC,EAKC,EALDA,QACAtC,EAIC,EAJDA,UACAnS,EAGC,EAHDA,GACA2B,EAEC,EAFDA,UACA+S,EACC,EADDA,YAEM3W,EAAWC,cACjB,EAAwBP,mBAAS+W,GAAjC,mBAAOxd,EAAP,KAAa2d,EAAb,KACA,EAAsBlX,mBAASgX,GAAoB,IAAnD,mBAAOrC,EAAP,KAAYwC,EAAZ,KAEAxS,qBAAU,WACRuS,EAAQH,GACRI,EAAOH,GAAoB,MAC1B,CAACD,EAAUC,IACd,MAAwChX,mBAAS,IAAjD,mBAAOP,EAAP,KAAqBoB,EAArB,KACA,EAA8Bb,oBAAS,GAAvC,mBAAOoX,EAAP,KAAgBC,EAAhB,KAmCM3d,EAAOqJ,YAAYpF,IACzB,EAA0BqC,oBAAS,GAAnC,mBAAOwB,EAAP,KAAc8V,EAAd,KACA,EAA0BtX,oBAAS,GAAnC,mBAAOuX,EAAP,KAAcC,EAAd,KACA,EAAwBxX,oBAAS,GAAjC,mBAWMvG,GAXN,UAWesJ,YAAYrF,KACvBqW,EAAU,OAAGkD,QAAH,IAAGA,OAAH,EAAGA,EAAa3T,QAC1BwJ,EAAK,OAAGiH,QAAH,IAAGA,OAAH,EAAGA,EAAYxQ,QAAQ7J,EAAKsI,KAC3B,OAAV+R,QAAU,IAAVA,KAAY9H,OAAOa,EAAO,GAC1BnI,qBAAU,WACR,GAAI4S,EAAO,CACTve,EAAGyH,WAAW,QACXkC,IAAIlJ,GACJsM,OAAO,CACN5B,QAAS4P,GAA0B,KAEpC7S,MAAK,WACJZ,EACEzD,EAAe,CACbvC,aAAa,QAIlBgH,OAAM,SAACkB,GAAD,OAAShB,EAAMgB,EAAIf,YAC5B,IAAI6P,EAAK,iBAAayF,EAAb,KACT/d,EAAGyH,WAAW,QAAQkC,IAAIlJ,GAAQgH,WAAW,YAAYiC,IAAI,CAC3DjB,QAAS6P,EACTtI,UAAW1Q,IAASW,UAAU6S,WAAWC,kBACzCrS,KAAMA,EAAKoI,YACXiH,UAAWrP,EAAKuI,SAChBD,IAAKtI,EAAKsI,SAGb,CAACuV,IAGJ,IAAM1L,EAAe9I,YAAY9E,IAC3BwZ,EAAa1U,YAAY1E,IACzBlE,EAAY4I,YAAY5E,IAc9B,OACE,uBACEuZ,MAAM,mDACNnV,GAAG,QACHsB,KAAK,WACL,kBAAgB,YAJlB,UAMGgI,GACC,qCACE,sBAAKlN,UAAU,cAAf,SACE,uBAAKA,UAAU,qBAAf,UACE,uBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,kBAAf,SACE,eAAC,KAAD,MAEF,uBAAKA,UAAU,qBAAf,UAAqCxE,EAArC,oBAEF,uBAAKwE,UAAU,YAAf,UACE,sBAAKA,UAAU,kBAAf,SACE,eAAC,KAAD,MAEF,sBAAKA,UAAU,qBAAf,gBAAqC8Y,QAArC,IAAqCA,OAArC,EAAqCA,EAAYxY,WAGnD,yBACEI,QArCY,WACxBiB,EACE/D,EAAuB,CACrBxC,6BAA6B,KAGjCuG,EACE9D,EAAgB,CACdvC,aAAcwd,MA8BN,kBAAgB,QAChB,iBAAgB,IAAMlV,EACtB5D,UAAU,oBAJZ,sCAYPlF,GACC,uCACE,uBAAKkF,UAAU,0BAAf,UACE,eAAC,GAAD,CACEiY,WAAW,OACX1X,UAAU,EACV2X,YAAY,EACZ/X,SA1Ia,SAACa,GACxB,IACIgY,EADUhY,EAAEmB,OAAO9B,MACS4Y,QAAQ,MAAO,KAC/CV,EAAQS,IAwIE3Y,MAAOzF,EACPyL,SAnJU,yBAmJAzC,IAEZ,eAAC,GAAD,CACEqU,WAAW,cACX9X,SA1IY,SAACa,GACvB,IAAIkY,EAAUlY,EAAEmB,OAAO9B,MACvBmY,EAAOU,IAyIG7Y,MAAO2V,IAET,wBACA,uBAAKhW,UAAU,sBAAf,UACE,yBACEA,UAAU,mCACVU,QA7IK,WACjB,GAAa,KAAT9F,EAIF,OAHAsH,EAAgB,2CAChBwW,GAAW,QACXH,EAAQH,GAGV/d,EAAGyH,WAAW,QACXkC,IAAIJ,GACJwD,OAAO,CACNxM,KAAMA,EACNob,IAAKA,IAENzT,MAAK,WACJmW,GAAW,GACXxW,EAAgB,qCAChB4L,YAAW,WACT5L,EAAgB,MACf,QAEJS,OAAM,SAACkB,GAAD,OAAS/C,EAAa+C,EAAIf,aAuHzB,kBAMC2V,EACC,sBAAKzY,UAAU,gCAAf,SACGc,IAGH,sBAAKd,UAAU,gCAAf,SACGc,UAMT,uBAAKd,UAAU,yBAAf,UACE,uBAAKA,UAAU,aAAf,UACE,sBAAKA,UAAU,oBAAf,wBACA,sBAAKA,UAAU,sBAAf,SACG+V,GAAwB,WAI7B,sBAAK/V,UAAU,0BAA0BkF,KAAK,SAA9C,SACE,sBAAKlF,UAAU,oBAAoBU,QA1I7B,WAChBiY,GAAS,IAyIC,mCAQP9V,GACC,uBAAK7C,UAAU,oBAAf,UACE,kEACgC,IAC7BuF,GACC,oDACY,8CADZ,wDAMJ,uBAAKvF,UAAU,gBAAf,UACE,yBAAQA,UAAU,oBAAoBU,QA3J7B,WACjBiY,GAAS,IA0JD,oBAGA,yBACE3Y,UAAU,iBACV,kBAAgB,QAChB,iBAAgB,IAAM4D,EACtBlD,QA/JS,WACnBmY,GAAS,GACTF,GAAS,IAyJD,6BCrMGQ,OAnCf,YAAuE,IAAtDpe,EAAqD,EAArDA,KAAMgb,EAA+C,EAA/CA,UAAWqD,EAAoC,EAApCA,QAASC,EAA2B,EAA3BA,aAAclV,EAAa,EAAbA,WAC/CxC,EAAWC,cACX0X,EAAYlV,YAAYpF,IACxBsE,GAAe,OAAJvI,QAAI,IAAJA,OAAA,EAAAA,EAAMuI,UAASvI,EAAKuI,SAAS,qBACxC1I,GAAW,OAAJG,QAAI,IAAJA,OAAA,EAAAA,EAAMoI,aAAYpI,EAAKoI,YAAYpI,EAAKuF,MAC/CiZ,EAAM,OAAGxe,QAAH,IAAGA,OAAH,EAAGA,EAAMyC,SAMrB,OAA8C,IAA1C5C,EAAK4e,cAAc5U,QAAQT,IAA+B,KAAbA,EAE7C,sBAAKnE,UAAU,SAASkF,KAAK,SAAS,iBAAiBmU,EAAqB,QAAR,QACpE,iBAAe,gBAAgB3Y,QAAU2Y,EAAyB,aARlD,WAChB1X,EAAS9D,EAAgB,CACrBvC,aAAcP,MAKlB,SAC8E,uCAC1E,uBAAKiF,UAAY,eAAjB,UACI,sBAAKA,UAAU,iBAAiBY,MAAO,CAACiE,gBAAgB,OAAD,OAASvB,EAAT,QACvD,sBAAKtD,UAAU,eAAf,SAA8B,oCAASpF,EAAT,KAAoB,OAAJG,QAAI,IAAJA,OAAA,EAAAA,EAAMsI,OAAMiW,EAAUjW,IAAI,QAAQ,QAChF,sBAAKrD,UAAU,iBAAf,SAAgC,eAAC,KAAD,CAAmBA,UAAauZ,EAAO,gBAAgB,iBAEhF,OAATD,QAAS,IAATA,OAAA,EAAAA,EAAWjW,QAAX,OAAmB0S,QAAnB,IAAmBA,OAAnB,EAAmBA,EAAW1S,MAChC,sBAAKrD,UAAU,kBAAf,SACI,uBAAMkF,KAAK,SAAS,iBAAe,QAAQ,iBAAiB,oBAA5D,SAAgF,iDAGnFmU,GACD,sBAAKrZ,UAAU,kBAAf,SACI,uBAAMkF,KAAK,SAASxE,QAAW0Y,EAA/B,SAAwC,mDAKvC,0B,oBCsHFK,OAjJf,YAAqD,IAA/BnB,EAA8B,EAA9BA,YAAavC,EAAiB,EAAjBA,UAAWnS,EAAM,EAANA,GAC5C,EAAyB/B,YAAcxH,EAAGyH,WAAW,UAArD,mBAAOC,EAAP,KACImB,GADJ,KACckB,YAAYpF,KACtB0a,EAAc,GACb,OAAL3X,QAAK,IAALA,KAAOyB,KAAK8B,KAAI,SAACtB,IACf,OAAIsU,QAAJ,IAAIA,OAAJ,EAAIA,EAAa7T,SAAST,EAAItB,OAAOW,OACnCqW,EAAYjR,KAAKzE,EAAItB,WAKzB,MAA8BrB,oBAAS,GAAvC,mBAAgBsY,GAAhB,WACIvE,EAAU,OAAGkD,QAAH,IAAGA,OAAH,EAAGA,EAAa3T,QACxByU,EAAU,SAACre,GACXA,GAAQud,IAAelD,EAAW3Q,SAAX,OAAoB1J,QAApB,IAAoBA,OAApB,EAAoBA,EAAMsI,OACnD+R,EAAW3M,KAAK1N,EAAKsI,KACrBhJ,EAAGyH,WAAW,QACXkC,IAAIJ,GACJwD,OAAO,CACN5B,QAAS4P,IAEV7S,MAAK,SAACG,GACL,IAAIiQ,EAAK,6BAAkBzP,QAAlB,IAAkBA,OAAlB,EAAkBA,EAASC,YAA3B,KACT9I,EAAGyH,WAAW,QAAQkC,IAAIJ,GAAI9B,WAAW,YAAYiC,IAAI,CACvDjB,QAAS6P,EACTtI,UAAW1Q,IAASW,UAAU6S,WAAWC,kBACzCrS,KAAMA,EAAKoI,YACXiH,UAAWrP,EAAKuI,SAChBD,IAAKtI,EAAKsI,MAEZsW,GAAW,QAcnB,EAAkDtY,mBAAS,IAA3D,mBAAOuY,EAAP,KAA0BC,EAA1B,KACA,EAA4CxY,mBAAS,IAArD,mBAAOyY,EAAP,KAAuBC,EAAvB,KAOA,OACE,uBACEhB,MAAM,yCACNnV,GAAG,UACHsB,KAAK,WACL,kBAAgB,cAJlB,UAME,sBAAKlF,UAAU,mCAAf,SACE,uBAAKA,UAAU,aAAf,UACE,eAAC,KAAD,CAAYA,UAAU,gBACtB,wBACEG,SAjBuB,SAACa,GAChC6Y,EAAqB7Y,EAAEmB,OAAO9B,QAiBtBH,KAAK,OACLF,UAAU,eACVwG,YAAY,eACZnG,MAAOuZ,SAKb,uBAAK5Z,UAAU,iCAAf,UACE,uBAAKA,UAAU,WAAf,UACE,sBACEA,UAAU,yBACVkF,KAAK,SACL,iBAAe,WACf,qBAAmB,UACnB,gBAAc,QACdtB,GAAG,WANL,SAQE,uBAAK5D,UAAU,eAAf,UACE,sBAAKA,UAAU,iBAAf,SACE,eAAC,KAAD,MAEF,sBAAKA,UAAU,eAAf,SACE,wDAIN,uBACEA,UAAU,gBACV,kBAAgB,WAChBY,MAAO,CAAEoZ,UAAW,IAAKC,SAAU,OAAWvS,MAAO,QAHvD,UAKE,uBAAK1H,UAAU,aAAaY,MAAO,CAAE0F,QAAS,aAA9C,UACE,wBAAOgR,QAAQ,GAAGtX,UAAU,aAA5B,uBAGA,wBACEG,SApDgB,SAACa,GAC7B+Y,EAAkB/Y,EAAEmB,OAAO9B,QAoDfH,KAAK,OACLF,UAAU,oBAGd,yBACEA,UAAU,8CACVY,MAAO,CAAEsZ,WAAY,IACrBxZ,QAAS,WAzEfqB,GAASuW,IACN,OAALvW,QAAK,IAALA,KAAOyB,KAAK8B,KAAI,SAACtB,GACfoV,EAAQpV,EAAItB,aAwENwC,KAAK,SAJP,SAME,qDArBJ,OAuBGnD,QAvBH,IAuBGA,OAvBH,EAuBGA,EAAOyB,KAAK8B,KAAI,SAACtB,GAChB,IAAIjJ,EAAOiJ,EAAItB,OAEf,IADcgX,EAAYjW,MAAK,SAACC,GAAD,OAAUA,EAAKL,MAAQtI,EAAKsI,OAEzD,OACE,eAAC,GAAD,CAEEc,WAAY2V,EAAeN,cAC3Bze,KAAMA,EACNiF,UAAU,gBACVqZ,cAAc,EACdD,QAAS,kBAAMA,EAAQre,KALhBA,EAAKsI,cAWvBqW,EAAYpU,KAAI,SAACvK,GAChB,OACE,eAAC,GAAD,CACEoJ,WAAYyV,EAAkBJ,cAC9Bze,KAAMA,EACNgb,UAAWA,c,MCvDVoE,OA9Ef,YAAoC,IAAR9W,EAAO,EAAPA,IACpBH,EAAUkB,YAAYpF,IACtBvD,EAAc2I,YAAY3E,IAC1BnE,EAAe8I,YAAY7E,IAC3BzE,EAASsJ,YAAYrF,IACvByG,EAAO,OAAG/J,QAAH,IAAGA,OAAH,EAAGA,EAAa+J,QACvB4P,EAAU,OAAG5P,QAAH,IAAGA,OAAH,EAAGA,EAASb,QAC1B,EAAyB9C,YAAcxH,EAAGyH,WAAW,UAArD,mBAAOC,EAAP,KACMhH,GADN,KACU,OAAGgH,QAAH,IAAGA,OAAH,EAAGA,EAAOyB,KAAKC,MAAK,SAACO,GAAD,OAASA,EAAItB,OAAOW,MAAQA,MACpDwE,GAAY,OAAJ9M,QAAI,IAAJA,OAAA,EAAAA,EAAM2H,OAAOS,aAAb,OACVpI,QADU,IACVA,OADU,EACVA,EAAM2H,OAAOS,YADH,OAEVpI,QAFU,IAEVA,OAFU,EAEVA,EAAM2H,OAAOpC,MACjB,EAA0Ce,oBAAS,GAAnD,mBAAO+Y,EAAP,KAAsBC,EAAtB,KA4BA,OALArU,qBAAU,WACR,OAAO,WACLqU,GAAiB,MAElB,CAACD,IAEF,sBACEpa,UAAU,aACV4D,GAAG,mBACH2E,SAAS,KACT,cAAY,OAJd,SAME,sBAAKvI,UAAU,eAAf,SACE,uBAAKA,UAAU,mCAAf,UACE,sBAAKA,UAAU,kBAAf,SACE,kDAEF,uBAAKA,UAAU,mBAAf,6CACmC6H,EADnC,iBACiDpM,QADjD,IACiDA,OADjD,EACiDA,EAAab,QAE9D,sBAAKoF,UAAU,kBAAf,SACE,uBAAKA,UAAU,kBAAf,UACE,yBACEA,UAAU,qCACV,kBAAgB,QAFlB,oBAMA,yBACEA,UAAU,4CACV,kBAAgB,QAChBU,QArDO,WACnB,IAAIyN,EAAQ3I,EAAQZ,QAAQtJ,EAAa+H,MAC1B,IAAX8K,IACQ,OAAViH,QAAU,IAAVA,KAAY9H,OAAOa,EAAO,GAC1B9T,EAAGyH,WAAW,QACXkC,IAAIlJ,GACJsM,OAAO,CACN5B,QAAS4P,IAEV7S,MAAK,WACJ8X,GAAiB,GACjB,IAAI1H,EAAK,gCAAqBzP,QAArB,IAAqBA,OAArB,EAAqBA,EAASC,YAA9B,KACT9I,EAAGyH,WAAW,QAAQkC,IAAIlJ,GAAQgH,WAAW,YAAYiC,IAAI,CAC3DjB,QAAS6P,EACTtI,UAAW1Q,IAASW,UAAU6S,WAAWC,kBACzCrS,KAAI,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAM2H,OAAOS,YACnBiH,UAAS,OAAErP,QAAF,IAAEA,OAAF,EAAEA,EAAM2H,OAAOY,SACxBD,IAAG,OAAEtI,QAAF,IAAEA,OAAF,EAAEA,EAAM2H,OAAOW,WAiChB,iC,wCC8BCiX,OAlGf,WAAuB,IAAD,IACdxf,EAASsJ,YAAYrF,IAC3B,EAA+B8C,YAAc/G,GAAQT,EAAGyH,WAAW,QAAQkC,IAAIlJ,IAA/E,mBAAOW,EAAP,KACA,GADA,KACgC4F,oBAAS,IAAzC,mBAAOkZ,EAAP,KAAiBC,EAAjB,KACA,EAAgCnZ,oBAAS,GAAzC,mBAAOoZ,EAAP,KAAiBC,EAAjB,KACMnV,EAAS,OAAG9J,QAAH,IAAGA,GAAH,UAAGA,EAAaiH,cAAhB,aAAG,EAAqB6C,UACvC,EAAwBlE,mBAAS,IAAjC,mBAAasZ,GAAb,WACMC,EAAgB,uBAOhBjZ,EAAWC,cAqCjB,OApCAoE,qBAAU,WAeN,OAdCuU,GACHlgB,EAAGyH,WAAW,QACXkC,IAAIlJ,GACJsM,OAAO,CACN7B,WAAYA,IAEbhD,MAAK,WACJoY,EAEM,8BAIPhY,OAAM,SAACkB,GAAD,OAAShB,MAAMgB,EAAIf,YACnB,WACL0X,GAAY,MAEf,CAACD,IAGJvU,qBAAU,WAUR,OATGyU,GACHpgB,EAAGyH,WAAW,QAAQkC,IAAIlJ,GAAQ8S,SAASrL,MAAK,WAC9CZ,EAASzD,EAAe,CACtBvC,aAAa,KAEfgG,EAASvE,EAAU,CACjBtC,OAAQ8f,QAETjY,OAAM,SAACkB,GAAD,OAAShB,MAAMgB,EAAIf,YACrB,WACL4X,GAAY,MAEb,CAACD,IAED3f,IAAW8f,EAEZ,uBACE7B,MAAM,yCACNnV,GAAG,UACHsB,KAAK,WACL,kBAAgB,cAJlB,UAME,sBAAKlF,UAAU,cAAckF,KAAK,SAASxE,QAnD5B,WACjB8Z,GAAY,IAkDV,UACG,OAAC/e,QAAD,IAACA,GAAD,UAACA,EAAaiH,cAAd,aAAC,EAAqB6C,WAMrB,uCACE,eAAC,KAAD,IACA,gEAPF,uCACE,eAAC,KAAD,CAAUvF,UAAU,cACpB,mEASN,wBAEC,uBACCA,UAAU,4BACV,kBAAkB,QAClB,iBAAiB,oBACjBkF,KAAK,SACLxE,QApEgB,WACpBga,GAAY,IA8DT,UAOC,eAAC,KAAD,CAAY1a,UAAU,cACtB,8DAIO,sBACX+Y,MAAM,yCACNnV,GAAG,UACHsB,KAAK,WACL,kBAAgB,cAJL,SAMX,sBAAKlF,UAAU,cAAf,gFCmCW6a,OAxHf,YAA6D,IAAD,EAAxCjX,EAAwC,EAAxCA,GAAInI,EAAoC,EAApCA,YAAaC,EAAuB,EAAvBA,WAAYgF,EAAW,EAAXA,QACzCoa,EAAe1W,YAAYjF,IAC3BrE,EAASsJ,YAAYrF,IACrBqZ,EAAQ,OAAG3c,QAAH,IAAGA,OAAH,EAAGA,EAAab,KACxB0d,EAAW,OAAG7c,QAAH,IAAGA,OAAH,EAAGA,EAAa+J,QAC3B6S,EAAO,OAAG5c,QAAH,IAAGA,OAAH,EAAGA,EAAaua,IACvB+E,EAAa,OAAGtf,QAAH,IAAGA,GAAH,UAAGA,EAAasa,iBAAhB,aAAG,EAAwB5S,YACxC4S,EAAS,OAAGta,QAAH,IAAGA,OAAH,EAAGA,EAAasa,UACzBxQ,EAAS,OAAG9J,QAAH,IAAGA,OAAH,EAAGA,EAAa8J,UACzB4E,GAAqB,OAAVzO,QAAU,IAAVA,OAAA,EAAAA,EAAYyH,aACzBzH,EAAWyH,YADE,OAEbzH,QAFa,IAEbA,OAFa,EAEbA,EAAY4E,MACVgD,GAAqB,OAAV5H,QAAU,IAAVA,OAAA,EAAAA,EAAY4H,UACzB5H,EAAW4H,SACX,qBACJ,OACE,sBACEtD,UAAU,sBACV4D,GAAI,IAAMA,EACV2E,SAAS,KACT,cAAY,OAJd,SAME,sBAAKvI,UAAU,6DAAf,SACE,uBAAKA,UAAU,mCAAf,UACE,uBAAKA,UAAU,0DAAf,UACE,uBAAKA,UAAU,eAAf,WACIlF,GACA,sBACEkF,UAAU,eACVY,MAAO,CAAEiE,gBAAgB,OAAD,OAASvB,EAAT,QAG5B,8BAAKxI,EAASsd,EAAWjO,IACzB,yBACEnK,UAAU,iCACV,kBAAkB,QAClB,iBAAkB4D,EAHpB,SAKE,eAAC,KAAD,SAGJ,sBAAImV,MAAM,eAAenV,GAAG,QAAQsB,KAAK,UAAzC,UACE,qBAAI6T,MAAM,WAAW7T,KAAK,eAA1B,SACE,uBACE6T,MAAM,kBACNnV,GAAG,WACH,iBAAe,MACf,iBAAe,SACf1D,KAAK,SACLgF,KAAK,MACL,gBAAc,QACd,gBAAc,OARhB,sBAaA4V,GACA,qBAAI/B,MAAM,WAAW7T,KAAK,eAA1B,SACE,uBACE6T,MAAM,WACNnV,GAAG,cACH,iBAAe,MACf,iBAAe,WACf1D,KAAK,SACLgF,KAAK,MACL,gBAAc,UACd,gBAAc,QARhB,wBAcF4V,GACA,qBAAI/B,MAAM,WAAW7T,KAAK,eAA1B,SACE,uBACE6T,MAAM,WACNnV,GAAG,cACH,iBAAe,MACf,iBAAe,WACf1D,KAAK,SACLgF,KAAK,MACL,gBAAc,UACd,gBAAc,QARhB,6BAgBR,sBAAKlF,UAAU,uDAAf,SACE,sBAAKA,UAAU,0BAAf,SACE,uBAAK+Y,MAAM,cAAcnV,GAAG,eAA5B,UACE,eAAC,GAAD,CACEwU,SAAUA,EACVC,QAASA,EACTtC,UAAWgF,EACXnX,GAAIA,EACJ2B,UAAWA,EACX+S,YAAaA,KAEbwC,GACA,eAAC,GAAD,CACEpa,QAASA,EACT4X,YAAW,OAAE7c,QAAF,IAAEA,OAAF,EAAEA,EAAa+J,QAC1BuQ,UAAWA,EACXnS,GAAIA,KAGNkX,GAAgB,eAAC,GAAD,WAIxB,sBAAK9a,UAAU,yB,OC6DVgb,OApLf,WACE,IAAMjgB,EAAOqJ,YAAYpF,IACzB,EAAyB6C,YAAcxH,EAAGyH,WAAW,UAArD,mBAAOC,EAAP,KAAcuC,EAAd,KACA,EAAmCzC,YAAcxH,EAAGyH,WAAW,SAA/D,mBAAOuD,EAAP,KAAiB4V,EAAjB,KACIzW,EAAO,GACN,OAALzC,QAAK,IAALA,KAAOyB,KAAK8B,KAAI,SAACtB,GAAD,OAASQ,EAAKiE,KAAKzE,EAAItB,OAAOW,QAC9C,MAA4BhC,oBAAS,GAArC,mBAAOgW,EAAP,KAAerP,EAAf,KACA,EAA8B3G,oBAAS,GAAvC,mBAAO6Z,EAAP,KAAgBC,EAAhB,KACA,EAAwB9Z,mBAAS,IAAjC,mBAAOzG,EAAP,KAAa2d,EAAb,KACA,EAAsBlX,mBAAS,IAA/B,mBAAO2U,EAAP,KAAYwC,EAAZ,KACA,EAAwCnX,mBAAS,IAAjD,mBAAOP,EAAP,KAAqBoB,EAArB,KACA,EAA0Bb,oBAAS,GAAnC,mBAAO+Z,EAAP,KAAcC,EAAd,KACA,EAA8Bha,oBAAS,GAAvC,mBAAOia,EAAP,KAAgBC,EAAhB,KAoBMC,EAAU,uCAAG,sBAAAxY,EAAA,yDACZsB,EADY,mBAEF,KAAT1J,EAFW,uBAGbsH,EAAgB,iCAHH,0BAMVoZ,EAiBEpZ,EAAgB,kBAhBrB7H,EAAGyH,WAAW,QACXiC,IAAI,CACHnJ,KAAMA,EACNob,IAAKA,EACLzQ,UAAW2V,EACX1V,QAAS0V,EAAU,CAACngB,EAAKsI,KAAOmB,EAChCuR,UAAWhb,IAEZwH,MAAK,SAACyB,GACL9B,EAAgB,iCAChBmZ,GAAS,MAEV1Y,OAAM,SAACkB,GACN3B,EAAgB2B,EAAIf,SACpBuY,GAAS,MAGfvN,YAAW,kBAAM5L,EAAgB,MAAK,KAxBvB,2CAAH,qDA+ChB,OAnBA8D,qBAAU,WACR,IAAKiV,EAAgB,CAAC,IAAD,EACfjX,EAAG,OAAGqB,QAAH,IAAGA,GAAH,UAAGA,EAAU7B,YAAb,aAAG,EAAgBC,MAAK,SAACC,GAAD,OAAUA,EAAKhB,OAAO9H,OAASA,KAC9D4H,QAAQC,IAAIuB,GACRA,GAAKuX,GAAW,GAKtB,OAHIlE,GACFmE,IAEK,WACDnE,IACFkB,EAAQ,IACRC,EAAO,KAET+C,GAAW,GACXvT,GAAU,MAEX,CAACiT,EAAgBrgB,EAAMyc,IAGxB,sBACErX,UAAU,aACV4D,GAAG,gBACH2E,SAAS,KACT,cAAY,OAJd,SAME,sBAAKvI,UAAU,6DAAf,SACE,sBAAKA,UAAU,+BAAf,SACGsE,EACC,eAAC,GAAD,IAEA,uCACE,sBAAKtE,UAAU,yCAAf,SACE,qDAEF,uBAAKA,UAAU,uBAAf,UACE,sBAAKA,UAAU,uBAAf,wIAKA,wBACA,eAAC,GAAD,CACEiY,WAAW,OACX1X,UAAU,EACV2X,YAAY,EACZb,OAAQA,EACRlX,SAtFS,SAACa,GACxB,IACIgY,EADUhY,EAAEmB,OAAO9B,MACS4Y,QAAQ,MAAO,KAC/CV,EAAQS,IAoFM3Y,MAAOzF,IAET,eAAC,GAAD,CACEqd,WAAW,cACXZ,OAAQA,EACRlX,SAtFQ,SAACa,GACvB,IAAIkY,EAAUlY,EAAEmB,OAAO9B,MACvBmY,EAAOU,IAqFO7Y,MAAO2V,IAET,sBAAKhW,UAAU,cAAf,SACE,4EAEF,wBACA,uBAAKA,UAAU,sCAAf,UACE,yBACEsX,QAAQ,gBACRtX,UAAU,oCAFZ,UAIE,sBAAKA,UAAU,0BAAf,SACE,qDAEF,uBAAKA,UAAU,qCAAf,UACGkb,GACC,uCACE,wFADF,QAOAA,GACA,yFAIN,sBAAKlb,UAAU,gBAAf,SACE,wBACEE,KAAK,WACLtF,KAAK,gBACLsK,KAAK,SACLlF,UAAU,mBACV4D,GAAG,gBACHzD,SApIC,WACnBgb,GAAYD,cAwIF,wBACA,uBAAKlb,UAAU,yBAAf,UACE,yBACEA,UAAU,mCACVU,QAjJK,WACnBsH,GAAU,IA8IE,oBAMCoT,EACC,sBAAKpb,UAAU,gCAAf,SACGc,IAGH,sBAAKd,UAAU,gCAAf,SACGc,iB,OCyCN2a,OA/Mf,WACE,IAIA,EAAwBpa,mBAAS,IAAjC,mBAAOzG,EAAP,KAAa2d,EAAb,KACA,EAAsBlX,mBAAS,IAA/B,mBAAOiO,EAAP,KAAYoM,EAAZ,KACA,EAA4Bra,mBAAS,IAArC,mBAAOsa,EAAP,KAAeC,EAAf,KACA,EAA8Bva,oBAAS,GAAvC,mBAAOiD,EAAP,KAAgBuX,EAAhB,KACA,EAA4Bxa,oBAAS,GAArC,mBAAOhF,EAAP,KAAeO,EAAf,KACA,EAA0ByE,mBAAS,IAAnC,mBAAOya,EAAP,KAAcC,EAAd,KACMpF,EAAe,uCAAG,WAAO3V,GAAP,mBAAAgC,EAAA,yDAChB4T,EAAO5V,EAAEmB,OAAO0U,MAAM,GADN,wDAGhBC,EAAa1c,EAAQ8P,MACrB6M,EAAUD,EAAWE,MAAMJ,EAAKhc,MACtCihB,GAAW,GALW,SAMhB9E,EAAQE,IAAIL,GANI,mBAOtBgF,EAPsB,UAON7E,EAAQG,iBAPF,mCAQtB2E,GAAW,GACXrZ,QAAQC,IAAIkZ,GATU,4CAAH,sDAmBfha,EAAWC,cACXsB,EAAUkB,YAAYpF,IACtB4E,EAAKQ,YAAYnF,IACjBmY,EAAU,uCAAG,4BAAApU,EAAA,6DACjBR,QAAQC,IAAI,gBADK,SAECpI,EAAGyH,WAAW,SAFf,OAEbC,EAFa,OAGjBS,QAAQC,IAAI,QAASS,GACjBU,IACF7B,EACGiC,IAAIJ,GACJwD,OAAO,CACN9D,SAAUqY,IAEXpZ,MAAK,kBAAMC,QAAQC,IAAI,cACvBE,OAAM,SAACkB,GAAD,OAAShB,MAAMgB,EAAIf,YAE5Bf,EACGiC,IAAIJ,GACJwD,OAAO,CACNjE,YAAavI,IAEd2H,MAAK,WACJZ,EACEtE,EAAa,CACXtC,KAAM,CACJoI,YAAavI,EACbyM,QAASiI,EACThM,SAAUqY,EACVtY,IAAKH,EAAQG,IACb/C,MAAO4C,EAAQ5C,MACf8C,cAAeF,EAAQE,cACvB5F,UAAU,SAKjBmF,OAAM,SAACkB,GAAD,OAAShB,MAAMgB,EAAIf,YAE5Bf,EACGiC,IAAIJ,GACJwD,OAAO,CACNC,QAASiI,IAEV/M,MAAK,WACJZ,EACEtE,EAAa,CACXtC,KAAM,CACJoI,YAAavI,EACbyM,QAASiI,EACThM,SAAUqY,EACVtY,IAAKH,EAAQG,IACb/C,MAAO4C,EAAQ5C,MACf8C,cAAeF,EAAQE,cACvB5F,UAAU,SAKjBmF,OAAM,SAACkB,GAAD,OAAShB,MAAMgB,EAAIf,aAvDb,2CAAH,qDA6DhBkD,qBAAU,WACR,GAAI3J,EAAQ,CACV,GAAa,KAATzB,GAAuB,KAAR0U,EAEjB,YADAyM,EAAS,qCAGX,GAAe,KAAXJ,EAEF,YADAI,EAAS,gCAGX3E,IAEF,OAAO,WACLxa,GAAU,MAEX,CAACP,IAEJ,IAeI2f,EAfE9U,EAAM,uCAAG,sBAAAlE,EAAA,sEACPzI,EACH4M,UACA5E,MAAK,WACJlI,EAAGyH,WAAW,SAASkC,IAAIJ,GAAIwD,OAAO,CACpC5J,UAAU,OAGbmF,OAAM,SAACC,GAAD,OAAWC,MAAMD,EAAME,YARnB,OASbnB,EACErE,EAAM,CACJC,UAAW,QAXF,2CAAH,qDAiBZ,OACE,uBAAKyC,UAAU,uBAAf,UACE,sEACA,uBAAKA,UAAU,oBAAf,UACE,uBAAKA,UAAU,uBAAf,UACE,sBAAKA,UAAU,4CAAf,SACE,uBAAKA,UAAU,aAAf,UACE,wBAAOsX,QAAQ,GAAGtX,UAAU,aAA5B,SACE,8CAEF,sBAAKA,UAAU,yBAAf,SACE,sBACEA,UAAU,eACVY,MAAO,CAAEiE,gBAAgB,OAAD,OAAS8W,EAAT,MAF1B,SAIGrX,GAAW,eAAC,GAAD,QAIhB,wBACE4F,IAAK,SAACyI,GAAD,OAAYqJ,EAAWrJ,GAC5BzS,KAAK,OACLF,UAAU,2BACVic,OAAO,QACP9b,SAAUwW,IAEZ,wBACEzR,KAAK,SACLlF,UAAU,6CACVU,QA5JO,WACnBsb,EAASrV,SAwJC,4BAKkB,YAItB,uBAAK3G,UAAU,2CAAf,UACE,uBAAKA,UAAU,aAAf,UACE,yBAAOA,UAAU,aAAjB,UACE,mDAA8B,OAEhC,wBACEK,MAAOzF,EACPuF,SApJW,SAACa,GACxBuX,EAAQvX,EAAEmB,OAAO9B,QAoJLH,KAAK,OACLF,UAAU,oBAGd,wBACA,uBAAKA,UAAU,aAAf,UACE,wBAAOA,UAAU,aAAjB,SACE,oDAEF,wBACEK,MAAOiP,EACPnP,SA5JU,SAACa,GACvB0a,EAAO1a,EAAEmB,OAAO9B,QA4JJH,KAAK,OACLF,UAAU,qBAGd,8BAGJ,wBACA,uBAAKA,UAAU,mBAAf,UACE,yBAAQA,UAAU,oBAAoBU,QAASwG,EAA/C,iCAGA,yBAAQlH,UAAU,kBAAkBU,QAxGtB,WACpB9D,GAAU,IAuGJ,sCAIF,sBAAKoD,UAAU,kBAAf,SACE,kCAAS8b,a,2BCuSJI,OApdf,WAAqB,IAAD,IACZ5gB,EAAe8I,YAAY7E,IAK3B6P,GAJQ,OAAG9T,QAAH,IAAGA,KAAcgI,SACpB,OAAGhI,QAAH,IAAGA,KAAc6H,YACd,OAAG7H,QAAH,IAAGA,KAAckC,SAChB4G,YAAY/E,IACL+E,YAAYrF,KAC5BsQ,EAAkBjL,YAAY9E,IAC9B4D,EAAUkB,YAAYpF,IAGtBkL,GAFG,OAAG5O,QAAH,IAAGA,KAAc+L,QACRjD,YAAY5E,IAClBgP,iBAAO,OACbxT,EAAYoJ,YAAYnF,IAC9B,EAAoCoC,mBAAS,IAA7C,mBAAOoJ,EAAP,KACA,GADA,KACsCpJ,oBAAS,IAA/C,mBAAOqJ,EAAP,KACA,GADA,KACgCrJ,mBAAS,OAAzC,mBAAOoO,EAAP,KAAiBjD,EAAjB,KACA,EAA8B3K,YAAcxH,EAAGyH,WAAW,UAA1D,mBAAOC,EAAP,KACMlG,GADN,KACyBuI,YAAYtF,KACrC,EAAgB+C,YAAcxH,EAAGyH,WAAW,SAArC4N,EAAP,oBACM/N,EAAWC,cACjB,EAAuBC,YACrBuN,GACE/U,EAAGyH,WAAW,QAAQkC,IAAIoL,GAAetN,WAAW,aAFjD6N,EAAP,oBAIA,EAAsB9N,YAAcxH,EAAGyH,WAAW,gBAA3CuC,EAAP,oBACA,EAAyBxC,YACvBwN,GACEhV,EAAGyH,WAAW,eAAekC,IAAIqL,GAAiBvN,WAAW,aAF1D8N,EAAP,oBAIApN,QAAQC,IAAI4M,GACZ,MAAuCxN,YACrC7G,GACEX,EACGyH,WAAW,SACXkC,IAAIhJ,GACJ8G,WAAW,cACX0J,QAAQ,YAAa,SAN5B,oBAAOqE,GAAP,MAAuBC,GAAvB,MAuCA9J,qBAAU,WACR,SAASmK,EAAmBC,GACtBlG,EAAIoE,UAAYpE,EAAIoE,QAAQ+B,SAASD,EAAMjO,SAC7CqK,EAAY,MAKhB,OADA/F,SAAS6J,iBAAiB,YAAaH,GAChC,WAEL1J,SAAS8J,oBAAoB,YAAaJ,OAI9C,IAAMK,GAAgB,SAACf,GACrBjD,EAAYiD,GACZjN,QAAQC,IAAIgN,IAEd,GAA0CpO,mBAAS,MAAnD,qBAAOoP,GAAP,MAAsBC,GAAtB,MA6CA1K,oBAAS,sBAAC,4BAAAhD,EAAA,sDACRR,QAAQC,IAAI,UACRkO,EA5CG,OAAGd,SAAH,IAAGA,QAAH,EAAGA,GAAgBrM,KAAK8B,IAArB,uCAAyB,WAAOtB,GAAP,uBAAAhB,EAAA,6DAC3BiK,EAAYjJ,EAAItB,OAAOuK,UACvBnS,EAASkJ,EAAItB,OAAO5H,OACpBoS,EAAelJ,EAAItB,OAAOwK,aAC1BjC,EAAUjH,EAAItB,OAAOuI,QACvB2F,EAAa,KACb3F,GACFzI,QAAQC,IAAI,YACR3H,EACF8V,EAAavW,EACVyH,WAAW,QACXkC,IAAIlJ,GACJgH,WAAW,YACXkC,IAAIiH,GACJuC,MACIN,IACP0D,EAAavW,EACVyH,WAAW,eACXkC,IAAIkJ,GACJpL,WAAW,YACXkC,IAAIiH,GACJuC,QACI1S,EACT8V,EAAavW,EACVyH,WAAW,QACXkC,IAAIlJ,GACJgH,WAAW,YACXkC,IAAIiJ,GACJO,MACMN,GAAgBD,IACzB2D,EAAavW,EACVyH,WAAW,eACXkC,IAAIkJ,GACJpL,WAAW,YACXkC,IAAIiJ,GACJO,OAnC4B,kBAsC1BoD,GAtC0B,2CAAzB,uDA6CVpO,QAAQC,IAAIkO,GACC,GACTA,IACOE,QAAQC,IAAIH,GACdpO,MAAK,SAACwO,GAAD,OAAYL,GAAiBK,MACzCvO,QAAQC,IAAIgO,KARN,2CAUP,CAAC5U,EAAkBgU,GAAgBF,EAAcC,IASpD,IAQMoB,GAAgB,SAACC,EAAMjQ,GAC3B,IAAMmb,EAAoB1V,SAASC,cAAc,2BAEjD,GADAlE,QAAQC,IAAIzB,EAAEmB,QACVnB,EAAEmB,QAAUga,IAChB3Z,QAAQC,IAAIzB,EAAEmB,QACV8O,EAAKC,kBAAkB,CACzBvP,EACEnF,EAAc,CACZF,WAAY,QAGhB,IAAI6U,EAAaF,EAAKC,iBAAiBpW,OACnCsW,EAAmBH,EAAKC,iBAAiBhE,aAC7C,GAAIiE,EAAY,CACd,IAAIlJ,EAAa,OAAGyH,QAAH,IAAGA,OAAH,EAAGA,EAAOlM,KACxBC,MAAK,SAACO,GAAD,OAASA,EAAIJ,KAAOuN,KACzBzO,OAAOuF,cACLA,IAAeA,EAAgB,IAC/BA,EAAcxD,SAASvB,EAAQG,MAClC4E,EAAcQ,KAAKvF,EAAQG,KAC7B1B,EACEjE,EAAmB,CACjBrC,oBAAqB,KACrBF,iBAAkB,QAGtBwG,EACEvE,EAAU,CACRtC,OAAQqW,KAGZ9W,EAAGyH,WAAW,QAAQkC,IAAImN,GAAY/J,OAAO,CAC3Ca,cAAeA,SAEZ,GAAImJ,EAAkB,CAC3B5O,QAAQC,IAAI,UACZ,IAAIwF,EAAa,OAAG5D,QAAH,IAAGA,OAAH,EAAGA,EAAab,KAC9BC,MAAK,SAACO,GAAD,OAASA,EAAIJ,KAAOwN,KACzB1O,OAAOuF,cACLA,IAAeA,EAAgB,IAC/BA,EAAcxD,SAASvB,EAAQG,MAClC4E,EAAcQ,KAAKvF,EAAQG,KAC7B1B,EACEvE,EAAU,CACRtC,OAAQ,QAGZ6G,EACEjE,EAAmB,CACjBrC,oBAAqB+V,EACrBjW,iBAAkB8V,EAAK5N,OAG3BhJ,EAAGyH,WAAW,eAAekC,IAAIoN,GAAkBhK,OAAO,CACxDa,cAAeA,IAInBtG,EAASxE,EAAe,CAAErB,YAAamV,EAAKrN,QAGhDpB,QAAQC,IAAI2M,GAEYhL,YAAYvF,GAApC,IACM5C,GAAkBmI,YAAYxF,GAC9B1C,GAAsBkI,YAAY1F,GAClCvC,GAAwBiI,YAAYzF,GAC1C,GAAuC0S,YACrCpV,KACGC,GACG7B,EACGyH,WAAW,QACXkC,IAAI9H,IACJ4F,WAAW,YACXkC,IAAI/H,IACPE,GACA9B,EACGyH,WAAW,eACXkC,IAAI7H,IACJ2F,WAAW,YACXkC,IAAI/H,SACPwP,IAdR,qBAiBA,IAjBA,YAiBsB5J,YACpB5F,KACGC,GACG7B,EACGyH,WAAW,QACXkC,IAAI9H,IACJ4F,WAAW,YACXkC,IAAI/H,IACJ6F,WAAW,eACX0J,QAAQ,YAAa,OACxBrP,GACA9B,EACGyH,WAAW,eACXkC,IAAI7H,IACJ2F,WAAW,YACXkC,IAAI/H,IACJ6F,WAAW,eACX0J,QAAQ,YAAa,YACxBC,KAIR,IAtBA,qBAoBoBrH,YAAY3F,GACjB2F,YAAY5F,GACP6S,YAClBpV,KACGC,GACG7B,EAAGyH,WAAW,QAAQkC,IAAI9H,IAC1BC,GACA9B,EAAGyH,WAAW,eAAekC,IAAI7H,SACjCsP,KANDgG,GAAP,qBAsBM8D,IAbJtZ,KACCC,GAAmB,OAChBuV,SADgB,IAChBA,OAAW/O,OAAO9H,KAClBuB,KAAqB,OACrBsV,SADqB,IACrBA,IADqB,UACrBA,GAAW/O,OAAOX,aADG,iBACrB,EAAyB0B,MAAK,SAAC1I,GAC7B,OAAIgH,EAAM,KAAOA,EAAM,GAAWhH,EAAKsI,MAAQH,EAAQG,IAC3CH,EAAQG,MAAQtI,EAAKsI,cAHd,OACrB,EAGIF,cAISiB,YAAY9F,GAEE8F,YAAY/E,KAC7C,GAAgCgC,oBAAS,GAAzC,qBAAOmU,GAAP,MAAiBC,GAAjB,MAiEA,OAhEAzP,qBAAU,WACRxD,QAAQC,IAAI,WACZ,IAAMuN,EAAgBvJ,SAASC,cAAc,wBACvC0M,EAAmB3M,SAASC,cAAc,uBAC1CgP,EAAiBjP,SAASC,cAC9B,4CAGI8M,EAAqB/M,SAASC,cAClC,6BAGIiP,EAAmB,WACvB,IAAMN,EAAczD,OAAOC,WACrByD,EAAS,OAAGtF,QAAH,IAAGA,OAAH,EAAGA,EAAe4F,YAE/BN,EAAY,OACZ,OAAClC,QAAD,IAACA,OAAD,EAACA,EAAkBnD,UAAUI,SAAS,sBAEtB,OAAhB+C,QAAgB,IAAhBA,KAAkBnD,UAAUlM,IAAI,oBAChC0R,IAAY,GACZjT,QAAQC,IAAI,KAER4S,EAAc,MACA,OAAhBjC,QAAgB,IAAhBA,KAAkBnD,UAAUlM,IAAI,oBAChC0R,IAAY,GACC,OAAbzF,QAAa,IAAbA,KAAeC,UAAUC,OAAO,YAChC1N,QAAQC,IAAI,KACR4S,GAAe,KAAOE,KACX,OAAbvF,QAAa,IAAbA,KAAeC,UAAUlM,IAAI,YACX,OAAlByP,QAAkB,IAAlBA,KAAoBvD,UAAUlM,IAAI,QAClCvB,QAAQC,IAAI,MAET8S,KACU,OAAbvF,QAAa,IAAbA,KAAeC,UAAUC,OAAO,YAChC1N,QAAQC,IAAI,QAIhB6S,GAAa,MAAb,OACAlC,QADA,IACAA,OADA,EACAA,EAAkBnD,UAAUI,SAAS,uBAErB,OAAhB+C,QAAgB,IAAhBA,KAAkBnD,UAAUC,OAAO,oBACnC1N,QAAQC,IAAIiT,GACZD,IAAY,GACZjT,QAAQC,IAAI,MAId,IAAMoT,EAAkBpP,SAASC,cAAc,qBACzCoP,EAAe,WACJ,OAAfD,QAAe,IAAfA,KAAiB5F,UAAUC,OAAO,kBAEvB,OAAbF,QAAa,IAAbA,KAAeM,iBAAiB,QAASwF,GACvB,OAAlBtC,QAAkB,IAAlBA,KAAoBlD,iBAAiB,QAASwF,IAGhDH,IACA/D,OAAOtB,iBAAiB,SAAUqF,MAOlC,uBAAK3V,UAAU,sBAAf,UACE,sBAAKA,UAAU,oBAAf,SACE,uBAAKA,UAAU,0BAAf,UACE,uBAAKA,UAAU,2BAAf,UACE,sBACEU,QAVQ,WAClB,IAAI0S,EAAmB3M,SAASC,cAAc,uBAC9B,OAAhB0M,QAAgB,IAAhBA,KAAkBnD,UAAUlM,IAAI,kBAStB/D,UACEwV,GACI,8EACA,sEALR,SAQE,gCACE,eAAC,KAAD,QAGJ,mDAEF,sBACEtQ,KAAK,SACLlF,UAAU,iCACVU,QA1TS,WACjBiB,EACEnF,EAAc,CACZF,WAAY,QAzBhBqF,EACE/D,EAAuB,CACrBxC,6BAA6B,KAGjCuG,EACE/E,EAAU,CACRP,QAAQ,KAGZsF,EACE9E,EAAiB,CACfT,cAAe,QAGnBuF,EACE1E,EAAmB,CACjBjB,gBAAiB,SA4Tf,SAKE,eAAC,KAAD,WAIN,sBAAKgE,UAAU,kBAAf,SACG8P,GACC,eAAC,GAAD,IAEA,4CACGW,SADH,IACGA,QADH,EACGA,GAAenL,KAAI,SAACtB,GACnB,IAAIkN,EAAgB,OAAGrB,SAAH,IAAGA,QAAH,EAAGA,GAAgBrM,KAAKC,MAAK,SAACyO,GAChD,OAAIA,EAAKxP,OAAOuI,QAAgBiH,EAAKxP,OAAOuI,UAAYjH,EAAIJ,GAChDsO,EAAKxP,OAAOuK,YAAcjJ,EAAIJ,MAExChJ,EAAO,GACPqW,EAAO,GAgBX,IAdA,OAAIC,QAAJ,IAAIA,OAAJ,EAAIA,EAAkBxO,OAAO5H,UAC3BF,EAAI,OAAG8U,QAAH,IAAGA,OAAH,EAAGA,EAAOlM,KACXC,MAAK,SAACO,GAAD,OAASA,EAAIJ,KAAOsN,EAAiBxO,OAAO5H,UACjD4H,OAAO9H,KACVqW,EAAKC,iBAAmBA,EAAiBxO,SAE3C,OAAIwO,QAAJ,IAAIA,OAAJ,EAAIA,EAAkBxO,OAAOwK,gBAC3BtS,EAAO,iBACPqW,EAAKC,iBAAmBA,EAAiBxO,SAE3C,OAAIwO,QAAJ,IAAIA,OAAJ,EAAIA,EAAkBxO,OAAOuI,UAC3BzI,QAAQC,IAAI,SAAU7H,GAGpBoJ,EAAItB,OAAQ,CAAC,IAAD,IACVyO,EAAU,UAAGF,EAAKC,wBAAR,aAAG,EAAuBpW,OACpCsW,EAAgB,UAAGH,EAAKC,wBAAR,aAAG,EAAuBhE,aAC9C,EAQIlJ,EAAItB,OAPNI,EADF,EACEA,QACAuH,EAFF,EAEEA,UACAtP,EAHF,EAGEA,KACAqP,EAJF,EAIEA,UACA/G,EALF,EAKEA,IACAsH,EANF,EAMEA,QACAJ,EAPF,EAOEA,UAKF,OAHA/H,QAAQC,IAAI,OACZwO,EAAK5N,IAAMA,EACX4N,EAAKrN,GAAKI,EAAIJ,GAEZ,sBAAK5D,UAAU,4BAAf,SACE,uBACEA,UAAU,yBACVkF,KAAK,SACLxE,QAAS,SAACM,GAAD,OAAOgQ,GAAcC,EAAMjQ,IAHtC,UAKE,sBACEhB,UAAU,wBACVU,QAAS,SAACM,GAAD,OAAOgQ,GAAcC,EAAMjQ,IAFtC,SAIGpG,IAEH,eAAC,GAAD,CACE4P,kBAAmBiF,EACnB/O,QAAS8P,GAET1N,QAASA,EACTuH,UAAWA,EACXF,SAAUpP,EACVqP,UAAWA,EACX/G,IAAKA,EACLsH,QAASA,EACTF,WAAYA,EACZC,YAAaA,EACbyH,MAAM,GACNvO,GAAII,EAAIJ,GACR2G,UAAWA,EACXW,YAAY,EACZH,cAAiBoG,EACjBnG,oBAAuBoG,EACvBgL,OAAK,GAfApY,EAAIJ,QAfiCI,EAAIJ,gBCnSvDyY,OAzIf,WACE,MAA4Bpa,YAAa1H,GAAzC,mBAAOQ,EAAP,KAAauhB,EAAb,KAEA,EAA8Bza,YAAcxH,EAAGyH,WAAW,UAA1D,mBAAOC,EAAP,KACMwB,GADN,KACY,OAAGxB,QAAH,IAAGA,OAAH,EAAGA,EAAOyB,KAAKC,MAAK,SAACC,GAAD,OAAUA,EAAKhB,OAAOW,OAAZ,OAAoBtI,QAApB,IAAoBA,OAApB,EAAoBA,EAAMsI,SACpE,EAA2BhC,oBAAS,GAApC,mBAAO8N,EAAP,KAAeoN,EAAf,KAMAvW,qBAAU,WACJjL,GAAQwI,GANY,WAAO,IAAD,IAC9B,UAAAlJ,EAAGyH,WAAW,gBAAd,mBAAwBkC,IAAxB,OAA4BT,QAA5B,IAA4BA,OAA5B,EAA4BA,EAAQK,WAApC,SAAyCwD,OAAO,CAC9C5J,UAAU,IAKVgf,KAED,CAACzhB,EAAMwI,IAEV,MAAwClC,mBAAS,KAAjD,mBAAOob,EAAP,KAAqBC,EAArB,KACA,EAAwCrb,mBAAS,KAAjD,mBAAOsb,EAAP,KAAqBC,EAArB,KAoCMnhB,EAAc2I,YAAY3E,IAC1B3E,EAASsJ,YAAYrF,IACrBmO,EAAe9I,YAAY9E,IAC3BsE,EAAK9I,GAAkBoS,EACvBxR,EAAa0I,YAAY1E,IACzBpE,EAAe8I,YAAY7E,IAGjC,EAA4B8B,oBAAS,GAArC,mBAAOgW,EAAP,KAAerP,EAAf,KACM6U,EAAe,WACnB7U,GAAWqP,GACX7U,QAAQC,IAAI,YAmBRS,EAAUkB,YAAYpF,IACtB1C,EAAa8H,YAAY9F,GAC/B,EAAsC+C,oBAAS,GAA/C,mBAAOyb,EAAP,KAAoBC,EAApB,KAQA,OAPA/W,qBAAU,WACRS,SAAS6J,iBAAiB,oBAAoB,WAC5CyM,GAAgBD,GAChBta,QAAQC,IAAIqa,EAAc,SAAW,iBAGtC,IAED,sBAAK9c,UAAU,MAAMgd,UAAQ,EAA7B,SAGGV,EACC,eAAC,GAAD,IACGvhB,GAEQ,OAAPmI,QAAO,IAAPA,OAAA,EAAAA,EAASC,eAAT,OAAwBD,QAAxB,IAAwBA,OAAxB,EAAwBA,EAASI,UAGrC,qCACE,uBAAKtD,UAAU,YAAf,UACE,eAAC,GAAD,IACA,eAAC,GAAD,CACE4D,GAAIA,EACJnI,YAAaA,EACbC,WAAYA,EACZgF,QAASmc,IAEX,eAAC,GAAD,IACA,eAAC,GAAD,CAAkBxZ,IAAG,OAAE/H,QAAF,IAAEA,OAAF,EAAEA,EAAc+H,MACrC,eAAC,GAAD,IACA,eAAC,GAAD,CAAQtI,KAAMA,IAEd,uBAAKiF,UAAU,kBAAf,UACE,eAAC,GAAD,CAAS0H,MAAO+U,IAChB,eAAC,GAAD,CAAS9E,YAtGO,SAAC3W,GAC3B,IAAIic,EAAQjc,EAAEkc,QAGd,SAASC,EAAUnc,GACjB,IAAI0G,EAAQ+U,EAAezb,EAAEkc,QAAUD,EACvCP,EAAgBhV,EAAQ,IAAM,IAAMA,EAAQ,IAAM,IAAMA,GAJ1DkK,OAAOtB,iBAAiB,YAAa6M,GACrCvL,OAAOtB,iBAAiB,WAMxB,SAAS8M,IACPxL,OAAOrB,oBAAoB,YAAa4M,GACxCvL,OAAOrB,oBAAoB,UAAW6M,SA4F7B9gB,EACC,eAAC,GAAD,IAEA,eAAC,GAAD,CAAMoL,MAAOiV,EAAcjc,QAASmc,IAEtC,eAAC,GAAD,CAASlF,YA7FI,SAAC3W,GACxBub,GAAS,GACT,IAAIU,EAAQjc,EAAEkc,QACKzW,SAAS4W,KAAKzH,YAGjC,SAASuH,EAAUnc,GACjB,IAAI0G,EAAQiV,EAAe3b,EAAEkc,QAAUD,EACvCL,EAAgBlV,EAAQ,IAAM,IAAMA,EAAQ,IAAM,IAAMA,GAJ1DkK,OAAOtB,iBAAiB,YAAa6M,GACrCvL,OAAOtB,iBAAiB,WAMxB,SAAS8M,IACPxL,OAAOrB,oBAAoB,YAAa4M,GACxCvL,OAAOrB,oBAAoB,UAAW6M,GACtCb,GAAS,SAgFD,eAAC,GAAD,CAAe7U,MAAOiV,EAAcxN,OAAQA,YAzBlD,eAAC,GAAD,IAFA,eAAC,GAAD,OC3HOmO,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBjb,MAAK,YAAkD,IAA/Ckb,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,0DCDRO,GAAgB,CAClBC,IAAK,OACL3jB,aACA4jB,gBAAkBC,MAEhBC,GAAsBC,aAAeL,GAAeM,IAE7C7f,GAAM8f,YAAe,CAC9BC,QAAQ,CACJ/f,IAAK2f,MAGAK,GAAYC,aAAajgB,I,SCLtCkgB,IAASC,OAEP,eAAC,IAAMC,WAAP,UAEE,eAAC,IAAD,CAAUC,MAAOrgB,GAAjB,SACE,eAAC,KAAD,CAAa+F,QAAQ,OAAOia,UAAaA,GAAzC,SACE,eAAC,GAAD,UAIN9X,SAASoY,eAAe,SAM1BvB,M","file":"static/js/main.3ec6753a.chunk.js","sourcesContent":["// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nimport firebase from \"firebase\";\r\nimport 'firebase/storage'\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCmzK2LdP7LkJNXNnQBJxSTX9EOvnIsV-k\",\r\n  authDomain: \"chat-app-ba041.firebaseapp.com\",\r\n  projectId: \"chat-app-ba041\",\r\n  storageBucket: \"chat-app-ba041.appspot.com\",\r\n  messagingSenderId: \"410871016552\",\r\n  appId: \"1:410871016552:web:1ef1149c5824861da5dfdd\",\r\n  measurementId: \"G-BCB1RKDQ3Q\"\r\n};\r\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\r\n  const storage = firebaseApp.storage();\r\n  const db = firebaseApp.firestore();\r\n  const auth = firebase.auth()\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n  export {auth, provider, db, storage}","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const appSlice = createSlice({\r\n    name: \"app\",\r\n    initialState:{\r\n        roomId: null,\r\n        user: null,\r\n        docUserId: null,\r\n        dataUpdated: null,\r\n        userUid: null,\r\n        directMessageUid: null,\r\n        isShowingSecondaryWorkspace: null,\r\n        directMessageRoomId: null,\r\n        selectedUser: null,\r\n        messageSend: false,\r\n        localTime: null,\r\n        roomDetails: null,\r\n        directUser: null,\r\n        isModalOpen: null,\r\n        moves: [],\r\n        savedItemsToggle: false,\r\n        savedItemId: null,\r\n        onSendingReaction: false,\r\n        onReplyInThread: null,\r\n        threadMessageId: null,\r\n        threadMessageRoomId: null,\r\n        threadMessageDirectId: null,\r\n        onOpenProfile: null,\r\n        onSave: null,\r\n        onMainSave: null,\r\n    },\r\n    reducers: {\r\n        setOnMainSave: (state, action) => {\r\n            state.onMainSave = action.payload.onMainSave\r\n        },\r\n        setOnSave: (state, action) => {\r\n            state.onSave = action.payload.onSave\r\n        },\r\n        setOnOpenProfile: (state, action) => {\r\n            state.onOpenProfile = action.payload.onOpenProfile;\r\n        },\r\n        setThreadMessageRoomId: (state, action) => {\r\n            state.threadMessageRoomId = action.payload.threadMessageRoomId\r\n        },\r\n        setThreadMessageDirectId: (state, action) => {\r\n            state.threadMessageDirectId = action.payload.threadMessageDirectId\r\n        },\r\n        setThreadMessageId: (state, action) => {\r\n            state.threadMessageId = action.payload.threadMessageId\r\n        },\r\n        setOnReplyInThread: (state, action) => {\r\n            state.onReplyInThread = action.payload.onReplyInThread\r\n        },\r\n        setOnSendingReaction: (state, action) => {\r\n            state.onSendingReaction = action.payload.onSendingReaction\r\n        },\r\n        setSavedItemId: (state, action) => {\r\n            state.savedItemId = action.payload.savedItemId\r\n        },\r\n        enterRoom: (state, action) =>{\r\n            state.roomId = action.payload.roomId;\r\n        },\r\n\r\n        saveUserInfo: (state, action) => {\r\n            state.user = action.payload.user;\r\n        },\r\n\r\n        docUserId: (state, action) => {\r\n            state.docUserId = action.payload.docUserId\r\n        },\r\n\r\n        reset: (state, action) => {\r\n            state.roomId = action.payload.initState;\r\n            state.user = action.payload.initState;\r\n            state.dataUpdated = action.payload.initState;\r\n            state.userUid = action.payload.initState;\r\n            state.directMessageUid= action.payload.initState;\r\n            state.isShowingSecondaryWorkspace = action.payload.initState;\r\n            state.docUserId = action.payload.initState;\r\n            state.directMessageRoomId = action.payload.initState;\r\n            state.selectedUser = null;\r\n            state.localTime = null;\r\n            state.roomDetails = null;\r\n            state.directUser = null;\r\n            state.isModalOpen = null;\r\n            state.moves = [];\r\n            state.savedItemsToggle = false;\r\n            state.isOnline = false\r\n\r\n        },\r\n        getDataState: (state, action) => {\r\n            state.dataUpdated = action.payload.dataUpdated;\r\n        },\r\n        enterDirectMessage: (state, action) => {\r\n            state.directMessageUid = action.payload.directMessageUid;\r\n            state.directMessageRoomId = action.payload.directMessageRoomId;\r\n        },\r\n        setUserProfileUid:(state, action) => {\r\n            state.userUid = action.payload.userUid;\r\n        },\r\n        showSecondaryWorkspace:(state, action) => {\r\n            state.isShowingSecondaryWorkspace = action.payload.isShowingSecondaryWorkspace;\r\n        },\r\n        setSelectedUser: (state, action) => {\r\n            state.selectedUser = action.payload.selectedUser\r\n        },\r\n        sendMessage :(state, action) => {\r\n            state.messageSend = action.payload.messageSend;\r\n        },\r\n        setTime: (state, action) => {\r\n            state.localTime = action.payload.localTime;\r\n        },\r\n        setRoomDetails: (state, action) => {\r\n            state.roomDetails = action.payload.roomDetails;\r\n        },\r\n        setDirectUser: (state, action) => {\r\n            state.directUser = action.payload.directUser\r\n        },\r\n        setIsModalOpen: (state, action) => {\r\n            state.isModalOpen = action.payload.isModalOpen\r\n        },\r\n        setMoves: (state, action) => {\r\n            state.moves = action.payload.moves\r\n        },\r\n        setSavedItemsToggle: (state, action) => {\r\n            state.savedItemsToggle = action.payload.savedItemsToggle;\r\n        }\r\n     }\r\n});\r\n\r\nexport const {setOnMainSave, setOnSave, setOnOpenProfile,setThreadMessageRoomId, setThreadMessageDirectId,setThreadMessageId, setOnReplyInThread,setOnSendingReaction,setSavedItemId,setSavedItemsToggle,setMoves, setIsModalOpen, setDirectUser, setRoomDetails, setTime, sendMessage, setSelectedUser, showSecondaryWorkspace,enterRoom, saveUserInfo, docUserId, reset, getDataState, enterDirectMessage, setUserProfileUid} = appSlice.actions;\r\n\r\nexport const selectOnMainSave = state => state.app.onMainSave;\r\n\r\nexport const selectOnSave = state => state.app.onSave;\r\n\r\nexport const selectOnOpenProfile = state => state.app.onOpenProfile;\r\n\r\nexport const selectThreadMessageRoomId = state => state.app.threadMessageRoomId;\r\n\r\nexport const selectThreadMessageDirectId = state => state.app.threadMessageDirectId;\r\n\r\nexport const selectThreadMessageId = state => state.app.threadMessageId;\r\n\r\nexport const selectOnReplyInThread = state => state.app.onReplyInThread;\r\n\r\nexport const selectSavedItemsToggle = state => state.app.savedItemsToggle;\r\n\r\nexport const selectRoomId = state => state.app.roomId;\r\n\r\nexport const selectUser = state => state.app.user;\r\n\r\nexport const selectDocId = state => state.app.docUserId;\r\n\r\nexport const selectDataState = state => state.app.dataUpdated;\r\n\r\nexport const selectUserDirect = state => state.app.directMessageUid;\r\n\r\nexport const selectUserProfileUid = state => state.app.userUid; \r\n\r\nexport const selectSecondaryWorkspaceStatus = state => state.app.isShowingSecondaryWorkspace;\r\n\r\nexport const selectDirectMessageRoom = state => state.app.directMessageRoomId\r\n\r\nexport const selectChosenUser = state => state.app.selectedUser\r\n\r\nexport const selectMessageSend = state => state.app.messageSend\r\n\r\nexport const selectLocalTime = state => state.app.localTime\r\n\r\nexport const selectRoomDetails = state => state.app.roomDetails\r\n\r\nexport const selectDirectUser = state => state.app.directUser\r\n\r\nexport const selectModalState = state => state.app.isModalOpen\r\n\r\nexport const selectMoves = state => state.app.moves\r\n\r\nexport const selectSavedItemId = state => state.app.savedItemId\r\n\r\nexport const selectOnSendingReaction = state => state.app.savedItemId\r\nexport default appSlice.reducer;","import React from 'react'\r\n\r\nfunction SignIn(props){\r\n\r\n\r\n\r\n    return(\r\n        <div className=\"login\">\r\n            <div className=\"col-md-6 img-bg-container\">\r\n\r\n            </div>\r\n\r\n            <div className=\"col-md-6 form-container\">\r\n            \r\n                <span className=\"form__title\">\r\n                    Login to continue\r\n                </span>\r\n                <form method=\"post\">\r\n                    <div className=\"form__input\">\r\n                        \r\n                            \r\n                            <input name=\"form__email\" type=\"text\" className=\"input-area\" onChange={props.onEmailChange} value={props.email} required/>\r\n                            <span className=\"label-span\">Email</span>\r\n                    \r\n                    </div>\r\n                    <div className=\"form__input\">\r\n                       \r\n                            \r\n                            <input name=\"form__password\" type=\"password\" className=\"input-area\" onChange={props.onPassWordChange} value={props.password}  required/>\r\n                            <span className='label-span'>Password</span>\r\n                      \r\n                    </div>\r\n\r\n                    <button onClick={props.signInEmail} type=\"submit\" className=\"form__button\">Sign in</button>\r\n                </form>\r\n                <div className=\"change-form\">\r\n                    \r\n                    <p><span onClick={props.onClick}>REGISTER</span> if you don't have any account</p>\r\n\r\n                </div>\r\n\r\n                <div className=\"notification\" style={{color: \"red\"}}>\r\n                {props.notification!==\"\"&&<strong> Warning!</strong>} {props.notification}\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignIn\r\n\r\n","import React from 'react'\r\n\r\nfunction Register(props){\r\n    return(\r\n        <div className=\"login\">\r\n            <div className=\"col-md-6 img-bg-container\">\r\n\r\n            </div>\r\n\r\n            <div className=\"col-md-6 form-container\">\r\n            \r\n                <span className=\"form__title\">\r\n                    Register \r\n                </span>\r\n                <form method=\"post\">\r\n                    <div className=\"form__input\">\r\n                        \r\n                            \r\n                            <input name=\"form__email\" type=\"text\" className=\"input-area\" value = {props.email} onChange={(e) => props.onEmailChange(e)} required/>\r\n                            <span className=\"label-span\">Email</span>\r\n                    \r\n                    </div>\r\n                    <div className=\"form__input\">\r\n                       \r\n                            \r\n                            <input name=\"form__password\" type=\"password\" className=\"input-area\" value = {props.password}  onChange={(e) => props.onPassWordChange(e)} required/>\r\n                            <span className='label-span'>Password</span>\r\n                      \r\n                    </div>\r\n\r\n                    <div className=\"form__input\">\r\n                       \r\n                            \r\n                            <input name=\"form__password\" type=\"password\" className=\"input-area\" value = {props.confirm} onChange={(e) => props.onConfirmChange(e)} required/>\r\n                            <span className='label-span'>Confirm Password</span>\r\n                      \r\n                    </div>\r\n\r\n                    <button type=\"submit\" onClick = {props.register}  className=\"form__button\">Sign up</button>\r\n                </form>\r\n\r\n                <div className=\"change-form\">\r\n                    <p><span onClick={props.onClick}>Login</span> if you already have an account</p>\r\n                </div>\r\n                <div className=\"notification\" style={{color: \"red\"}}>\r\n                    {props.notification!==\"\"&&<strong> Warning!</strong>} {props.notification}\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","import React, { useState } from \"react\";\r\n\r\nimport { auth, db, provider } from \"../../firebase\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useCollection } from \"react-firebase-hooks/firestore\";\r\nimport {\r\n  docUserId,\r\n  saveUserInfo,\r\n  setUserProfileUid,\r\n} from \"../../features/appSlice\";\r\nimport SignIn from \"./SignIn\";\r\nimport Register from \"./Register\";\r\nfunction LogIn(props) {\r\n  const [isSignIn, setIsSignIn] = useState(true);\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirm, setConfirm] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const [users, usersLoading] = useCollection(db.collection(\"users\"));\r\n  const user = useAuthState(auth);\r\n  const [notification, setNotification] = useState(\"\");\r\n  const userss = db.collection('users')\r\n  function onSignIn() {\r\n    setIsSignIn(false);\r\n    setNotification(\"\");\r\n  }\r\n\r\n  function onRegister() {\r\n    setIsSignIn(true);\r\n    setNotification(\"\");\r\n  }\r\n\r\n  function onPassWordChange(e) {\r\n    setPassword(e.target.value);\r\n  }\r\n\r\n  function onConfirmChange(e) {\r\n    setConfirm(e.target.value);\r\n  }\r\n\r\n  const signIn = (e) => {\r\n    e.preventDefault();\r\n    auth\r\n      .signInWithPopup(provider)\r\n      .then((user) => console.log(user.data()))\r\n      .catch((error) => alert(error.message));\r\n  };\r\n  const handleRegister = (e) => {\r\n    e.preventDefault();\r\n    password !== confirm\r\n      ? setNotification(\"You type different confirm password!\")\r\n      : auth\r\n          .createUserWithEmailAndPassword(email, password)\r\n          .then((userCred) => {\r\n            console.log(userCred.user);\r\n            const userInf = {\r\n              displayName: userCred.user.displayName,\r\n              email: userCred.user.email,\r\n              emailVerified: userCred.user.emailVerified,\r\n              uid: userCred.user.uid,\r\n              photoURL: userCred.user.photoURL,\r\n              isOnline: true,\r\n            };\r\n\r\n            dispatch(saveUserInfo({ user: userInf }));\r\n            db.collection(\"users\")\r\n              .add(userInf)\r\n              .then((doc) =>\r\n                dispatch(\r\n                  docUserId({\r\n                    docUserId: doc.id,\r\n                  })\r\n                )\r\n              );\r\n          })\r\n          .catch((err) => {\r\n            setNotification(err.message);\r\n          });\r\n  };\r\n\r\n  const handleSignIn = (e) => {\r\n    e.preventDefault();\r\n    auth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then(async (userCred) => {\r\n        const userInf = {\r\n          displayName: userCred.user.displayName,\r\n          email: userCred.user.email,\r\n          emailVerified: userCred.user.emailVerified,\r\n          uid: userCred.user.uid,\r\n          photoURL: userCred.user.photoURL,\r\n          isOnline: true,\r\n        };\r\n\r\n        let userDb\r\n        console.log(usersLoading, users);\r\n        if (!usersLoading && users) {\r\n          userDb = users?.docs.find((elem) => elem.data().uid === userInf.uid);\r\n          console.log('userDb', userDb.data());\r\n          let userInfo = userDb.data();\r\n          userInfo.isOnline = true;\r\n          console.log(userInfo)\r\n          dispatch(saveUserInfo({ user: userInfo }));\r\n          dispatch(\r\n            docUserId({\r\n              docUserId: userDb?.id,\r\n            })\r\n          );\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setNotification(err.message);\r\n      });\r\n  };\r\n\r\n  const onEmailChange = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  if (isSignIn)\r\n    return (\r\n      <SignIn\r\n        onClick={onSignIn}\r\n        signIn={signIn}\r\n        password={password}\r\n        email={email}\r\n        onPassWordChange={onPassWordChange}\r\n        onEmailChange={onEmailChange}\r\n        signInEmail={handleSignIn}\r\n        notification = {notification}\r\n      />\r\n    );\r\n  else\r\n    return (\r\n      <Register\r\n        onClick={onRegister}\r\n        password={password}\r\n        confirm={confirm}\r\n        email={email}\r\n        onPassWordChange={onPassWordChange}\r\n        onConfirmChange={onConfirmChange}\r\n        onEmailChange={onEmailChange}\r\n        register={handleRegister}\r\n        notification = {notification}\r\n      />\r\n    );\r\n}\r\n\r\nexport default LogIn;\r\n","import React from \"react\";\r\nimport { useCollection } from \"react-firebase-hooks/firestore\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  enterDirectMessage,\r\n  enterRoom,\r\n  selectUser,\r\n  setSelectedUser,\r\n} from \"../../features/appSlice\";\r\nimport { db } from \"../../firebase\";\r\n\r\nfunction DropdownItem({ icon, name, photoURL, id, uid, filterText }) {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(selectUser);\r\n  const [directRooms, loading] = useCollection(db.collection(\"directRooms\"));\r\n  const userUid = user?.uid;\r\n  const directRoom = directRooms?.docs.find((doc) => {\r\n    if (uid === userUid)\r\n      return (\r\n        doc.data().uids[0] === doc.data().uids[1] &&\r\n        doc.data().uids.includes(userUid)\r\n      );\r\n    return doc.data().uids.includes(userUid) && doc.data().uids.includes(uid);\r\n  });\r\n\r\n  const selectChannel = () => {\r\n    if (id) {\r\n      dispatch(\r\n        enterDirectMessage({\r\n          directMessageUid: null,\r\n        })\r\n      );\r\n      dispatch(\r\n        enterRoom({\r\n          roomId: id,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const enterDirect = () => {\r\n    dispatch(\r\n      enterRoom({\r\n        roomId: null,\r\n      })\r\n    );\r\n\r\n    if (!directRoom && loading == false) {\r\n      db.collection(\"directRooms\").add({\r\n        uids: [userUid, uid],\r\n      });\r\n      console.log(\"added!\");\r\n    }\r\n\r\n    if (directRoom?.id) {\r\n      dispatch(\r\n        enterDirectMessage({\r\n          directMessageUid: uid,\r\n          directMessageRoomId: directRoom?.id,\r\n        })\r\n      );\r\n      dispatch(setSelectedUser({ selectedUser: null }));\r\n    }\r\n  };\r\n  //   filter handle\r\n  const filterName = !photoURL ? filterText.slice(9) : filterText.slice(6);\r\n  if (name?.indexOf(filterName) != -1)\r\n    return (\r\n      <div className=\"c-search__suggesstion-item\">\r\n        <div\r\n          className=\"c-search__suggesstion-item--inner\"\r\n          onClick={!photoURL ? selectChannel : enterDirect}\r\n        >\r\n          <div className=\"c-search__suggestion-item__content\">\r\n            <div\r\n              style={photoURL ? { backgroundImage: `url(${photoURL})` } : {}}\r\n              className=\"list-item__icon\"\r\n            >\r\n              {icon ? icon : \"\"}\r\n            </div>\r\n            <div className=\"list-item__name\">{name}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  else return \"\";\r\n}\r\n\r\nexport default DropdownItem;\r\n","import React from \"react\";\r\n\r\nfunction AutoSearchButton({ icon, name, action }) {\r\n  return (\r\n    <div className=\"buttons-list__item\">\r\n      <button\r\n        onClick={action}\r\n        className=\"c-button-unstyled c-search-autocomplete__search-item\"\r\n      >\r\n        {icon}\r\n        <span className=\"c-search-autocomplete__search-item__title\">{name}</span>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AutoSearchButton;\r\n","import React from 'react'\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nfunction SearchMode({mode, close}) {\r\n    return (\r\n        <div className=\"c-search__input-mode\">\r\n            <span className=\"c-search__input-mode__text\">\r\n                {mode}\r\n            </span>\r\n            <div className=\"c-search__input-mode__close-button\" onClick={close} role=\"button\">\r\n            <CloseIcon/>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchMode\r\n","import React from \"react\";\r\nimport { useCollection } from \"react-firebase-hooks/firestore\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectUser } from \"../../features/appSlice\";\r\nimport { db } from \"../../firebase\";\r\nimport DropdownItem from \"./DropdownItem\";\r\nimport LockRoundedIcon from \"@material-ui/icons/LockRounded\";\r\nfunction SuggestionList({ mode, filterText, actualText }) {\r\n  const [channels, loading, error] = useCollection(db.collection(\"room\"));\r\n  const [users] = useCollection(db.collection(\"users\"));\r\n  const user = useSelector(selectUser);\r\n  const uid = user?.uid;\r\n\r\n  return (\r\n    <div className=\"c-search__suggestion-list\">\r\n      <div className=\"c-search__content__header\">\r\n        {mode === \"channels\" && <span>Recent channels</span>}\r\n        {mode === \"users\" && <span>Recent users</span>}\r\n      </div>\r\n      {mode === \"channels\" && (\r\n        <>\r\n          {channels?.docs.map((doc) => {\r\n            let isPrivate = doc.data().isPrivate;\r\n            let members = doc.data().members;\r\n            if ((members?.includes(uid) && isPrivate) || !isPrivate)\r\n              return (\r\n                <DropdownItem\r\n                  name={doc.data().name}\r\n                  icon={isPrivate ? <LockRoundedIcon /> : \"#\"}\r\n                  id={doc.id}\r\n                  filterText={filterText + actualText}\r\n                />\r\n              );\r\n          })}\r\n        </>\r\n      )}\r\n      {mode === \"users\" && (\r\n        <>\r\n          {users?.docs.map((doc) => {\r\n            return (\r\n              <DropdownItem\r\n                name={\r\n                  doc.data().displayName\r\n                    ? doc.data().displayName\r\n                    : doc.data().email\r\n                }\r\n                photoURL={\r\n                  doc.data().photoURL\r\n                    ? doc.data().photoURL\r\n                    : \"default-avatar.jpg\"\r\n                }\r\n                uid={doc.data().uid}\r\n                filterText={filterText + actualText}\r\n              />\r\n            );\r\n          })}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SuggestionList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { useCollection } from \"react-firebase-hooks/firestore\";\r\nimport { db } from \"../../firebase\";\r\nimport DropdownItem from \"./DropdownItem\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectUser } from \"../../features/appSlice\";\r\nimport ListAltRoundedIcon from \"@material-ui/icons/ListAltRounded\";\r\nimport PeopleAltOutlinedIcon from \"@material-ui/icons/PeopleAltOutlined\";\r\nimport AutoSearchButton from \"./AutoSearchButton\";\r\nimport SearchMode from \"./SearchMode\";\r\nimport SuggestionList from \"./SuggestionList\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nfunction DropdownSearchMenu() {\r\n  \r\n  const [onChannels, setOnChannels] = useState(false);\r\n  const [onUsers, setOnUsers] = useState(false);\r\n  const [filterText, setFilterTex] = useState(\"\");\r\n  const [actualText, setActualText] = useState(\"\");\r\n  const actualTextChangeHanler = (e) => {\r\n    setActualText(e.target.value);\r\n  };\r\n  const findChannel = () => {\r\n    setFilterTex(\"Channel: \");\r\n  };\r\n\r\n  const findUser = () => {\r\n    setFilterTex(\"User: \");\r\n  };\r\n\r\n  useEffect(() => {\r\n    let isChannel = /^Channel:/.test(filterText + actualText);\r\n    let isUser = /^User:/.test(filterText + actualText);\r\n    if (isChannel) {\r\n      setOnChannels(true);\r\n    }\r\n    if (isUser) {\r\n      setOnUsers(true);\r\n    }\r\n    return () => {\r\n      setOnUsers(false);\r\n      setOnChannels(false);\r\n    };\r\n  }, [filterText]);\r\n  const user = useSelector(selectUser);\r\n  const uid = user?.uid;\r\n  // closeMode\r\n  const closeMode = () => {\r\n    setFilterTex(\"\");\r\n  };\r\n  // close Search\r\n  const closeSearch = () => {\r\n    document.querySelector(\"#dropdownMenuSearchHeader\").click();\r\n  }\r\n  return (\r\n    <div\r\n      className=\"dropdown-menu\"\r\n      style={{ paddingTop: 0 }}\r\n      aria-labelledby=\"dropdownMenuSearchHeader\"\r\n    >\r\n      <div className=\"search-bar\" disabled style={{ padding: \"0\" }}>\r\n        <div className=\"header__search__input-and-close\">\r\n          <div className=\"form-group c-search__input-box\">\r\n            {filterText === \"\" ? (\r\n              <SearchIcon className=\"search-icon\" />\r\n            ) : (\r\n              <SearchMode\r\n                close={closeMode}\r\n                mode={onUsers ? \"Users\" : onChannels ? \"Channels\" : \"\"}\r\n              />\r\n            )}\r\n            <input\r\n              value={actualText}\r\n              onChange={actualTextChangeHanler}\r\n              type=\"text\"\r\n              className=\"c-search-input\"\r\n              style={{ borderBottomColor: \"none\" }}\r\n              placeholder=\"Search because it's faster than scrolling\"\r\n            />\r\n          </div>\r\n          <div role=\"button\" className=\"c-search__close-button\" onClick = {closeSearch}>\r\n              <CloseIcon/>\r\n          </div>\r\n        </div>\r\n        {!onChannels && !onUsers && (\r\n          <div className=\"search__content\">\r\n            <div className=\"c-search__content__header\">I'm looking for...</div>\r\n            <div className=\"buttons-list\">\r\n              <AutoSearchButton\r\n                icon={<ListAltRoundedIcon />}\r\n                action={findChannel}\r\n                name=\"Channels\"\r\n              />\r\n              <AutoSearchButton\r\n                icon={<PeopleAltOutlinedIcon />}\r\n                action={findUser}\r\n                name=\"People\"\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n        {onChannels && (\r\n          <SuggestionList filterText={filterText} actualText={actualText} mode = \"channels\"/>\r\n        )}\r\n        {onUsers && (\r\n          <SuggestionList filterText={filterText} actualText={actualText} mode = \"users\"/>\r\n        )}\r\n      </div>\r\n      <div className=\"search__footer\">\r\n        <span>Not the result you expected?</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DropdownSearchMenu;\r\n","import React from \"react\";\r\nimport { useCollection } from \"react-firebase-hooks/firestore\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  enterDirectMessage,\r\n  enterRoom,\r\n  selectUser,\r\n} from \"../../features/appSlice\";\r\nimport { db } from \"../../firebase\";\r\n\r\nfunction DropdownMove({ id }) {\r\n  console.log(id);\r\n  const [roomDetails] = useCollection(id && db.collection(\"room\").doc(id));\r\n  const [directDetails] = useCollection(\r\n    id && db.collection(\"directRooms\").doc(id)\r\n  );\r\n  const details = roomDetails ? roomDetails : directDetails;\r\n  const name = roomDetails?.data()?.name;\r\n  const userInf = useSelector(selectUser);\r\n  let uids = directDetails?.data()?.uids;\r\n\r\n  let directUser = directDetails?.data()?.users.find((user) => {\r\n    return user.uid !== userInf.uid;\r\n  });\r\n  if (uids && uids[0] === uids[1]) directUser = directDetails?.data()?.users[0];\r\n  console.log(directUser);\r\n  const photoURL = directUser?.photoURL\r\n    ? directUser?.photoURL\r\n    : \"default-avatar.jpg\";\r\n  //   Enter room\r\n  const dispatch = useDispatch();\r\n  const enterRoomHandle = () => {\r\n    if (!uids) {\r\n      dispatch(\r\n        enterDirectMessage({\r\n          directMessageUid: null,\r\n          directMessageRoomId: null,\r\n        })\r\n      );\r\n      dispatch(\r\n        enterRoom({\r\n          roomId: id,\r\n        })\r\n      );\r\n    } else if (directDetails) {\r\n      dispatch(\r\n        enterRoom({\r\n          roomId: null,\r\n        })\r\n      );\r\n      let searchUid = uids.find((uid) => uid != userInf.uid);\r\n      dispatch(\r\n        enterDirectMessage({\r\n          directMessageRoomId: id,\r\n          directMessageUid: searchUid,\r\n        })\r\n      );\r\n    }\r\n    document.querySelector(\"#historyDropdown\").click()\r\n  };\r\n  return (\r\n    <div className=\"moves-item\" role=\"button\" onClick={enterRoomHandle}>\r\n      <div className=\"moves-item__inner\">\r\n        <div\r\n          className=\"move__symbol\"\r\n          style={uids ? { backgroundImage: `url(${photoURL})` } : {}}\r\n        >\r\n          {uids ? \"\" : \"#\"}\r\n        </div>\r\n        <span className=\"move__name\">\r\n          {uids ? directUser?.displayName : name}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DropdownMove;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"../../css/header.css\";\r\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\r\nimport { auth, db } from \"../../firebase\";\r\nimport { useCollection } from \"react-firebase-hooks/firestore\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  reset,\r\n  saveUserInfo,\r\n  selectDocId,\r\n  selectMoves,\r\n  selectUser,\r\n  setOnOpenProfile,\r\n  setOnReplyInThread,\r\n  setOnSave,\r\n  setSelectedUser,\r\n  setUserProfileUid,\r\n  showSecondaryWorkspace,\r\n} from \"../../features/appSlice\";\r\nimport DropdownSearchMenu from \"./DropdownSearchMenu\";\r\nimport DropdownMove from \"./DropdownMove\";\r\n\r\nfunction Header() {\r\n  const userInf = useSelector(selectUser);\r\n  const [users, loading] = useCollection(db.collection(\"users\"));\r\n  const user = users?.docs.find((elem) => elem.data().uid === userInf?.uid);\r\n  const [onViewing, setOnViewing] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const logOut = async () => {\r\n    await auth\r\n      .signOut()\r\n      .then(() => {\r\n        db.collection(\"users\").doc(user?.id).update({\r\n          isOnline: false,\r\n        });\r\n      })\r\n      .catch((error) => alert(error.message));\r\n    dispatch(\r\n      reset({\r\n        initState: null,\r\n      })\r\n    );\r\n  };\r\n\r\n  const email = user?.data().email;\r\n  const displayName = user?.data().displayName;\r\n  const photoURL = user?.data().photoURL;\r\n  // Open profile\r\n  const openProfile = () => {\r\n    setOnViewing(true);\r\n    dispatch(\r\n      setUserProfileUid({\r\n        userUid: userInf?.uid,\r\n      })\r\n    );\r\n    dispatch(\r\n      showSecondaryWorkspace({\r\n        isShowingSecondaryWorkspace: true,\r\n      })\r\n    );\r\n    dispatch(\r\n      showSecondaryWorkspace({\r\n        isShowingSecondaryWorkspace: true,\r\n      })\r\n    );\r\n\r\n    dispatch(\r\n      setOnReplyInThread({\r\n        onReplyInThread: null,\r\n      })\r\n    );\r\n    dispatch(\r\n      setOnSave({\r\n        onSave: null,\r\n      })\r\n    );\r\n    dispatch(\r\n      setOnOpenProfile({\r\n        onOpenProfile: true,\r\n      })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (onViewing) {\r\n      dispatch(\r\n        setSelectedUser({\r\n          selectedUser: {\r\n            displayName: user?.data().displayName,\r\n            email: user?.data().email,\r\n            uid: userInf?.uid,\r\n            photoURL: photoURL,\r\n            isOnline: userInf?.isOnline,\r\n            whatIDo: user?.data().whatIDo,\r\n          },\r\n        })\r\n      );\r\n    }\r\n    return () => {\r\n      setOnViewing(false);\r\n    };\r\n  }, [onViewing]);\r\n\r\n  // Get Moves\r\n  const moves = useSelector(selectMoves);\r\n  return (\r\n    <div className=\"header-container\">\r\n      {/* Header Left */}\r\n      <div className=\"header__left\">\r\n        <Dropdown className=\"history-dropdown dropdown\">\r\n          <Dropdown.Toggle\r\n            className=\"c-button-unstyled dropdown-toggle\"\r\n            id=\"historyDropdown\"\r\n            variant=\"success\"\r\n          >\r\n            <AccessTimeIcon className=\"access-time-icon\" />\r\n          </Dropdown.Toggle>\r\n          <Dropdown.Menu\r\n            className=\"dropdown-menu\"\r\n            aria-labelledby=\"historyDropdown\"\r\n            style={{ width: 360 }}\r\n          >\r\n            <div aria-hidden=\"true\" className=\"c-menu_item__header\">\r\n              Recent\r\n            </div>\r\n            {moves?.map((id) => {\r\n              return <DropdownMove key={id} id={id} />;\r\n            })}\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n      </div>\r\n      {/* Header Search */}\r\n\r\n      <div className=\"dropdown header__search\">\r\n        <div\r\n          className=\"header__search--inner\"\r\n          id=\"dropdownMenuSearchHeader\"\r\n          role=\"button\"\r\n          data-bs-toggle=\"dropdown\"\r\n          aria-expanded=\"false\"\r\n          data-bs-auto-close=\"outside\"\r\n        >\r\n          <SearchIcon />\r\n\r\n          <span>Search fetch</span>\r\n        </div>\r\n\r\n        <DropdownSearchMenu />\r\n      </div>\r\n\r\n      {/* Header Right */}\r\n      <div className=\"header__right\">\r\n        <Dropdown className=\"history-dropdown dropdown\">\r\n          <Dropdown.Toggle\r\n            className=\"c-button-unstyled dropdown-toggle\"\r\n            id=\"historyDropdown\"\r\n            variant=\"success\"\r\n          >\r\n            <HelpOutlineIcon />\r\n          </Dropdown.Toggle>\r\n          <Dropdown.Menu\r\n            className=\"dropdown-menu\"\r\n            aria-labelledby=\"historyDropdown\"\r\n          >\r\n            <div aria-hidden=\"true\" className=\"c-menu_item__header\">\r\n              This functionality is currently unavailable\r\n            </div>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n        <div className=\"header__avatar\">\r\n          <Dropdown className=\"user-dropdown dropdown\">\r\n            <Dropdown.Toggle\r\n              className=\"c-button-unstyled dropdown-toggle\"\r\n              id=\"historyDropdown\"\r\n              variant=\"success\"\r\n            >\r\n              <div\r\n                className=\"user-avatar\"\r\n                style={{\r\n                  backgroundImage: `url(${\r\n                    photoURL ? photoURL : \"default-avatar.jpg\"\r\n                  })`,\r\n                }}\r\n              ></div>\r\n            </Dropdown.Toggle>\r\n            <Dropdown.Menu\r\n              className=\"dropdown-menu\"\r\n              aria-labelledby=\"historyDropdown\"\r\n            >\r\n              <div className=\"dropdown-item main-menu__user\">\r\n                <div\r\n                  className=\"main-menu__user__avatar\"\r\n                  style={{\r\n                    backgroundImage: `url(${\r\n                      photoURL ? photoURL : \"default-avatar.jpg\"\r\n                    })`,\r\n                  }}\r\n                ></div>\r\n                <div className=\"main-menu__user__details\">\r\n                  <div className=\"main-menu__user__name\">\r\n                    {displayName ? displayName : email}\r\n                  </div>\r\n                  <span className=\"main-menu__user__status\">\r\n                    <FiberManualRecordIcon style={{ fontSize: \"small\" }} />\r\n                    Active\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              <div className=\"c-menu__separator\">\r\n                <hr className=\"c-menu__separator__line\" />\r\n              </div>\r\n              <div\r\n                className=\"dropdown-item\"\r\n                data-bs-toggle=\"modal\"\r\n                data-bs-target=\"#editProfile\"\r\n              >\r\n                Edit profile\r\n              </div>\r\n              <div className=\"dropdown-item\" onClick={openProfile}>\r\n                View profile\r\n              </div>\r\n              <div className=\"c-menu__separator\">\r\n                <hr className=\"c-menu__separator__line\" />\r\n              </div>\r\n              <div className=\"dropdown-item\" onClick={logOut}>\r\n                Sign out\r\n              </div>\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  enterDirectMessage,\r\n  enterRoom,\r\n  selectDirectMessageRoom,\r\n  selectMoves,\r\n  selectOnSave,\r\n  selectRoomId,\r\n  selectUser,\r\n  selectUserDirect,\r\n  setMoves,\r\n  setOnMainSave,\r\n  setOnOpenProfile,\r\n  setOnReplyInThread,\r\n  setOnSave,\r\n  setSelectedUser,\r\n  setUserProfileUid,\r\n  showSecondaryWorkspace,\r\n} from \"../../features/appSlice\";\r\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\nimport { useCollection } from \"react-firebase-hooks/firestore\";\r\nimport { db } from \"../../firebase\";\r\nimport firebase from \"firebase\";\r\n\r\nfunction SidebarOption({\r\n  icon,\r\n  title,\r\n  photoURL,\r\n  uid,\r\n  id,\r\n  email,\r\n  isOnline,\r\n  isUser,\r\n  usersHaveReadRoom,\r\n  isPrivate,\r\n  members,\r\n  savedItems,\r\n}) {\r\n  const dispatch = useDispatch();\r\n  const seeAllDm = () => {};\r\n  const directMessageUid = useSelector(selectUserDirect);\r\n  const directMessageRoomId = useSelector(selectDirectMessageRoom);\r\n  const user = useSelector(selectUser);\r\n  const userUid = user?.uid;\r\n  const [directRooms, loading] = useCollection(db.collection(\"directRooms\"));\r\n  const [users] = useCollection(db.collection(\"users\"));\r\n  const [toggle, setToggle] = useState(false);\r\n  const directRoom = directRooms?.docs.find((doc) => {\r\n    if (uid === userUid)\r\n      return (\r\n        doc.data().uids[0] === doc.data().uids[1] &&\r\n        doc.data().uids.includes(userUid)\r\n      );\r\n    return doc.data().uids.includes(userUid) && doc.data().uids.includes(uid);\r\n  });\r\n\r\n  const usersHaveRead = directRoom?.data().usersHaveRead;\r\n  const addNewDirect = async () => {\r\n    if (!directRoom && uid && userUid && !loading && users) {\r\n      await db\r\n        .collection(\"directRooms\")\r\n        .add({\r\n          uids: [userUid, uid],\r\n        })\r\n        .then((doc) => {\r\n          db.collection(\"directRooms\")\r\n            .doc(doc.id)\r\n            .update({\r\n              users: [\r\n                users?.docs.find((doc) => doc.data().uid === userUid)?.data(),\r\n                users?.docs.find((doc) => doc.data().uid === uid)?.data(),\r\n              ],\r\n            });\r\n        });\r\n      console.log(\"added!\");\r\n    }\r\n  };\r\n  const selectChannel = () => {\r\n    dispatch(setOnMainSave({\r\n      onMainSave: null\r\n    }))\r\n    let usersHaveReadArr = usersHaveReadRoom?usersHaveReadRoom.slice():[];\r\n    if (id) {\r\n      if(!usersHaveReadArr.includes(user.uid)){\r\n        usersHaveReadArr.push(user.uid)\r\n      }\r\n      dispatch(\r\n        enterDirectMessage({\r\n          directMessageUid: null,\r\n        })\r\n      );\r\n      dispatch(\r\n        enterRoom({\r\n          roomId: id,\r\n        })\r\n      );\r\n      db.collection(\"room\")\r\n        .doc(id)\r\n        .update({\r\n          usersHaveRead: usersHaveReadArr\r\n        });\r\n    }\r\n  };\r\n  const selectPerson = () => {\r\n    dispatch(setOnMainSave({\r\n      onMainSave: null\r\n    }))\r\n    setToggle(true);\r\n    dispatch(\r\n      enterRoom({\r\n        roomId: null,\r\n      })\r\n    );\r\n\r\n    if (directRoom?.id) {\r\n      let usersHaveReadArr = usersHaveRead;\r\n      if(!usersHaveReadArr) usersHaveReadArr = [];\r\n      if(!usersHaveReadArr.includes(user.uid)) usersHaveReadArr.push(user.uid)\r\n      dispatch(\r\n        enterDirectMessage({\r\n          directMessageUid: uid,\r\n          directMessageRoomId: directRoom?.id,\r\n        })\r\n      );\r\n\r\n      db.collection(\"directRooms\")\r\n        .doc(directRoom.id)\r\n        .update({\r\n          usersHaveRead: usersHaveReadArr,\r\n        });\r\n    }\r\n  };\r\n  // Handle send message button\r\n\r\n  useEffect(() => {\r\n    addNewDirect();\r\n    return () => {\r\n      setToggle(false);\r\n    };\r\n  }, [directMessageUid, directMessageRoomId, loading]);\r\n\r\n  const defaultRoomId = \"A86N0fmTCy8fTd4NS0Ne\";\r\n\r\n  const roomId = useSelector(selectRoomId);\r\n  // Save moves\r\n  let moves = useSelector(selectMoves);\r\n  const addMoves = (id) => {\r\n    let newMoves = moves?.filter((a) => {\r\n      return a != id;\r\n    });\r\n    newMoves.unshift(id);\r\n    dispatch(\r\n      setMoves({\r\n        moves: newMoves,\r\n      })\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    if (!savedItems) addMoves(roomId ? roomId : directMessageRoomId);\r\n  }, [roomId, directMessageUid]);\r\n\r\n  // Go to saved Items\r\n\r\n\r\n  const gotoSavedItems = () => {\r\n    dispatch(showSecondaryWorkspace({\r\n      isShowingSecondaryWorkspace: true\r\n    }))\r\n    dispatch(setOnSave({\r\n      onSave: true\r\n    }))\r\n    dispatch(setOnOpenProfile({\r\n      onOpenProfile: null\r\n    }))\r\n    dispatch(setOnReplyInThread({\r\n      onReplyInThread: null\r\n    }))\r\n  }\r\n\r\n  //\r\n  if (\r\n    members?.includes(user.uid) ||\r\n    isUser ||\r\n    id === defaultRoomId ||\r\n    savedItems\r\n  )\r\n    return (\r\n      <div\r\n        className={\r\n          roomId === id || directMessageUid === uid\r\n            ? \"sidebar__option-container active\"\r\n            : \"sidebar__option-container\"\r\n        }\r\n        tabIndex=\"1\"\r\n        role=\"button\"\r\n        onClick={\r\n          savedItems?gotoSavedItems:\r\n          id && !isUser ? selectChannel : isUser ? selectPerson : seeAllDm\r\n        }\r\n      >\r\n        {icon && <div className=\"sidebar__icon\">{icon}</div>}\r\n        {icon ? (\r\n          <div className=\"sidebar__option__title\">{title}</div>\r\n        ) : (\r\n          <div className=\"sidebar__option__channel\">\r\n            {!isUser ? (\r\n              !isPrivate ? (\r\n                <span>#</span>\r\n              ) : (\r\n                <LockIcon />\r\n              )\r\n            ) : photoURL ? (\r\n              <div\r\n                className=\"img\"\r\n                style={{ backgroundImage: `url(${photoURL})` }}\r\n              ></div>\r\n            ) : (\r\n              <img src=\"default-avatar.jpg\" alt=\"avatar\" />\r\n            )}\r\n            <FiberManualRecordIcon\r\n              className={\r\n                isUser\r\n                  ? isOnline\r\n                    ? \"status online\"\r\n                    : \"status offline\"\r\n                  : \"no-status\"\r\n              }\r\n            />\r\n            <span className={!(\r\n          usersHaveRead?.includes(userUid) ||\r\n          usersHaveReadRoom?.includes(userUid)\r\n        ) &&\r\n          !icon?\"bold\":\"\" }>{title ? title : email}</span>\r\n          </div>\r\n        )}\r\n        {/* { (\r\n            <span class=\"position-absolute  translate-middle p-1 bg-danger border border-light rounded-circle unread-notification\">\r\n              <span class=\"visually-hidden\">New alerts</span>\r\n            </span>\r\n          )} */}\r\n      </div>\r\n    );\r\n  else return <div />;\r\n}\r\n\r\nexport default SidebarOption;\r\n","import React from 'react'\r\nimport { db } from '../../firebase';\r\n\r\nfunction SidebarCollapse(props){\r\n    let isShowing = false;\r\n    \r\n    const showHandler = () => {\r\n        isShowing = !isShowing\r\n    }\r\n    return(\r\n        <div className=\"collapse-container\">\r\n            <div className=\"sidebar__option-container\"\r\n            type=\"button\" data-bs-toggle=\"collapse\" data-bs-target={`#${props.id}`} aria-expanded=\"true\" aria-controls={`${props.id}`}\r\n            onClick={showHandler}\r\n            >\r\n                <div className={isShowing? props.title===\"Channels\"?\"sidebar__icon arrow-rotate\":\"sidebar__icon\":\"sidebar__icon\"}>\r\n                    {props.icon}\r\n                </div>\r\n                <div className=\"item-title\">\r\n                    {props.title}\r\n                </div>\r\n                \r\n            </div>\r\n            {\r\n            props.addIcon && <div className= \"add-channel-button\" role=\"button\" data-bs-toggle=\"modal\" data-bs-target=\"#createChannel\">\r\n                {props.addIcon}\r\n            </div>        \r\n            }\r\n        \r\n            <div className=\"collapse\" id={`${props.id}`}>\r\n                {props.options && props.options.map((option) =>{return option})}\r\n            </div>\r\n        \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarCollapse\r\n","import React from \"react\";\r\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\r\nimport SendRoundedIcon from \"@material-ui/icons/SendRounded\";\r\nfunction SidebarHeader() {\r\n  return (\r\n    <div>\r\n      <div className=\"dropdown general-dropdown\">\r\n        <div className=\"side-bar__header \">\r\n          <div\r\n            className=\"side-bar__header__button dropdown-toggle\"\r\n            id=\"fetchGeneralInfo\"\r\n            data-bs-toggle=\"dropdown\"\r\n            aria-expanded=\"false\"\r\n          >\r\n            <div className=\"side-bar__header__info \">\r\n              <button className=\"side-bar__header__team-name c-button-unstyled\">\r\n                <span>Fetch</span>\r\n                <KeyboardArrowDownIcon />\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <button className=\"c-button-unstyled send-button\">\r\n            <SendRoundedIcon style={{ height: 16 }} />\r\n          </button>\r\n          <ul className=\"dropdown-menu\" aria-labelledby=\"fetchGeneralInfo\">\r\n            <div aria-hidden=\"true\" className=\"c-menu_item__header\">\r\n              <div className=\"server-logo\">\r\n                <big>\r\n                  <strong>F</strong>\r\n                </big>\r\n              </div>\r\n              <span>Fetch</span>\r\n            </div>\r\n            <div\r\n              className=\"dropdown-item\"\r\n              role=\"button\"\r\n              data-bs-toggle=\"modal\"\r\n              data-bs-target=\"#createChannel\"\r\n            >\r\n              Create channel\r\n            </div>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SidebarHeader;\r\n","import React from 'react'\r\nimport \"../css/loading.css\"\r\nfunction SmallLoader() {\r\n    return (\r\n        <div className=\"loader\"></div>\r\n    )\r\n}\r\n\r\nexport default SmallLoader\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"../../css/sidebar.css\";\r\nimport SidebarOption from \"./SidebarOption\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport ForumIcon from \"@material-ui/icons/Forum\";\r\nimport AlternateEmailIcon from \"@material-ui/icons/AlternateEmail\";\r\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { db } from \"../../firebase\";\r\nimport { useCollection } from \"react-firebase-hooks/firestore\";\r\nimport SidebarCollapse from \"./SidebarCollapse\";\r\nimport SidebarHeader from \"./SidebarHeader\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  selectDirectMessageRoom,\r\n  selectSecondaryWorkspaceStatus,\r\n  selectUser,\r\n} from \"../../features/appSlice\";\r\nimport SmallLoader from \"../SmallLoader\";\r\nimport TurnedInNotOutlinedIcon from \"@material-ui/icons/TurnedInNotOutlined\";\r\nfunction SideBar({ width }) {\r\n  const [channels, loading, error] = useCollection(db.collection(\"room\"));\r\n  const user = useSelector(selectUser);\r\n  const [users, usersLoading, usersError] = useCollection(\r\n    db.collection(\"users\")\r\n  );\r\n  const [directRooms] = useCollection(db.collection(\"directRooms\"));\r\n  const channelList = [];\r\n\r\n  channels?.docs.map((doc) =>\r\n    channelList.push(\r\n      <SidebarOption\r\n        title={doc.data().name}\r\n        key={doc.id}\r\n        id={doc.id}\r\n        isPrivate={doc.data().isPrivate}\r\n        usersHaveReadRoom={doc.data().usersHaveRead}\r\n        members={doc.data().members}\r\n      />\r\n    )\r\n  );\r\n  const usersList = [];\r\n  users?.docs.map((doc) =>\r\n    usersList.push(\r\n      <SidebarOption\r\n        title={doc.data().displayName}\r\n        email={doc.data().email}\r\n        key={doc.id}\r\n        uid={doc.data().uid}\r\n        photoURL={doc.data().photoURL}\r\n        isOnline={doc.data().isOnline}\r\n        isUser={true}\r\n      />\r\n    )\r\n  );\r\n  // Collapse sidebar handle\r\n\r\n  return (\r\n    <div className=\"side-bar-container\" style={{ width: width }}>\r\n      {loading && usersLoading ? (\r\n        <SmallLoader />\r\n      ) : (\r\n        <>\r\n          <SidebarHeader />\r\n          <SidebarOption\r\n            title=\"Saved items\"\r\n            icon={<TurnedInNotOutlinedIcon />}\r\n            savedItems = {true}\r\n          />\r\n          {/* <SidebarCollapse\r\n            options={[\r\n              <SidebarOption\r\n                title=\"All Unreads\"\r\n                icon={<ForumIcon />}\r\n                isDropdown={true}\r\n              />,\r\n              <SidebarOption\r\n                title=\"Mentions & reactions\"\r\n                icon={<AlternateEmailIcon />}\r\n                isDropdown={true}\r\n              />,\r\n            ]}\r\n            id={\"browseslack\"}\r\n            title=\"Browse Slack\"\r\n            icon={<MoreVertIcon />}\r\n          /> */}\r\n\r\n          <SidebarCollapse\r\n            title=\"Channels\"\r\n            icon={<ArrowRightIcon />}\r\n            id={\"channels\"}\r\n            addIcon={<AddIcon />}\r\n            options={channelList}\r\n          />\r\n\r\n          <SidebarCollapse\r\n            title=\"Direct Message\"\r\n            icon={<ArrowRightIcon />}\r\n            id=\"directmessage\"\r\n            options={usersList}\r\n          />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SideBar;\r\n","import { Picker } from \"emoji-mart\";\r\nimport React from \"react\";\r\n\r\nfunction ActionButton({ emoji, title, action, onSelect }) {\r\n  return (\r\n    <div\r\n      onClick={() => action(emoji)}\r\n      className=\"c-button-unstyled message-action__button\"\r\n      data-bs-toggle=\"tooltip\"\r\n      data-bs-placement=\"top\"\r\n      title={title}\r\n    >\r\n      {emoji}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ActionButton;\r\n","import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectUser } from \"../../features/appSlice\";\r\n\r\nfunction Reaction({ emoji, count, senders, onClick }) {\r\n  const user = useSelector(selectUser);\r\n  const [isSender, setIsSender] = useState(false);\r\n  useEffect(() => {\r\n      if(senders?.includes(user?.displayName)){\r\n        setIsSender(true);\r\n      }\r\n      else (setIsSender(false))\r\n  }, )\r\n\r\n  return (\r\n    <button className={isSender?\"c-button-unstyled c-reaction active\":\"c-button-unstyled c-reaction\"} onClick={() => onClick(emoji)}>\r\n      <div className=\"c-reaction__emoji\">{emoji}</div>\r\n      <span className=\"c-reaction__count\">{count}</span>\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Reaction;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useCollection } from \"react-firebase-hooks/firestore\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  enterDirectMessage,\r\n  selectDirectMessageRoom,\r\n  selectDocId,\r\n  selectRoomId,\r\n  selectSavedItemId,\r\n  selectSavedItemsToggle,\r\n  selectSecondaryWorkspaceStatus,\r\n  selectThreadMessageDirectId,\r\n  selectThreadMessageRoomId,\r\n  selectUser,\r\n  selectUserProfileUid,\r\n  setOnOpenProfile,\r\n  setOnReplyInThread,\r\n  setOnSave,\r\n  setOnSendingReaction,\r\n  setSavedItemId,\r\n  setSavedItemsToggle,\r\n  setSelectedUser,\r\n  setThreadMessageDirectId,\r\n  setThreadMessageId,\r\n  setThreadMessageRoomId,\r\n  setTime,\r\n  setUserProfileUid,\r\n  showSecondaryWorkspace,\r\n} from \"../../features/appSlice\";\r\nimport { db } from \"../../firebase\";\r\nimport ActionButton from \"./ActionButton\";\r\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\r\nimport ReplyIcon from \"@material-ui/icons/Reply\";\r\nimport ForwardOutlinedIcon from \"@material-ui/icons/ForwardOutlined\";\r\nimport TurnedInNotOutlinedIcon from \"@material-ui/icons/TurnedInNotOutlined\";\r\nimport TurnedInIcon from \"@material-ui/icons/TurnedIn\";\r\nimport Reaction from \"./Reaction\";\r\nimport firebase from \"firebase\";\r\nimport KeyboardReturnIcon from \"@material-ui/icons/KeyboardReturn\";\r\nimport { useRef } from \"react\";\r\nimport ArrowForwardIosRoundedIcon from \"@material-ui/icons/ArrowForwardIosRounded\";\r\nconst Message = React.forwardRef(\r\n  (\r\n    {\r\n      id,\r\n      userName,\r\n      userImage,\r\n      message,\r\n      timestamp,\r\n      uid,\r\n      description,\r\n      reactions,\r\n      onClick,\r\n      emojiMartPosition,\r\n      emojiReact,\r\n      reactToggle,\r\n      savedBy,\r\n      isSaved,\r\n      moveToItem,\r\n      inThread,\r\n      messageRoomId,\r\n      messageRoomDirectId,\r\n      replyTo,\r\n      inMainSave,\r\n    },\r\n    ref\r\n  ) => {\r\n    const userInf = useSelector(selectUser);\r\n    const displayName = userInf?.uid === uid ? \"You\" : userName;\r\n    const [onHover, setOnHover] = useState(false);\r\n    const roomSelectId = useSelector(selectRoomId);\r\n    const roomId = !messageRoomDirectId?(messageRoomId?messageRoomId:roomSelectId):null\r\n    const direcSelectId = useSelector(selectDirectMessageRoom);\r\n    const directId = !messageRoomId?(messageRoomDirectId?messageRoomDirectId:direcSelectId):null\r\n    const [subMessages] = useCollection(\r\n      id &&\r\n        (roomId\r\n          ? db\r\n              .collection(\"room\")\r\n              .doc(roomId)\r\n              .collection(\"messages\")\r\n              .doc(id)\r\n              .collection(\"subMessages\")\r\n              .orderBy(\"timestamp\", \"asc\")\r\n          : directId\r\n          ? db\r\n              .collection(\"directRooms\")\r\n              .doc(directId)\r\n              .collection(\"messages\")\r\n              .doc(id)\r\n              .collection(\"subMessages\")\r\n              .orderBy(\"timestamp\", \"asc\")\r\n          : undefined)\r\n    );\r\n    // Save selected user Info\r\n    const [users, loading] = useCollection(db.collection(\"users\"));\r\n    const userUid = useSelector(selectUserProfileUid);\r\n    const user = users?.docs.find((elem) => elem.data().uid === userUid);\r\n    const photoURL = user?.data().photoURL\r\n      ? user.data().photoURL\r\n      : \"default-avatar.jpg\";\r\n    const isOnline = user?.data().isOnline;\r\n    const time = new Date(timestamp?.toDate());\r\n    var date = time.getDate();\r\n    var month = time.getMonth();\r\n    var hours = time.getHours();\r\n    var minutes = time.getMinutes();\r\n    if (minutes < 10) {\r\n      minutes = \"0\" + minutes;\r\n    }\r\n    var localTime = hours + \":\" + minutes + \" \";\r\n    var timeWithDate = \"\";\r\n    console.log(date + month);\r\n    const [onSendingUid, setOnSendingUid] = useState(false);\r\n    //\r\n    // Open emojimart for each message\r\n    const [position, setPosition] = useState(null);\r\n    const elementId = isSaved ? \"aa\" + id : inThread ? \"aaa\" + id : \"a\" + id;\r\n    const openMovingEmojiMart = () => {\r\n      const chatMessage = document.querySelector(\"#\" + elementId);\r\n\r\n      const positionInfo = chatMessage.getBoundingClientRect();\r\n      setPosition(positionInfo);\r\n      onClick({ positionInfo, id });\r\n    };\r\n    // Hover message handle\r\n    const hoverHandler = () => {\r\n      if (description || (emojiMartPosition && emojiMartPosition.id !== id)) {\r\n        setOnHover(false);\r\n      } else setOnHover(true);\r\n    };\r\n    const notHoverHandler = () => {\r\n      if (emojiMartPosition && emojiMartPosition.id === id) {\r\n        setOnHover(true);\r\n      } else setOnHover(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n      if (!emojiMartPosition) {\r\n        setOnHover(false);\r\n      }\r\n    }, [emojiMartPosition]);\r\n\r\n    const dispatch = useDispatch();\r\n    const sendUserUid = () => {\r\n      if (!loading) {\r\n        dispatch(\r\n          setUserProfileUid({\r\n            userUid: uid,\r\n          })\r\n        );\r\n        // Save selected User Inf\r\n        setOnSendingUid(true);\r\n        console.log(\"dispatched\");\r\n      }\r\n    };\r\n    console.log(\"...\");\r\n    const isOpen = useSelector(selectSecondaryWorkspaceStatus);\r\n    useEffect(() => {\r\n      if (onSendingUid)\r\n        dispatch(\r\n          setSelectedUser({\r\n            selectedUser: {\r\n              displayName: user?.data().displayName,\r\n              email: user?.data().email,\r\n              uid: userUid,\r\n              photoURL: photoURL,\r\n              isOnline: isOnline,\r\n              whatIDo: user?.data().whatIDo,\r\n            },\r\n          })\r\n        );\r\n      return () => {\r\n        setOnSendingUid(false);\r\n      };\r\n    }, [onSendingUid, userUid, isOpen]);\r\n    const doNothing = () => {};\r\n    const docUserId = useSelector(selectDocId);\r\n    // Handle message actions\r\n\r\n    // Create reaction\r\n    const [emoji, setEmoji] = useState(\"\");\r\n    const addReaction = (e) => {\r\n      let emoji = e.native;\r\n      setEmoji(emoji);\r\n    };\r\n    // Reply in thread\r\n    const replyInThread = () => {\r\n      dispatch(\r\n        showSecondaryWorkspace({\r\n          isShowingSecondaryWorkspace: true,\r\n        })\r\n      );\r\n      dispatch(\r\n        setOnSave({\r\n          onSave: null,\r\n        })\r\n      );\r\n\r\n      dispatch(\r\n        setOnOpenProfile({\r\n          onOpenProfile: null,\r\n        })\r\n      );\r\n      dispatch(\r\n        setOnReplyInThread({\r\n          onReplyInThread: true,\r\n        })\r\n      );\r\n      dispatch(\r\n        setThreadMessageId({\r\n          threadMessageId: id,\r\n        })\r\n      );\r\n      dispatch(\r\n        setThreadMessageRoomId({\r\n          threadMessageRoomId: messageRoomId?messageRoomId:roomId,\r\n        })\r\n      );\r\n      dispatch(\r\n        setThreadMessageDirectId({\r\n          threadMessageDirectId: messageRoomDirectId?messageRoomDirectId:directId,\r\n        })\r\n      );\r\n    };\r\n    const shareMessage = () => {};\r\n    const threadMessageRoomId = useSelector(selectThreadMessageRoomId);\r\n    const threadMessageDirectId = useSelector(selectThreadMessageDirectId);\r\n    // Save item\r\n    const savedItemsToggle = useSelector(selectSavedItemsToggle);\r\n    const saveItem = async () => {\r\n      dispatch(\r\n        setSavedItemsToggle({\r\n          savedItemsToggle: !savedItemsToggle,\r\n        })\r\n      );\r\n      let savedByArr = savedBy ? savedBy : [];\r\n      if (id) {\r\n        if (!savedBy || !savedBy.includes(docUserId)) {\r\n          savedByArr.push(docUserId);\r\n          if (replyTo) {\r\n            db.collection(\"users\")\r\n              .doc(docUserId)\r\n              .collection(\"savedItems\")\r\n              .add({\r\n                messageId: id ? id : null,\r\n                roomId: threadMessageRoomId ? threadMessageRoomId : null,\r\n                roomDirectId: threadMessageDirectId\r\n                  ? threadMessageDirectId\r\n                  : null,\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                replyTo: replyTo,\r\n              });\r\n            if (threadMessageRoomId) {\r\n              db.collection(\"room\")\r\n                .doc(threadMessageRoomId)\r\n                .collection(\"messages\")\r\n                .doc(replyTo)\r\n                .collection(\"subMessages\")\r\n                .doc(id)\r\n                .update({\r\n                  savedBy: savedByArr,\r\n                });\r\n            } else if (threadMessageDirectId) {\r\n              db.collection(\"directRooms\")\r\n                .doc(threadMessageDirectId)\r\n                .collection(\"messages\")\r\n                .doc(replyTo)\r\n                .collection(\"subMessages\")\r\n                .doc(id)\r\n                .update({\r\n                  savedBy: savedByArr,\r\n                });\r\n            }\r\n          } else if (inThread) {\r\n            db.collection(\"users\")\r\n              .doc(docUserId)\r\n              .collection(\"savedItems\")\r\n              .add({\r\n                messageId: id ? id : null,\r\n                roomId: threadMessageRoomId ? threadMessageRoomId : null,\r\n                roomDirectId: threadMessageDirectId ? directId : null,\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n              });\r\n\r\n            if (threadMessageRoomId) {\r\n              db.collection(\"room\")\r\n                .doc(threadMessageRoomId)\r\n                .collection(\"messages\")\r\n                .doc(id)\r\n                .update({\r\n                  savedBy: savedByArr,\r\n                });\r\n            } else if (threadMessageDirectId) {\r\n              db.collection(\"directRooms\")\r\n                .doc(threadMessageDirectId)\r\n                .collection(\"messages\")\r\n                .doc(id)\r\n                .update({\r\n                  savedBy: savedByArr,\r\n                });\r\n            }\r\n          } else {\r\n            db.collection(\"users\")\r\n              .doc(docUserId)\r\n              .collection(\"savedItems\")\r\n              .add({\r\n                messageId: id ? id : null,\r\n                roomId: roomId ? roomId : null,\r\n                roomDirectId: directId ? directId : null,\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n              });\r\n\r\n            if (roomId) {\r\n              db.collection(\"room\")\r\n                .doc(roomId)\r\n                .collection(\"messages\")\r\n                .doc(id)\r\n                .update({\r\n                  savedBy: savedByArr,\r\n                });\r\n            } else if (directId) {\r\n              db.collection(\"directRooms\")\r\n                .doc(directId)\r\n                .collection(\"messages\")\r\n                .doc(id)\r\n                .update({\r\n                  savedBy: savedByArr,\r\n                });\r\n            }\r\n          }\r\n        } else {\r\n          let i = savedByArr.indexOf(docUserId);\r\n          savedByArr.splice(i, 1);\r\n          const snapshot = await db\r\n            .collection(\"users\")\r\n            .doc(docUserId)\r\n            .collection(\"savedItems\")\r\n            .where(\"messageId\", \"==\", id)\r\n            .get();\r\n          let itemId = null;\r\n          console.log(snapshot);\r\n          snapshot.forEach((doc) => (itemId = doc.id));\r\n          itemId &&\r\n            db\r\n              .collection(\"users\")\r\n              .doc(docUserId)\r\n              .collection(\"savedItems\")\r\n              .doc(itemId)\r\n              .delete()\r\n              .then(() => console.log(\"Delete!\"))\r\n              .catch((err) => console.log(err.message));\r\n\r\n          if (replyTo) {\r\n            if (threadMessageRoomId) {\r\n              db.collection(\"room\")\r\n                .doc(threadMessageRoomId)\r\n                .collection(\"messages\")\r\n                .doc(replyTo)\r\n                .collection(\"subMessages\")\r\n                .doc(id)\r\n                .update({\r\n                  savedBy: savedByArr,\r\n                });\r\n            } else if (threadMessageDirectId) {\r\n              db.collection(\"directRooms\")\r\n                .doc(threadMessageDirectId)\r\n                .collection(\"messages\")\r\n                .doc(replyTo)\r\n                .collection(\"subMessages\")\r\n                .doc(id)\r\n                .update({\r\n                  savedBy: savedByArr,\r\n                });\r\n            }\r\n          } else if (inThread) {\r\n            if (threadMessageRoomId) {\r\n              db.collection(\"room\")\r\n                .doc(threadMessageRoomId)\r\n                .collection(\"messages\")\r\n                .doc(id)\r\n                .update({\r\n                  savedBy: savedByArr,\r\n                });\r\n            } else if (threadMessageDirectId) {\r\n              db.collection(\"directRooms\")\r\n                .doc(threadMessageDirectId)\r\n                .collection(\"messages\")\r\n                .doc(id)\r\n                .update({\r\n                  savedBy: savedByArr,\r\n                });\r\n            }\r\n          } else if (roomId) {\r\n            db.collection(\"room\")\r\n              .doc(roomId)\r\n              .collection(\"messages\")\r\n              .doc(id)\r\n              .update({\r\n                savedBy: savedByArr,\r\n              });\r\n          } else if (directId) {\r\n            db.collection(\"directRooms\")\r\n              .doc(directId)\r\n              .collection(\"messages\")\r\n              .doc(id)\r\n              .update({\r\n                savedBy: savedByArr,\r\n              });\r\n          }\r\n        }\r\n      } else return;\r\n    };\r\n    // Send reaction to db\r\n\r\n    const sendReaction = (emoji) => {\r\n      dispatch(\r\n        setOnSendingReaction({\r\n          onSendingReaction: true,\r\n        })\r\n      );\r\n      setTimeout(() => {\r\n        dispatch(\r\n          setOnSendingReaction({\r\n            onSendingReaction: false,\r\n          }),\r\n          500\r\n        );\r\n      });\r\n      if (id) {\r\n        if (isSaved)\r\n          dispatch(\r\n            setSavedItemsToggle({ savedItemsToggle: !savedItemsToggle })\r\n          );\r\n        let reactionsArr = reactions ? reactions.slice() : [];\r\n        const findEmoji = reactionsArr.findIndex((reaction, index) => {\r\n          if (reaction.title === emoji) {\r\n            return true;\r\n          }\r\n        });\r\n\r\n        if (findEmoji > -1) {\r\n          let count = reactionsArr[findEmoji].count;\r\n          let reactUser = userInf.displayName;\r\n          let senders = reactionsArr[findEmoji].senders;\r\n          if (senders.includes(userInf?.displayName)) {\r\n            let userIndex = senders.indexOf(reactUser);\r\n            senders.splice(userIndex, 1);\r\n            count = count - 1;\r\n          } else {\r\n            count = count + 1;\r\n            senders.push(reactUser);\r\n          }\r\n          reactionsArr[findEmoji].senders = senders;\r\n          reactionsArr[findEmoji].count = count;\r\n        } else if (findEmoji === -1) {\r\n          let count = 0;\r\n          let reactUser = userInf.displayName;\r\n          let senders = [];\r\n          senders.push(reactUser);\r\n          reactionsArr.push({\r\n            title: emoji,\r\n            senders: senders,\r\n            count: count + 1,\r\n          });\r\n        }\r\n        if (inThread) {\r\n          if (threadMessageDirectId)\r\n            db.collection(\"directRooms\")\r\n              .doc(threadMessageDirectId)\r\n              .collection(\"messages\")\r\n              .doc(id)\r\n              .update({\r\n                reactions: reactionsArr,\r\n              });\r\n          else if (threadMessageRoomId) {\r\n            db.collection(\"room\")\r\n              .doc(threadMessageRoomId)\r\n              .collection(\"messages\")\r\n              .doc(id)\r\n              .update({\r\n                reactions: reactionsArr,\r\n              });\r\n          }\r\n        } else if (replyTo) {\r\n          if (threadMessageDirectId)\r\n            db.collection(\"directRooms\")\r\n              .doc(threadMessageDirectId)\r\n              .collection(\"messages\")\r\n              .doc(replyTo)\r\n              .collection(\"subMessages\")\r\n              .doc(id)\r\n              .update({\r\n                reactions: reactionsArr,\r\n              });\r\n          else if (threadMessageRoomId) {\r\n            db.collection(\"room\")\r\n              .doc(threadMessageRoomId)\r\n              .collection(\"messages\")\r\n              .doc(replyTo)\r\n              .collection(\"subMessages\")\r\n              .doc(id)\r\n              .update({\r\n                reactions: reactionsArr,\r\n              });\r\n          }\r\n        } else if (directId) {\r\n          console.log(id);\r\n          db.collection(\"directRooms\")\r\n            .doc(directId)\r\n            .collection(\"messages\")\r\n            .doc(id)\r\n            .update({\r\n              reactions: reactionsArr,\r\n            });\r\n        } else if (roomId) {\r\n          db.collection(\"room\")\r\n            .doc(roomId)\r\n            .collection(\"messages\")\r\n            .doc(id)\r\n            .update({\r\n              reactions: reactionsArr,\r\n            });\r\n        }\r\n      } else return;\r\n    };\r\n\r\n    useEffect(() => {\r\n      if (\r\n        emojiReact &&\r\n        emojiReact !== \"\" &&\r\n        emojiMartPosition &&\r\n        id === emojiMartPosition?.id\r\n      ) {\r\n        console.log(emojiReact);\r\n        sendReaction(emojiReact);\r\n      }\r\n    }, [reactToggle]);\r\n\r\n    // Scroll\r\n    const savedItemId = useSelector(selectSavedItemId);\r\n    useEffect(() => {\r\n      if (savedItemId) {\r\n        ref?.current?.scrollIntoView({});\r\n      }\r\n\r\n      return () => {\r\n        setTimeout(() => {\r\n          dispatch(setSavedItemId({ savedItemId: null }));\r\n        }, 1000);\r\n      };\r\n    }, [roomId, directId, savedItemId]);\r\n    // Ref\r\n    const actionRef = useRef(null);\r\n\r\n    // Move to channel button\r\n    const moveToChannel = () => {};\r\n    // Thread hover\r\n    const [onThreadHover, setOnThreadHover] = useState(false);\r\n    const onThreadHoverHandler = () => {\r\n      setOnThreadHover(true);\r\n    };\r\n    const notOnThreadHoverHandler = () => {\r\n      setOnThreadHover(false);\r\n    };\r\n    const sendThreadUserUid = (specUid) => {\r\n      if (!loading) {\r\n        dispatch(\r\n          setUserProfileUid({\r\n            userUid: specUid,\r\n          })\r\n        );\r\n        // Save selected User Inf\r\n        setOnSendingUid(true);\r\n        console.log(\"dispatched\");\r\n      }\r\n    };\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        className={\r\n          onHover && !inMainSave\r\n            ? savedBy?.includes(docUserId)\r\n              ? \"message-container active saved\"\r\n              : \"message-container active\"\r\n            : savedBy?.includes(docUserId) && !inMainSave\r\n            ? \"message-container saved\"\r\n            : \"message-container\"\r\n        }\r\n        onMouseOver={hoverHandler}\r\n        onMouseOut={notHoverHandler}\r\n        id={elementId}\r\n      >\r\n        {savedBy?.includes(docUserId) && !inMainSave && (\r\n          <div className=\"message__label\">\r\n            <div className=\"message__label__icon\">{<TurnedInIcon />}</div>\r\n            <div role=\"button\" className=\"message__label__content\">\r\n              Added to your saved items\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div className={\"message-container__inner\"}>\r\n          {(timestamp || description) && (\r\n            <>\r\n              <div\r\n                style={{ backgroundImage: `url(${userImage})` }}\r\n                alt=\"\"\r\n                role=\"button\"\r\n                onClick={uid ? sendUserUid : doNothing}\r\n                data-bs-toggle={uid ? \"modal\" : \"false\"}\r\n                data-bs-target=\"#profileModal\"\r\n                className=\"message__avatar\"\r\n              />\r\n\r\n              <div className=\"message__info\">\r\n                <div className=\"status\">\r\n                  <a\r\n                    role=\"button\"\r\n                    onClick={uid ? sendUserUid : doNothing}\r\n                    data-bs-toggle={uid ? \"modal\" : \"false\"}\r\n                    data-bs-target=\"#profileModal\"\r\n                  >\r\n                    {description ? userName : displayName}\r\n                  </a>{\" \"}\r\n                  <span>{description ? \"\" : localTime}</span>\r\n                </div>\r\n                <p className=\"message\">{message}</p>\r\n                <div className=\"message__reaction-bar\">\r\n                  {reactions\r\n                    ? reactions.map((reaction) => {\r\n                        if (reaction.count > 0)\r\n                          return (\r\n                            <Reaction\r\n                              emoji={reaction.title}\r\n                              count={reaction.count}\r\n                              senders={reaction.senders}\r\n                              key={reaction.title}\r\n                              onClick={sendReaction}\r\n                            />\r\n                          );\r\n                      })\r\n                    : \"\"}\r\n                </div>\r\n                {subMessages?.docs.length > 0 && !inThread && !inMainSave && (\r\n                  <div\r\n                    className=\"message__thread-button\"\r\n                    onMouseOver={onThreadHoverHandler}\r\n                    onMouseOut={notOnThreadHoverHandler}\r\n                  >\r\n                    <div\r\n                      className=\"message__thread-avatar\"\r\n                      style={{\r\n                        backgroundImage: `url(${\r\n                          subMessages.docs[subMessages.docs.length - 1].data()\r\n                            .userImage\r\n                        })`,\r\n                      }}\r\n                      alt=\"\"\r\n                      role=\"button\"\r\n                      onClick={() =>\r\n                        subMessages.docs[subMessages.docs.length - 1].data().uid\r\n                          ? sendThreadUserUid(\r\n                              subMessages.docs[\r\n                                subMessages.docs.length - 1\r\n                              ].data().uid\r\n                            )\r\n                          : doNothing()\r\n                      }\r\n                      data-bs-toggle={uid ? \"modal\" : \"false\"}\r\n                      data-bs-target=\"#profileModal\"\r\n                    ></div>\r\n                    <div\r\n                      className=\"message__thread-count\"\r\n                      onClick={replyInThread}\r\n                    >\r\n                      {subMessages?.docs.length > 1\r\n                        ? subMessages?.docs.length + \" replies\"\r\n                        : subMessages?.docs.length + \" reply\"}\r\n                    </div>\r\n                    <div\r\n                      className=\"message__thread-description\"\r\n                      onClick={replyInThread}\r\n                    >\r\n                      {!onThreadHover ? (\r\n                        <span className=\"message__thread-description__content\">\r\n                          Last reply\r\n                        </span>\r\n                      ) : (\r\n                        <>\r\n                          <span className=\"message__thread-description__content\">\r\n                            View thread\r\n                          </span>\r\n                          <ArrowForwardIosRoundedIcon className=\"message__bar-arrow\" />\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </>\r\n          )}\r\n          {\r\n            <div\r\n              className={\r\n                onHover ? \"c-message__action\" : \"c-message__action collapse\"\r\n              }\r\n            >\r\n              <div className=\"c-message__action__group\">\r\n                {!isSaved && !replyTo && !inThread && (\r\n                  <>\r\n                    <ActionButton\r\n                      action={sendReaction}\r\n                      emoji={\"✅\"}\r\n                      title=\"Completed\"\r\n                    />\r\n                    <ActionButton\r\n                      action={sendReaction}\r\n                      emoji={\"👀\"}\r\n                      title=\"Taking a look...\"\r\n                    />\r\n                    <ActionButton\r\n                      action={sendReaction}\r\n                      emoji={\"🙌\"}\r\n                      title=\"Nicely done\"\r\n                    />\r\n                  </>\r\n                )}\r\n                <ActionButton\r\n                  onSelect={addReaction}\r\n                  action={openMovingEmojiMart}\r\n                  emoji={<InsertEmoticonIcon />}\r\n                  title=\"Find a reaction\"\r\n                />\r\n                {inThread && (\r\n                  <ActionButton\r\n                    action={moveToChannel}\r\n                    emoji={<KeyboardReturnIcon />}\r\n                    title=\"View in channel\"\r\n                  />\r\n                )}\r\n                {!replyTo && !inThread && (\r\n                  <ActionButton\r\n                    action={replyInThread}\r\n                    emoji={<ReplyIcon />}\r\n                    title=\"Reply in thread\"\r\n                  />\r\n                )}\r\n                {/* <ActionButton\r\n                  action={shareMessage}\r\n                  emoji={<ForwardOutlinedIcon />}\r\n                  title=\"Share message\"\r\n                /> */}\r\n                <ActionButton\r\n                  action={saveItem}\r\n                  emoji={\r\n                    !savedBy?.includes(docUserId) ? (\r\n                      <TurnedInNotOutlinedIcon />\r\n                    ) : (\r\n                      <TurnedInIcon style={{ color: \"red\" }} />\r\n                    )\r\n                  }\r\n                  title=\"Add to saved items\"\r\n                />\r\n              </div>\r\n            </div>\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default Message;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useCollection, useDocument } from \"react-firebase-hooks/firestore\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"../css/secondaryview.css\";\r\nimport {\r\n  enterDirectMessage,\r\n  enterRoom,\r\n  selectChosenUser,\r\n  selectDirectMessageRoom,\r\n  selectDocId,\r\n  selectLocalTime,\r\n  selectOnMainSave,\r\n  selectOnOpenProfile,\r\n  selectOnReplyInThread,\r\n  selectOnSave,\r\n  selectOnSendingReaction,\r\n  selectRoomId,\r\n  selectSavedItemsToggle,\r\n  selectSecondaryWorkspaceStatus,\r\n  selectThreadMessageDirectId,\r\n  selectThreadMessageId,\r\n  selectThreadMessageRoomId,\r\n  selectUser,\r\n  selectUserProfileUid,\r\n  setOnMainSave,\r\n  setOnOpenProfile,\r\n  setOnReplyInThread,\r\n  setOnSave,\r\n  setSavedItemId,\r\n  setSelectedUser,\r\n  setUserProfileUid,\r\n  showSecondaryWorkspace,\r\n} from \"../features/appSlice\";\r\nimport { db } from \"../firebase\";\r\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Message from \"./Chat/Message\";\r\nimport { Picker } from \"emoji-mart\";\r\nimport SmallLoader from \"./SmallLoader\";\r\nimport ChatInput from \"./Chat/ChatInput\";\r\nimport AspectRatioRoundedIcon from \"@material-ui/icons/AspectRatioRounded\";\r\nfunction SecondaryView({ width, resize }) {\r\n  const selectedUser = useSelector(selectChosenUser);\r\n  const photoURL = selectedUser?.photoURL;\r\n  const title = selectedUser?.displayName;\r\n  const isOnline = selectedUser?.isOnline;\r\n  const isOpen = useSelector(selectSecondaryWorkspaceStatus);\r\n  const currentRoomId = useSelector(selectRoomId);\r\n  const currentDirectId = useSelector(selectDirectMessageRoom);\r\n  const dispatch = useDispatch();\r\n  const userInf = useSelector(selectUser);\r\n  const job = selectedUser?.whatIDo;\r\n  const localTime = useSelector(selectLocalTime);\r\n  const ref = useRef(null);\r\n  const docUserId = useSelector(selectDocId);\r\n  const [emojiReact, setEmojiReact] = useState(\"\");\r\n  const [reactToggle, setReactToggle] = useState(false);\r\n  const [position, setPosition] = useState(null);\r\n  const [users, usersLoading] = useCollection(db.collection(\"users\"));\r\n  const savedItemsToggle = useSelector(selectSavedItemsToggle);\r\n  const [rooms] = useCollection(db.collection(\"room\"));\r\n\r\n  const [roomMessages] = useCollection(\r\n    currentRoomId &&\r\n      db.collection(\"room\").doc(currentRoomId).collection(\"messages\")\r\n  );\r\n  const [directRooms] = useCollection(db.collection(\"directRooms\"));\r\n  const [directMessages] = useCollection(\r\n    currentDirectId &&\r\n      db.collection(\"directRooms\").doc(currentDirectId).collection(\"messages\")\r\n  );\r\n  console.log(currentDirectId);\r\n  const [savedItemsInfo, itemsLoading] = useCollection(\r\n    docUserId &&\r\n      db\r\n        .collection(\"users\")\r\n        .doc(docUserId)\r\n        .collection(\"savedItems\")\r\n        .orderBy(\"timestamp\", \"desc\")\r\n  );\r\n  const closeWorkspace = () => {\r\n    dispatch(\r\n      showSecondaryWorkspace({\r\n        isShowingSecondaryWorkspace: false,\r\n      })\r\n    );\r\n    dispatch(\r\n      setOnOpenProfile({\r\n        onOpenProfile: null,\r\n      })\r\n    );\r\n    dispatch(\r\n      setOnReplyInThread({\r\n        onReplyInThread: null,\r\n      })\r\n    );\r\n    dispatch(\r\n      setOnSave({\r\n        onSave: null,\r\n      })\r\n    );\r\n    console.log(\"close\");\r\n    const chatContainer = document.querySelector(\".chat-container\");\r\n    chatContainer?.classList.remove(\"collapse\");\r\n  };\r\n  // Get toggle state\r\n  console.log(savedItemsToggle);\r\n  //Close emoji mart\r\n  useEffect(() => {\r\n    function handleClickOutside(event) {\r\n      if (ref.current && !ref.current.contains(event.target)) {\r\n        setPosition(null);\r\n      }\r\n    }\r\n\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      // Unbind the event listener on clean up\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  });\r\n  // Open emoji mart\r\n  const openEmojiMart = (position) => {\r\n    setPosition(position);\r\n    console.log(position);\r\n  };\r\n  const [savedMessages, setSavedMessages] = useState(null);\r\n\r\n  const getSavedMessages = () => {\r\n    let arr = savedItemsInfo?.docs.map(async (doc) => {\r\n      const messageId = doc.data().messageId;\r\n      const roomId = doc.data().roomId;\r\n      const roomDirectId = doc.data().roomDirectId;\r\n      const replyTo = doc.data().replyTo;\r\n      let messageRef = null;\r\n      if (replyTo) {\r\n        console.log(\"REPLY TO\");\r\n        if (roomId)\r\n          messageRef = db\r\n            .collection(\"room\")\r\n            .doc(roomId)\r\n            .collection(\"messages\")\r\n            .doc(replyTo)\r\n            .get();\r\n        else if (roomDirectId)\r\n          messageRef = db\r\n            .collection(\"directRooms\")\r\n            .doc(roomDirectId)\r\n            .collection(\"messages\")\r\n            .doc(replyTo)\r\n            .get();\r\n      } else if (roomId) {\r\n        messageRef = db\r\n          .collection(\"room\")\r\n          .doc(roomId)\r\n          .collection(\"messages\")\r\n          .doc(messageId)\r\n          .get();\r\n      } else if (roomDirectId && messageId) {\r\n        messageRef = db\r\n          .collection(\"directRooms\")\r\n          .doc(roomDirectId)\r\n          .collection(\"messages\")\r\n          .doc(messageId)\r\n          .get();\r\n      }\r\n\r\n      return messageRef;\r\n    });\r\n    return arr;\r\n  };\r\n  useEffect(async () => {\r\n    console.log(\"Toggle\");\r\n    let arr = getSavedMessages();\r\n    console.log(arr);\r\n    let newArr = [];\r\n    if (arr) {\r\n      newArr = Promise.all(arr);\r\n      newArr.then((values) => setSavedMessages(values));\r\n      console.log(savedMessages);\r\n    }\r\n  }, [savedItemsToggle, savedItemsInfo, roomMessages, directMessages]);\r\n\r\n  // useEffect(() => {\r\n  //   if (savedItemsInfo && !itemsLoading) {\r\n  //     getSavedMessages();\r\n  //     console.log(savedMessages)\r\n  //   }\r\n  // }, [isOpen]);\r\n\r\n  const addEmoji = (e) => {\r\n    let emoji = e.native;\r\n    setEmojiReact(emoji);\r\n    setReactToggle(!reactToggle);\r\n  };\r\n\r\n  // Move to message\r\n\r\n  const moveToMessage = (info) => {\r\n    if (info.savedMessageInfo) {\r\n      let infoRoomId = info.savedMessageInfo.roomId;\r\n      let infoRoomDirectId = info.savedMessageInfo.roomDirectId;\r\n      if (infoRoomId) {\r\n        let usersHaveRead = rooms?.docs\r\n          .find((doc) => doc.id === infoRoomId)\r\n          .data().usersHaveRead;\r\n        if (!usersHaveRead) usersHaveRead = [];\r\n        if (!usersHaveRead.includes(userInf.uid))\r\n          usersHaveRead.push(userInf.uid);\r\n        dispatch(\r\n          enterDirectMessage({\r\n            directMessageRoomId: null,\r\n            directMessageUid: null,\r\n          })\r\n        );\r\n        dispatch(\r\n          enterRoom({\r\n            roomId: infoRoomId,\r\n          })\r\n        );\r\n        db.collection(\"room\").doc(infoRoomId).update({\r\n          usersHaveRead: usersHaveRead,\r\n        });\r\n      } else if (infoRoomDirectId) {\r\n        console.log(\"DIrect\");\r\n        let usersHaveRead = directRooms?.docs\r\n          .find((doc) => doc.id === infoRoomDirectId)\r\n          .data().usersHaveRead;\r\n        if (!usersHaveRead) usersHaveRead = [];\r\n        if (!usersHaveRead.includes(userInf.uid))\r\n          usersHaveRead.push(userInf.uid);\r\n        dispatch(\r\n          enterRoom({\r\n            roomId: null,\r\n          })\r\n        );\r\n        dispatch(\r\n          enterDirectMessage({\r\n            directMessageRoomId: infoRoomDirectId,\r\n            directMessageUid: info.uid,\r\n          })\r\n        );\r\n        db.collection(\"directRooms\").doc(infoRoomDirectId).update({\r\n          usersHaveRead: usersHaveRead,\r\n        });\r\n      }\r\n\r\n      dispatch(setSavedItemId({ savedItemId: info.id }));\r\n    }\r\n  };\r\n  console.log(currentRoomId);\r\n  // Thread handle\r\n  const onReplyInThread = useSelector(selectOnReplyInThread);\r\n  const threadMessageId = useSelector(selectThreadMessageId);\r\n  const threadMessageRoomId = useSelector(selectThreadMessageRoomId);\r\n  const threadMessageDirectId = useSelector(selectThreadMessageDirectId);\r\n  const [threadMessage, threadLoading] = useDocument(\r\n    threadMessageId &&\r\n      (threadMessageRoomId\r\n        ? db\r\n            .collection(\"room\")\r\n            .doc(threadMessageRoomId)\r\n            .collection(\"messages\")\r\n            .doc(threadMessageId)\r\n        : threadMessageDirectId\r\n        ? db\r\n            .collection(\"directRooms\")\r\n            .doc(threadMessageDirectId)\r\n            .collection(\"messages\")\r\n            .doc(threadMessageId)\r\n        : undefined)\r\n  );\r\n\r\n  const [subMessages] = useCollection(\r\n    threadMessageId &&\r\n      (threadMessageRoomId\r\n        ? db\r\n            .collection(\"room\")\r\n            .doc(threadMessageRoomId)\r\n            .collection(\"messages\")\r\n            .doc(threadMessageId)\r\n            .collection(\"subMessages\")\r\n            .orderBy(\"timestamp\", \"asc\")\r\n        : threadMessageDirectId\r\n        ? db\r\n            .collection(\"directRooms\")\r\n            .doc(threadMessageDirectId)\r\n            .collection(\"messages\")\r\n            .doc(threadMessageId)\r\n            .collection(\"subMessages\")\r\n            .orderBy(\"timestamp\", \"asc\")\r\n        : undefined)\r\n  );\r\n  const openProfile = useSelector(selectOnOpenProfile);\r\n  const onSave = useSelector(selectOnSave);\r\n  const [replyRoom] = useDocument(\r\n    threadMessageId &&\r\n      (threadMessageRoomId\r\n        ? db.collection(\"room\").doc(threadMessageRoomId)\r\n        : threadMessageDirectId\r\n        ? db.collection(\"directRooms\").doc(threadMessageDirectId)\r\n        : undefined)\r\n  );\r\n  const threadName =\r\n    threadMessageId &&\r\n    (threadMessageRoomId\r\n      ? replyRoom?.data().name\r\n      : threadMessageDirectId\r\n      ? replyRoom?.data().users?.find((user) => {\r\n          if (users[0] === users[1]) return user.uid === userInf.uid;\r\n          else return userInf.uid !== user.uid;\r\n        })?.displayName\r\n      : undefined);\r\n  // Open main save page\r\n  const openSavePage = () => {\r\n    dispatch(\r\n      setOnMainSave({\r\n        onMainSave: true,\r\n      })\r\n    );\r\n    closeWorkspace();\r\n  };\r\n  const onMainSave = useSelector(selectOnMainSave);\r\n  return (\r\n    <div\r\n      className={\r\n        isOpen && !(onSave && onMainSave)\r\n          ? \"secondary-view-container active\"\r\n          : \"secondary-view-container\"\r\n      }\r\n      style={{ width: width }}\r\n    >\r\n      {position && (\r\n        <span\r\n          ref={ref}\r\n          className=\"emojis-container-moving\"\r\n          style={{\r\n            position: \"fixed\",\r\n            right: window.innerWidth - position.positionInfo.right + 18,\r\n            top:\r\n              position.positionInfo.y - 442 > 33\r\n                ? position.positionInfo.y - 442\r\n                : 33,\r\n            zIndex: 99,\r\n          }}\r\n        >\r\n          <Picker onSelect={addEmoji} />\r\n        </span>\r\n      )}\r\n      <div className=\"secondary-view__header\">\r\n        <div className=\"secondary-view__header__left\">\r\n          <div className=\"secondary-view__header__left__inner\">\r\n            <span className=\"secondary-view__mode-name\">\r\n              {openProfile\r\n                ? \"Profile\"\r\n                : onReplyInThread\r\n                ? \"Thread\"\r\n                : \"Saved items\"}\r\n            </span>\r\n            {onReplyInThread && (\r\n              <span className=\"thread-name\">{threadName}</span>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"secondary-view__header__right\">\r\n          {onSave && (\r\n            <button\r\n              className=\"c-button-unstyled close-button\"\r\n              title=\"Move to main page\"\r\n              onClick={openSavePage}\r\n            >\r\n              <AspectRatioRoundedIcon />\r\n            </button>\r\n          )}\r\n          <button\r\n            className=\"c-button-unstyled close-button\"\r\n            onClick={closeWorkspace}\r\n            title=\"Close\"\r\n          >\r\n            <CloseIcon />\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {openProfile && (\r\n        <div className=\"secondary-view__body\">\r\n          <div className=\"secondary-view__body__inner\">\r\n            <div className=\"member-profile__avatar-container\">\r\n              <img src={photoURL} alt=\"\" />\r\n            </div>\r\n            <div className=\"member-profile__name\">\r\n              <div className=\"member-profile__name-title\">{title}</div>\r\n              <div className=\"member-profile__status\">\r\n                <FiberManualRecordIcon\r\n                  className={!isOnline ? \"status offline\" : \"status online\"}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <button\r\n              data-bs-toggle={\r\n                userInf?.uid === selectedUser?.uid ? \"modal\" : \"false\"\r\n              }\r\n              data-bs-target=\"#editProfile\"\r\n              className=\"c-button-unstyled link-button\"\r\n              style={{ color: `rgba(18,100,163,1)`, fontWeight: \"700\" }}\r\n            >\r\n              {job ? job : \"Add a job\"}\r\n            </button>\r\n\r\n            <div className=\"member-profile__fields\">\r\n              <div className=\"member-profile__field\">\r\n                <div className=\"member-profile__field__label\">Display name</div>\r\n                <div className=\"member-profile__field__value\">\r\n                  {selectedUser?.displayName}\r\n                </div>\r\n              </div>\r\n              <div className=\"member-profile__field\">\r\n                <div className=\"member-profile__field__label\">What I do</div>\r\n                <div className=\"member-profile__field__value\">\r\n                  {selectedUser?.whatIDo}\r\n                </div>\r\n              </div>\r\n              <div className=\"member-profile__field\">\r\n                <div className=\"member-profile__field__label\">Local time</div>\r\n                <div className=\"member-profile__field__value\">{localTime}</div>\r\n              </div>\r\n              <div className=\"member-profile__field\">\r\n                <div className=\"member-profile__field__label\">\r\n                  Email address\r\n                </div>\r\n                <div className=\"member-profile__field__value\">\r\n                  {selectedUser?.email}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {onSave && (\r\n        <div className=\"secondary-view__body saved-mode\">\r\n          {itemsLoading ? (\r\n            <SmallLoader />\r\n          ) : (\r\n            <>\r\n              {savedMessages?.map((doc) => {\r\n                let savedMessageInfo = savedItemsInfo?.docs.find((docc) => {\r\n                  if (docc.data().replyTo)\r\n                    return docc.data().replyTo === doc.id;\r\n                  else return docc.data().messageId === doc.id;\r\n                });\r\n                let name = \"\";\r\n                let info = {};\r\n\r\n                if (savedMessageInfo?.data().roomId) {\r\n                  name = rooms?.docs\r\n                    .find((doc) => doc.id === savedMessageInfo.data().roomId)\r\n                    .data().name;\r\n                  info.savedMessageInfo = savedMessageInfo.data();\r\n                }\r\n                if (savedMessageInfo?.data().roomDirectId) {\r\n                  name = \"Direct message\";\r\n                  info.savedMessageInfo = savedMessageInfo.data();\r\n                }\r\n                if (savedMessageInfo?.data().replyTo) {\r\n                  console.log(\"ALOOO \", name);\r\n                }\r\n\r\n                if (doc.data()) {\r\n                  const {\r\n                    message,\r\n                    timestamp,\r\n                    user,\r\n                    userImage,\r\n                    uid,\r\n                    savedBy,\r\n                    reactions,\r\n                  } = doc.data();\r\n                  console.log(\"Alo\");\r\n                  info.uid = uid;\r\n                  info.id = doc.id;\r\n                  return (\r\n                    <div\r\n                      className=\"saved-message-button\"\r\n                      role=\"button\"\r\n                      onClick={() => moveToMessage(info)}\r\n                    >\r\n                      <div className=\"saved-message__header\">{name}</div>\r\n                      <Message\r\n                        moveToItem={() => moveToMessage(info)}\r\n                        emojiMartPosition={position}\r\n                        onClick={openEmojiMart}\r\n                        key={doc.id}\r\n                        message={message}\r\n                        timestamp={timestamp}\r\n                        userName={user}\r\n                        userImage={userImage}\r\n                        uid={uid}\r\n                        savedBy={savedBy}\r\n                        emojiReact={emojiReact}\r\n                        reactToggle={reactToggle}\r\n                        label=\"\"\r\n                        width={width}\r\n                        id={doc.id}\r\n                        reactions={reactions}\r\n                        isSaved={true}\r\n                      />\r\n                    </div>\r\n                  );\r\n                }\r\n              })}\r\n            </>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {onReplyInThread && (\r\n        <div className=\"secondary-view__body\">\r\n          {threadLoading || !threadMessage ? (\r\n            <SmallLoader />\r\n          ) : (\r\n            <>\r\n              <div className=\"thread-message__container\">\r\n                {threadMessage && (\r\n                  <div className=\"c-thread-message\">\r\n                    <Message\r\n                      emojiMartPosition={position}\r\n                      onClick={openEmojiMart}\r\n                      key={threadMessageId}\r\n                      message={threadMessage.data()?.message}\r\n                      timestamp={threadMessage.data()?.timestamp}\r\n                      userName={threadMessage.data()?.user}\r\n                      userImage={threadMessage.data()?.userImage}\r\n                      uid={threadMessage.data()?.uid}\r\n                      savedBy={threadMessage.data()?.savedBy}\r\n                      emojiReact={emojiReact}\r\n                      reactToggle={reactToggle}\r\n                      label=\"\"\r\n                      width={width}\r\n                      id={threadMessageId}\r\n                      reactions={threadMessage.data()?.reactions}\r\n                      inThread={true}\r\n                    />\r\n                  </div>\r\n                )}\r\n                {subMessages?.docs.length > 0 && (\r\n                  <div className=\"c-thread__seperator\">\r\n                    <div className=\"c-thread__seperator__inner\">\r\n                      <span className=\"c-thread__seperator__count\">\r\n                        {subMessages?.docs.length > 1\r\n                          ? subMessages?.docs.length + \" replies\"\r\n                          : subMessages?.docs.length + \" reply\"}\r\n                      </span>\r\n                      <hr className=\"c-thread__seperator__line\" />\r\n                    </div>\r\n                  </div>\r\n                )}\r\n                {subMessages?.docs.map((subMessage) => {\r\n                  const {\r\n                    message,\r\n                    timestamp,\r\n                    user,\r\n                    userImage,\r\n                    uid,\r\n                    savedBy,\r\n                    reactions,\r\n                  } = subMessage.data();\r\n                  return (\r\n                    <Message\r\n                      emojiMartPosition={position}\r\n                      onClick={openEmojiMart}\r\n                      key={subMessage.id}\r\n                      message={message}\r\n                      timestamp={timestamp}\r\n                      userName={user}\r\n                      userImage={userImage}\r\n                      uid={uid}\r\n                      savedBy={savedBy}\r\n                      emojiReact={emojiReact}\r\n                      reactToggle={reactToggle}\r\n                      label=\"\"\r\n                      width={width}\r\n                      id={subMessage.id}\r\n                      reactions={reactions}\r\n                      replyTo={threadMessageId}\r\n                    />\r\n                  );\r\n                })}\r\n                <ChatInput inThread={true} threadMessageId={threadMessageId} />\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SecondaryView;\r\n","import React, { useState } from \"react\";\r\nimport { db } from \"../../firebase\";\r\nimport firebase from \"firebase\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  selectThreadMessageDirectId,\r\n  selectThreadMessageRoomId,\r\n  selectUser,\r\n} from \"../../features/appSlice\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport { Emojify, emojify } from \"react-emojione\";\r\nimport { useEffect } from \"react\";\r\nimport { Picker } from \"emoji-mart\";\r\nimport \"emoji-mart/css/emoji-mart.css\";\r\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\r\nimport SecondaryView from \"../SecondaryView\";\r\nimport { useRef } from \"react\";\r\nfunction ChatInput({\r\n  channelName,\r\n  channelId,\r\n  chatRef,\r\n  isDirect,\r\n  inThread,\r\n  threadMessageId,\r\n}) {\r\n  const user = useSelector(selectUser);\r\n  const emojiRef = useRef(null);\r\n  const [input, setInput] = useState(\"\");\r\n  const sendMessage = (e) => {\r\n    e.preventDefault();\r\n    if (input != \"\") {\r\n      if (!channelId) return false;\r\n      if (!isDirect) {\r\n        db.collection(\"room\").doc(channelId).collection(\"messages\").add({\r\n          message: input,\r\n          timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n          user: user.displayName,\r\n          userImage: user.photoURL,\r\n          uid: user.uid,\r\n        });\r\n        db.collection(\"room\")\r\n          .doc(channelId)\r\n          .update({\r\n            usersHaveRead: [user.uid],\r\n          });\r\n      } else {\r\n        db.collection(\"directRooms\").doc(channelId).collection(\"messages\").add({\r\n          message: input,\r\n          timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n          user: user.displayName,\r\n          userImage: user.photoURL,\r\n          uid: user.uid,\r\n        });\r\n        db.collection(\"directRooms\")\r\n          .doc(channelId)\r\n          .update({\r\n            usersHaveRead: [user.uid],\r\n          });\r\n      }\r\n      setInput(\"\");\r\n    }\r\n  };\r\n\r\n  // Emoji handler\r\n  const inputChangeHandler = (e) => {\r\n    const newInput = emojify(e.target.value, { output: \"unicode\" });\r\n    setInput(newInput);\r\n  };\r\n\r\n  const addEmoji = (e) => {\r\n    let emoji = e.native;\r\n    setInput(input + emoji);\r\n  };\r\n\r\n  const [emojisOpen, setEmojisOpen] = useState(false);\r\n  const [position, setPosition] = useState(null);\r\n  const openEmojisList = () => {\r\n    let positionInf = document\r\n      .querySelector(\"#replyToThreadInput\")\r\n      .getBoundingClientRect();\r\n    setPosition(positionInf);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const emojisContainer = document.querySelector(\".emojis-container\");\r\n    const divs = document.querySelectorAll(\"div:not(.emoji-trigger-button)\");\r\n    const chatMessages = document.querySelector(\".chat-messages\");\r\n    const chatHeader = document.querySelector(\".chat__header\");\r\n    const header = document.querySelector(\".header-container\");\r\n    const sidebarContainer = document.querySelector(\".side-bar-container\");\r\n    const inputContainer = document.querySelector(\"form>input\");\r\n    const button = document.querySelector(\"form>button\");\r\n    const emojiTriggerButton = document.querySelector(\".emoji-trigger-button\");\r\n    const secondaryWorkspace = document.querySelector(\r\n      \".secondary-view-container\"\r\n    );\r\n\r\n    const openList = () => {\r\n      emojisContainer.classList.remove(\"collapse\");\r\n    };\r\n    const closeList = () => {\r\n      emojisContainer.classList.add(\"collapse\");\r\n    };\r\n    if (!inThread) {\r\n      emojiTriggerButton.addEventListener(\"click\", openList);\r\n      sidebarContainer.addEventListener(\"click\", closeList);\r\n      inputContainer.addEventListener(\"click\", closeList);\r\n      button.addEventListener(\"click\", closeList);\r\n      chatMessages.addEventListener(\"click\", closeList);\r\n      chatHeader.addEventListener(\"click\", closeList);\r\n      header.addEventListener(\"click\", closeList);\r\n      secondaryWorkspace.addEventListener(\"click\", closeList);\r\n    }\r\n    return () => {\r\n      if (!inThread) {\r\n        const removeEventListener = () => {\r\n          emojiTriggerButton.removeEventListener(\"click\", openList);\r\n        };\r\n        removeEventListener();\r\n      }\r\n    };\r\n  }, [emojisOpen]);\r\n  // Send message to thread\r\n\r\n  const threadMessageRoomId = useSelector(selectThreadMessageRoomId);\r\n  const threadMessageDirectId = useSelector(selectThreadMessageDirectId);\r\n  const sendMessageToThread = (e) => {\r\n    e.preventDefault();\r\n    if (input !== \"\") {\r\n      if (threadMessageRoomId) {\r\n        console.log(\"sendd\");\r\n        db.collection(\"room\")\r\n          .doc(threadMessageRoomId)\r\n          .collection(\"messages\")\r\n          .doc(threadMessageId)\r\n          .collection(\"subMessages\")\r\n          .add({\r\n            message: input,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            user: user.displayName,\r\n            userImage: user.photoURL,\r\n            uid: user.uid,\r\n          });\r\n      } else if (threadMessageDirectId) {\r\n        db.collection(\"directRooms\")\r\n          .doc(threadMessageDirectId)\r\n          .collection(\"messages\")\r\n          .doc(threadMessageId)\r\n          .collection(\"subMessages\")\r\n          .add({\r\n            message: input,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            user: user.displayName,\r\n            userImage: user.photoURL,\r\n            uid: user.uid,\r\n          });\r\n      }\r\n    }\r\n    setInput(\"\");\r\n  };\r\n  //Close emoji mart\r\n  useEffect(() => {\r\n    function handleClickOutside(event) {\r\n      if (emojiRef.current && !emojiRef.current.contains(event.target)) {\r\n        setPosition(null);\r\n      }\r\n    }\r\n\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      // Unbind the event listener on clean up\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  });\r\n  return (\r\n    <div className=\"chat-input-container\" id=\"replyToThreadInput\">\r\n      {inThread ? (\r\n        position && (\r\n          <span\r\n            ref={emojiRef}\r\n            className=\"thread-emojis-container\"\r\n            style={{\r\n              position: \"fixed\",\r\n              right:\r\n                window.innerWidth - position?.right - 350 > 0\r\n                  ? window.innerWidth - position?.right - 350\r\n                  : 0,\r\n              top: window.innerHeight - position.y,\r\n              zIndex: 99,\r\n            }}\r\n          >\r\n            <Picker onSelect={addEmoji} />\r\n          </span>\r\n        )\r\n      ) : (\r\n        <span className=\"emojis-container collapse\">\r\n          <Picker onSelect={addEmoji} />\r\n        </span>\r\n      )}\r\n\r\n      <form>\r\n        <div\r\n          className=\"emoji-trigger-button\"\r\n          role=\"button\"\r\n          onClick={openEmojisList}\r\n        >\r\n          <InsertEmoticonIcon />\r\n        </div>\r\n        <input\r\n          value={input}\r\n          type=\"text\"\r\n          onChange={inputChangeHandler}\r\n          placeholder={inThread ? \"Reply...\" : `Message #${channelName}`}\r\n        />\r\n        <button\r\n          onClick={inThread ? sendMessageToThread : (e) => sendMessage(e)}\r\n          type=\"submit\"\r\n          className=\"c-button-unstyled send-button\"\r\n        >\r\n          <SendIcon />\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatInput;\r\n","import React from \"react\";\r\n\r\nfunction DayBlockMessages({ time, messages, uid, timestamp }) {\r\n\r\n  return (\r\n    <div className=\"day-block-messages__container\">\r\n\r\n          {(timestamp||!uid)&&(\r\n            <div className=\"day-block-messages__divider\">\r\n              <div className=\"day-block-messages__divider-line\"></div>\r\n              <div className=\"day-block-messages__label\">\r\n                {time.date + \"/\" + time.month + \"/\" + time.year}\r\n              </div>\r\n            </div>\r\n          )}\r\n          {messages?.map((doc) => doc)}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DayBlockMessages;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"../../css/chat.css\";\r\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\r\nimport {\r\n  enterDirectMessage,\r\n  enterRoom,\r\n  selectChosenUser,\r\n  selectDirectMessageRoom,\r\n  selectOnMainSave,\r\n  selectOnSendingReaction,\r\n  selectRoomId,\r\n  selectSavedItemId,\r\n  selectSecondaryWorkspaceStatus,\r\n  selectUser,\r\n  selectUserDirect,\r\n  setDirectUser,\r\n  setRoomDetails,\r\n  setSavedItemId,\r\n  setUserProfileUid,\r\n  showSecondaryWorkspace,\r\n} from \"../../features/appSlice\";\r\nimport { useCollection } from \"react-firebase-hooks/firestore\";\r\nimport { db } from \"../../firebase\";\r\nimport ChatInput from \"./ChatInput\";\r\nimport Message from \"./Message\";\r\nimport SmallLoader from \"../SmallLoader\";\r\nimport DayBlockMessages from \"./DayBlockMessages\";\r\nimport firebase from \"firebase\";\r\nimport DehazeIcon from \"@material-ui/icons/Dehaze\";\r\nimport Emojify from \"react-emojione\";\r\nimport { Picker } from \"emoji-mart\";\r\n\r\nfunction Chat(props) {\r\n  const dispatch = useDispatch();\r\n  const chatRef = useRef(null);\r\n  const user = useSelector(selectUser);\r\n  const defaultRoomId = \"A86N0fmTCy8fTd4NS0Ne\";\r\n  // Room message\r\n  const roomId = useSelector(selectRoomId);\r\n  const directMessageUid = useSelector(selectUserDirect);\r\n  const [emojiReact, setEmojiReact] = useState(\"\");\r\n  const [reactToggle, setReactToggle] = useState(false);\r\n  if (!roomId && !directMessageUid) {\r\n    dispatch(\r\n      enterRoom({\r\n        roomId: defaultRoomId,\r\n      })\r\n    );\r\n  }\r\n  const [roomDetails, roomLoading] = useCollection(\r\n    roomId && db.collection(\"room\").doc(roomId)\r\n  );\r\n\r\n  const [roomMessages, loading] = useCollection(\r\n    roomId &&\r\n      db\r\n        .collection(\"room\")\r\n        .doc(roomId)\r\n        .collection(\"messages\")\r\n        .orderBy(\"timestamp\", \"asc\")\r\n  );\r\n\r\n  // Open emoji mart\r\n  const [position, setPosition] = useState(null);\r\n  const openEmojiMart = (position) => {\r\n    setPosition(position);\r\n    console.log(position);\r\n  };\r\n  //Close emoji mart\r\n  const ref = useRef(null);\r\n  useEffect(() => {\r\n    function handleClickOutside(event) {\r\n      if (ref.current && !ref.current.contains(event.target)) {\r\n        setPosition(null);\r\n      }\r\n    }\r\n\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      // Unbind the event listener on clean up\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  });\r\n  // Add react\r\n\r\n  const addEmoji = (e) => {\r\n    let emoji = e.native;\r\n    setEmojiReact(emoji);\r\n    setReactToggle(!reactToggle);\r\n  };\r\n  // Direct message\r\n  const roomDirectId = useSelector(selectDirectMessageRoom);\r\n  const [users, usersLoading] = useCollection(db.collection(\"users\"));\r\n  const directUser = users?.docs.find(\r\n    (doc) => doc.data().uid === directMessageUid\r\n  );\r\n  const [roomDirectMessages, directLoading] = useCollection(\r\n    roomDirectId &&\r\n      db\r\n        .collection(\"directRooms\")\r\n        .doc(roomDirectId)\r\n        .collection(\"messages\")\r\n        .orderBy(\"timestamp\", \"asc\")\r\n  );\r\n  const directTitle = directUser?.data()?.displayName\r\n    ? directUser?.data().displayName\r\n    : directUser?.data().email;\r\n  const directImg = directUser?.data()?.photoURL;\r\n  const directStatus = directUser?.data()?.isOnline;\r\n  //\r\n  // Open profile\r\n  // Scroll to saved message\r\n  const savedRef = useRef(null);\r\n  const savedItemId = useSelector(selectSavedItemId);\r\n  const onSendingReaction = useSelector(selectOnSendingReaction);\r\n  // Scroll\r\n\r\n  useEffect(() => {\r\n    console.log(savedItemId);\r\n    if (\r\n      (roomMessages || roomDirectMessages) &&\r\n      !savedItemId &&\r\n      !onSendingReaction\r\n    ) {\r\n      console.log(\"SCROLLL\");\r\n      chatRef?.current?.scrollIntoView({\r\n        behavior: \"smooth\",\r\n      });\r\n      setTimeout(() => {\r\n        chatRef?.current?.scrollIntoView({\r\n          behavior: \"smooth\",\r\n        });\r\n      }, 500);\r\n    }\r\n  }, [\r\n    roomMessages?.docs.length,\r\n    roomDirectMessages?.docs.length,\r\n    roomLoading,\r\n    directLoading,\r\n  ]);\r\n  //   Create block message\r\n  const blocksMessage = {};\r\n  roomId\r\n    ? roomMessages?.docs.map((doc) => {\r\n        const { message, timestamp, user, userImage, uid, savedBy } =\r\n          doc.data();\r\n        const time = new Date(timestamp?.toDate());\r\n        var date = time.getDate();\r\n        var year = time.getFullYear();\r\n        var month = time.getMonth();\r\n        var config = date + \":\" + month + \":\" + year;\r\n        var hours = time.getHours();\r\n        var minutes = time.getMinutes();\r\n        if (minutes < 10) {\r\n          minutes = \"0\" + minutes;\r\n        }\r\n        if (!blocksMessage[config]) blocksMessage[config] = [];\r\n        if (!blocksMessage[config].time)\r\n          blocksMessage[config][\"time\"] = {\r\n            date: date,\r\n            year: year,\r\n            month: month,\r\n          };\r\n        blocksMessage[config][\"timestamp\"] = timestamp;\r\n        blocksMessage[config].push(\r\n          <Message\r\n            ref={doc.id === savedItemId ? savedRef : null}\r\n            emojiMartPosition={position}\r\n            onClick={openEmojiMart}\r\n            key={doc.id}\r\n            id={doc.id}\r\n            message={message}\r\n            timestamp={timestamp}\r\n            userName={user}\r\n            userImage={userImage}\r\n            uid={uid}\r\n            reactions={doc.data().reactions}\r\n            isDirect={false}\r\n            emojiReact={emojiReact}\r\n            reactToggle={reactToggle}\r\n            savedBy={savedBy}\r\n            messageRoomId = {roomId}\r\n          />\r\n        );\r\n      })\r\n    : roomDirectMessages?.docs.map((doc) => {\r\n        const { message, timestamp, user, userImage, uid, savedBy } =\r\n          doc.data();\r\n        const time = new Date(timestamp?.toDate());\r\n        var date = time.getDate();\r\n        var year = time.getFullYear();\r\n        var month = time.getMonth();\r\n        var config = date + \":\" + month + \":\" + year;\r\n        var hours = time.getHours();\r\n        var minutes = time.getMinutes();\r\n        if (minutes < 10) {\r\n          minutes = \"0\" + minutes;\r\n        }\r\n        if (!blocksMessage[config]) blocksMessage[config] = [];\r\n        if (!blocksMessage[config].time) {\r\n          blocksMessage[config][\"time\"] = {\r\n            date: date,\r\n            year: year,\r\n            month: month,\r\n          };\r\n        }\r\n        blocksMessage[config][\"timestamp\"] = timestamp;\r\n        blocksMessage[config].push(\r\n          <Message\r\n            ref={doc.id === savedItemId ? savedRef : null}\r\n            emojiMartPosition={position}\r\n            onClick={openEmojiMart}\r\n            key={doc.id}\r\n            message={message}\r\n            timestamp={timestamp}\r\n            userName={user}\r\n            userImage={userImage}\r\n            uid={uid}\r\n            isDirect={true}\r\n            emojiReact={emojiReact}\r\n            reactToggle={reactToggle}\r\n            savedBy={savedBy}\r\n            reactions={doc.data().reactions}\r\n            id={doc.id}\r\n            messageRoomDirectId = {roomDirectId}\r\n          />\r\n        );\r\n      });\r\n  const blocksMessageArr = Object.entries(blocksMessage);\r\n  // Save room info\r\n  useEffect(() => {\r\n    if (!roomLoading) {\r\n      dispatch(setRoomDetails({ roomDetails: roomDetails?.data() }));\r\n    }\r\n  }, [roomId, roomDetails]);\r\n  // Save user direct info\r\n  useEffect(() => {\r\n    if (!usersLoading) {\r\n      dispatch(\r\n        setDirectUser({\r\n          directUser: directUser?.data(),\r\n        })\r\n      );\r\n    }\r\n  }, [roomDirectId]);\r\n  // Input preveiew\r\n  const members = roomDetails?.data()?.members;\r\n  const membersArr = members?.slice();\r\n  const [join, setJoin] = useState(false);\r\n  const joinChat = () => {\r\n    setJoin(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (join && !roomLoading) {\r\n      let membersArr = members?.slice();\r\n      if (!membersArr) membersArr = [];\r\n      membersArr.push(user.uid);\r\n      console.log(membersArr);\r\n      db.collection(\"room\")\r\n        .doc(roomId)\r\n        .update({\r\n          members: membersArr,\r\n        })\r\n        .then(() => {\r\n          let input = `joined #${roomDetails.data().name}.`;\r\n          db.collection(\"room\").doc(roomId).collection(\"messages\").add({\r\n            message: input,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            user: user.displayName,\r\n            userImage: user.photoURL,\r\n            uid: user.uid,\r\n          });\r\n        });\r\n    }\r\n    return () => {\r\n      setJoin(false);\r\n    };\r\n  }, [join, roomLoading]);\r\n  // Toggler for sidebar\r\n  const openSidebar = () => {\r\n    let sidebarContainer = document.querySelector(\".side-bar-container\");\r\n    sidebarContainer?.classList.add(\"sidebar-float\");\r\n  };\r\n\r\n  // Handle mobile view\r\n  let windowWidth;\r\n  let chatWidth;\r\n  const isSecondaryWorkspaceOpen = useSelector(selectSecondaryWorkspaceStatus);\r\n  const [collapse, setCollapse] = useState(\"false\");\r\n  useEffect(() => {\r\n    console.log(\"On load\");\r\n    const chatContainer = document.querySelector(\".chat-container\");\r\n    const sidebarContainer = document.querySelector(\".side-bar-container\");\r\n    const sidebarToggler = document.querySelector(\r\n      \".sidebar-toggle-button.c-button-unstyled\"\r\n    );\r\n\r\n    const secondaryWorkspace = document.querySelector(\r\n      \".secondary-view-container\"\r\n    );\r\n\r\n    const reportWindowSize = () => {\r\n      windowWidth = window.innerWidth;\r\n      chatWidth = chatContainer.offsetWidth;\r\n      if (\r\n        chatWidth < 400 &&\r\n        !sidebarContainer?.classList.contains(\"sidebar-collapse\")\r\n      ) {\r\n        sidebarContainer?.classList.add(\"sidebar-collapse\");\r\n        setCollapse(false);\r\n        console.log(\"3\");\r\n\r\n        if (windowWidth < 706) {\r\n          sidebarContainer?.classList.add(\"sidebar-collapse\");\r\n          setCollapse(false);\r\n          chatContainer?.classList.remove(\"collapse\");\r\n          console.log(\"1\");\r\n          if (windowWidth <= 576 && isSecondaryWorkspaceOpen) {\r\n            chatContainer?.classList.add(\"collapse\");\r\n            secondaryWorkspace?.classList.add(\"fill\")\r\n            console.log(\"2\");\r\n          }\r\n          if (!isSecondaryWorkspaceOpen) {\r\n            chatContainer?.classList.remove(\"collapse\");\r\n            console.log(3);\r\n          }\r\n        }\r\n      } else if (\r\n        chatWidth >= 600 &&\r\n        sidebarContainer?.classList.contains(\"sidebar-collapse\")\r\n      ) {\r\n        sidebarContainer?.classList.remove(\"sidebar-collapse\");\r\n        console.log(sidebarToggler);\r\n        setCollapse(true);\r\n        console.log(\"4\");\r\n      }\r\n\r\n      // Collapse handler\r\n      const sidebarCollapse = document.querySelector(\".sidebar-collapse\");\r\n      const closeSidebar = () => {\r\n        sidebarCollapse?.classList.remove(\"sidebar-float\");\r\n      };\r\n      chatContainer.addEventListener(\"click\", closeSidebar);\r\n      secondaryWorkspace.addEventListener(\"click\", closeSidebar);\r\n    };\r\n\r\n    reportWindowSize();\r\n    window.addEventListener(\"resize\", reportWindowSize);\r\n  },);\r\n\r\n  //\r\n  console.log(position);\r\n// Save main page\r\nconst onMainSave = useSelector(selectOnMainSave);\r\n \r\n  return (\r\n    <div className=\"chat-container\">\r\n      {loading || directLoading || usersLoading ? (\r\n        <SmallLoader />\r\n      ) : (\r\n        <>\r\n          {position && (\r\n            <span\r\n              ref={ref}\r\n              className=\"emojis-container-moving\"\r\n              style={{\r\n                position: \"fixed\",\r\n                right: window.innerWidth - position.positionInfo.right + 18,\r\n                top:\r\n                  position.positionInfo.y - 442 > 33\r\n                    ? position.positionInfo.y - 442\r\n                    : 33,\r\n                zIndex: 99,\r\n              }}\r\n            >\r\n              <Picker onSelect={addEmoji} />\r\n            </span>\r\n          )}\r\n          <div className=\"chat__header\">\r\n            <div className=\"chat__header__left\">\r\n              <div\r\n                onClick={openSidebar}\r\n                className={\r\n                  collapse\r\n                    ? \"sidebar-toggle-button c-button-unstyled chat__header__left__button collapse\"\r\n                    : \"sidebar-toggle-button c-button-unstyled chat__header__left__button \"\r\n                }\r\n              >\r\n                <span>\r\n                  <DehazeIcon />\r\n                </span>\r\n              </div>\r\n              {roomId ? (\r\n                <div\r\n                  role=\"button\"\r\n                  data-bs-toggle=\"modal\"\r\n                  data-bs-target={\"#\" + \"a\" + roomId}\r\n                  className=\"chat__header__left__button\"\r\n                >\r\n                  <span className=\"chat__header__icon\">#</span>\r\n                  <span>{roomDetails?.data()?.name}</span>\r\n                </div>\r\n              ) : (\r\n                <div\r\n                  role=\"button\"\r\n                  data-bs-toggle=\"modal\"\r\n                  data-bs-target={\"#\" + \"a\" + roomDirectId}\r\n                  className=\"chat__header__left__button\"\r\n                >\r\n                  <div\r\n                    className=\"chat__header__avatar\"\r\n                    style={{ backgroundImage: `url(${directImg})` }}\r\n                  >\r\n                    <FiberManualRecordIcon\r\n                      className={directStatus ? \"status active\" : \"status\"}\r\n                    />\r\n                  </div>\r\n                  <span>{directTitle}</span>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div\r\n              className=\"chat__header__right\"\r\n              data-bs-toggle={roomId || roomDirectId ? \"modal\" : \"\"}\r\n              data-bs-target={\r\n                roomId || roomDirectId\r\n                  ? \"#\" + \"a\" + (roomId ? roomId : roomDirectId)\r\n                  : \"\"\r\n              }\r\n            >\r\n              <span role=\"button\">Details</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"chat-messages\">\r\n            <Message\r\n              userImage=\"https://icon-library.com/images/comment-bubble-icon-png/comment-bubble-icon-png-3.jpg\"\r\n              userName={\r\n                roomId\r\n                  ? (roomDetails?.data()?.roomOwner\r\n                      ? roomDetails?.data()?.roomOwner.displayName\r\n                      : \"...\") +\r\n                    ` founded the #${roomDetails?.data()?.name} channel,`\r\n                  : \"This conversation is just between the two of you\"\r\n              }\r\n              message={\r\n                roomId\r\n                  ? roomDetails?.data()?.des\r\n                    ? roomDetails?.data()?.des\r\n                    : \"\"\r\n                  : `Here you can send messages and share files with @${\r\n                      directUser?.data().displayName\r\n                    }.`\r\n              }\r\n              description={true}\r\n            />\r\n            {blocksMessageArr?.map((doc) => {\r\n              var time = doc[1].time;\r\n              var timestamp = doc[1].timestamp;\r\n              var randomUid = doc[1][0]?.props.uid;\r\n              return (\r\n                <DayBlockMessages\r\n                  uid={randomUid}\r\n                  loading={directLoading || loading}\r\n                  key={time.date + time.month + time.year}\r\n                  time={time}\r\n                  messages={doc[1]}\r\n                  timestamp={timestamp}\r\n                />\r\n              );\r\n            })}\r\n            <div className=\"chat-bottom\" ref={chatRef}></div>\r\n          </div>\r\n          <div className=\"chat__footer\">\r\n            {(members?.includes(user.uid) && roomId) || !roomId ? (\r\n              <ChatInput\r\n                channelId={roomId ? roomId : roomDirectId}\r\n                channelName={roomId ? roomDetails?.data()?.name : directTitle}\r\n                isDirect={roomId ? false : true}\r\n              />\r\n            ) : (\r\n              <div className=\"chat__input-preview\">\r\n                <div className=\"text--normal\">\r\n                  You are viewing <strong>#{roomDetails?.data()?.name}</strong>\r\n                </div>\r\n\r\n                <div className=\"buttons-group\">\r\n                  <button className=\"btn btn-primary\" onClick={joinChat}>\r\n                    Join chat\r\n                  </button>\r\n                  <button\r\n                    className=\"btn btn-secondary\"\r\n                    data-bs-toggle=\"modal\"\r\n                    data-bs-target={\"#a\" + roomId}\r\n                  >\r\n                    See more details\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            )}\r\n            <div className=\"space\"></div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport '../css/loading.css'\r\nimport { auth } from '../firebase';\r\nfunction Loading() {\r\n    const [user, loading] = useAuthState(auth)\r\n    const [isAnimate, setIsAnimate] = useState(false)\r\n    useEffect(() => {\r\n        animate();\r\n        return () => {\r\n            \r\n        }\r\n    }, [loading])\r\n\r\n    function animate(){\r\n        setTimeout(() => {\r\n            setIsAnimate(!isAnimate);\r\n           \r\n        },1000)\r\n    }\r\n    \r\n\r\n    animate()\r\n    \r\n    return (\r\n        <div className=\"loading-container\">\r\n            <div className=\"loading__content\">\r\n                <h1>Loading</h1>\r\n                <div className=\"dots\">\r\n                    <div className={isAnimate?\"dot z animate\":\"dot z\"} ></div>\r\n                    <div className={isAnimate?\"dot f animate\":\"dot f\"}></div>\r\n                    <div className={isAnimate?\"dot s animate\":\"dot s\"}></div>\r\n                    <div className={isAnimate?\"dot t animate\":\"dot t\"}></div>\r\n                    <div className={isAnimate?\"dot l animate\":\"dot l\"}></div>\r\n                </div>\r\n            </div>\r\n        <script></script>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading\r\n","import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useCollection } from \"react-firebase-hooks/firestore\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getDataState, selectDocId, selectUser } from \"../../features/appSlice\";\r\nimport { db, storage } from \"../../firebase\";\r\nfunction InputSection(props) {\r\n  const user = useSelector(selectUser);\r\n  const inputInit =\r\n    props.name === \"displayName\"\r\n      ? user?.displayName\r\n        ? user.displayName\r\n        : \"\"\r\n      : props.name === \"whatIDo\"\r\n      ? user?.whatIDo\r\n        ? user.whatIDo\r\n        : \"\"\r\n      : \"\";\r\n  const [input, setInput] = useState(inputInit);\r\n  const [imgUrl, setImgUrl] = useState(user?.photoURL);\r\n  const dispatch = useDispatch();\r\n  const handleImgChange = async (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n    const storageRef = storage.ref();\r\n    const fileRef = storageRef.child(file.name);\r\n    await fileRef.put(file);\r\n    setImgUrl(await fileRef.getDownloadURL());\r\n  };\r\n\r\n  const handleUpload = () => {\r\n    inputElement.click();\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n  const [users, loading] = useCollection(db.collection(\"users\"));\r\n  const selectedDoc = users?.docs.find((elem) => elem.data().uid === user?.uid);\r\n  const id = selectedDoc?.id;\r\n  const saveChange = async () => {\r\n    let users = db.collection(\"users\");\r\n    if (!loading && id && users) {\r\n      if (props.saveChange) {\r\n        if (props.type === \"photo\") {\r\n          await users\r\n            .doc(id)\r\n            .update({\r\n              photoURL: imgUrl,\r\n            })\r\n            .catch((err) => alert(err.message));\r\n        } else if (props.type === \"text\") {\r\n          if (props.name === \"displayName\")\r\n            await users\r\n              .doc(id)\r\n              .update({\r\n                displayName: input,\r\n              })\r\n              .catch((err) => alert(err.message));\r\n          else if (props.name === \"whatIDo\")\r\n            await users\r\n              .doc(id)\r\n              .update({\r\n                whatIDo: input,\r\n              })\r\n              .catch((err) => alert(err.message));\r\n        }\r\n        dispatch(\r\n          getDataState({\r\n            dataUpdated: true,\r\n          })\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    saveChange();\r\n    return () => {\r\n      dispatch(\r\n        getDataState({\r\n          dataUpdated: null,\r\n        })\r\n      );\r\n    };\r\n  }, [props.toggle]);\r\n  let inputElement;\r\n\r\n  return (\r\n    <div className=\"input-container\">\r\n      <label htmlFor=\"\" className=\"form-label\">\r\n        {props.label}\r\n      </label>\r\n      {props.type === \"photo\" ? (\r\n        <div>\r\n          <img src={imgUrl} alt=\"\" style={{ width: `100%` }} />\r\n          <input\r\n            ref={(input) => (inputElement = input)}\r\n            type=\"file\"\r\n            onChange={handleImgChange}\r\n            className=\"photo-input\"\r\n          />\r\n          <span\r\n            role=\"button\"\r\n            className=\"upload-button c-button--medium\"\r\n            onClick={handleUpload}\r\n          >\r\n            Upload an image{\" \"}\r\n          </span>\r\n        </div>\r\n      ) : (\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          value={input}\r\n          onChange={handleInputChange}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InputSection;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { useCollection } from \"react-firebase-hooks/firestore\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"../../css/editprofile.css\";\r\nimport {\r\n  saveUserInfo,\r\n  selectDataState,\r\n  selectDocId,\r\n  selectUser,\r\n} from \"../../features/appSlice\";\r\nimport { auth, db } from \"../../firebase\";\r\nimport InputSection from \"./InputSection\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nfunction EditProfile() {\r\n  const saveChange = true;\r\n  const userInf = useSelector(selectUser);\r\n  const [notification, setNotification] = useState(false);\r\n  const dataUpdated = useSelector(selectDataState);\r\n  const [toggle, setToggle] = useState(false);\r\n  const [users, loading] = useCollection(db.collection(\"users\"));\r\n  const user = users?.docs.find((elem) => elem.data().uid === userInf?.uid);\r\n  const userData = user?.data();\r\n  const handleSaveChange = (e) => {\r\n    e.preventDefault();\r\n    setToggle(!toggle);\r\n    setNotification(true);\r\n    setTimeout(() => {\r\n      setNotification(false);\r\n    }, 1000);\r\n  };\r\n  const dispatch = useDispatch();\r\n  const saveUserToRedux = async () => {\r\n    if (userData) {\r\n      dispatch(saveUserInfo({ user: userData }));\r\n      console.log(\"dispatched \" + userData.whatIDo);\r\n    } else console.log(\"No dispatch\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (dataUpdated) {\r\n      saveUserToRedux();\r\n    }\r\n  }, [dataUpdated]);\r\n\r\n  return (\r\n    <div\r\n      className=\"modal fade\"\r\n      id=\"editProfile\"\r\n      tabIndex=\"-1\"\r\n      aria-labelledby=\"editProfile\"\r\n      aria-hidden=\"true\"\r\n    >\r\n      <div className=\"modal-dialog modal-dialog-scrollable c-modal-dialog modal-dialog-centered\">\r\n        <div className=\"modal-content c-modal-content\">\r\n          <div className=\"modal-header c-modal__header\">\r\n            <div className=\"c-modal__header__title\">\r\n              <h1>\r\n                <div className=\"text\">Edit your propfile</div>\r\n              </h1>\r\n            </div>\r\n            {notification === true && (\r\n              <div className=\"notification badge bg-success\">\r\n                Your info was successfully updated!\r\n              </div>\r\n            )}\r\n            <button className=\"c-button-unstyled close-button\" data-bs-dismiss=\"modal\" data-bs-target=\"#editProfile\">\r\n              <CloseIcon />\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"modal-body c-modal__body\">\r\n            <div className=\"c-modal__body__section\" >\r\n              <div className=\"c-modal__body__columns\">\r\n                <div className=\"col c-input-field\">\r\n                  <InputSection\r\n                    label=\"Display name\"\r\n                    name=\"displayName\"\r\n                    type=\"text\"\r\n                    saveChange={saveChange}\r\n                    toggle={toggle}\r\n                  />\r\n                  <InputSection\r\n                    label=\"What I do\"\r\n                    name=\"whatIDo\"\r\n                    type=\"text\"\r\n                    saveChange={saveChange}\r\n                    toggle={toggle}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"col c-profile-photo-field\">\r\n                  <InputSection\r\n                    label=\"Profile photo\"\r\n                    type=\"photo\"\r\n                    saveChange={saveChange}\r\n                    toggle={toggle}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"c-modal__footer\">\r\n            <button\r\n              className=\"btn btn-light cancel-button c-button--medium\"\r\n              data-bs-dismiss=\"modal\"\r\n            >\r\n              Cancel\r\n            </button>\r\n\r\n            <button\r\n              className=\"btn btn-success save-button c-button--medium\"\r\n              onClick={handleSaveChange}\r\n            >\r\n              Save Changes\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditProfile;\r\n","import React from 'react'\r\n\r\nfunction Reiszer(props) {\r\n    return (\r\n        <div className=\"chat-side-bar-resizer resizer\" onMouseDown={props.onMouseDown}>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Reiszer\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { enterDirectMessage, selectChosenUser, selectLocalTime, selectMessageSend, selectUser, sendMessage, setOnOpenProfile, setOnReplyInThread, setOnSave, setTime, showSecondaryWorkspace } from '../../features/appSlice'\r\nimport SmallLoader from '../SmallLoader'\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\n\r\nfunction ProfileModal({loading}) {\r\n    const dispatch = useDispatch();\r\n    const user = useSelector(selectUser);\r\n    const selectedUser = useSelector(selectChosenUser);\r\n    const photoURL = selectedUser?.photoURL;\r\n    const displayName  = selectedUser?.displayName;\r\n    const uid = selectedUser?.uid;\r\n    const email = selectedUser?.email;\r\n    const isOnline = selectedUser?.isOnline\r\n    const openProfile = () => {\r\n        dispatch(showSecondaryWorkspace({\r\n            isShowingSecondaryWorkspace: true\r\n        }));\r\n        \r\n        dispatch(setOnReplyInThread({\r\n            onReplyInThread: null,\r\n        }))\r\n        dispatch(setOnSave({\r\n            onSave: null\r\n        }))\r\n        dispatch(setOnOpenProfile({\r\n            onOpenProfile: true,\r\n        }))\r\n    }\r\n    // Handle sending message\r\n    const sendMessage = () => {\r\n        console.log(\"?\")\r\n        dispatch(enterDirectMessage({\r\n            directMessageUid: uid\r\n        }))\r\n        \r\n        \r\n       \r\n    }\r\n\r\n    // Set up local time\r\n    const localTime = useSelector(selectLocalTime);\r\n    const updateTime = () => {\r\n        var currentTime = new Date()\r\n        var hours = currentTime.getHours()\r\n        var minutes = currentTime.getMinutes()\r\n        if (minutes < 10){\r\n        minutes = \"0\" + minutes\r\n        }\r\n        var localTime = hours + \":\" + minutes + \" \";\r\n       \r\n        dispatch(setTime({\r\n            localTime: localTime\r\n        }))\r\n    }\r\n\r\n    useEffect(() => {\r\n        setInterval(updateTime, 1000)\r\n       \r\n    }, [localTime])\r\n    return (\r\n        <div id = \"profileModal\"  className=\"modal\"  aria-hidden=\"true\" tabIndex=\"-1\" aria-labelledby=\"profileModal\">\r\n            <div className=\"modal-dialog modal-dialog-centered\">\r\n            \r\n                <div className=\"modal-content profile-card\">\r\n                {loading?<SmallLoader/>:\r\n                <>\r\n                    <div className=\"profile-card__header\">\r\n                        <div role=\"button\" data-bs-dismiss=\"modal\" onClick={openProfile} className=\"profile-card__picture\" style = {{backgroundImage: `url(${photoURL})`}}>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"profile-card__name\">\r\n                        <div className=\"profile-card__name__title\" role=\"button\" onClick={openProfile} data-bs-dismiss=\"modal\">\r\n                            {displayName}\r\n                        </div>\r\n                        <div className={isOnline?\"profile-card__name__status online\": \"profile-card__name__status\"}>\r\n                            <FiberManualRecordIcon className=\"status\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"profile-card__link\" role=\"button\" onClick={openProfile} data-bs-dismiss=\"modal\" data-bs-target=\".editChat\">\r\n                        View full profile\r\n                    </div>\r\n\r\n                    <div className=\"profile-card__time-field\">\r\n                        <div className=\"profile-card__time-field__label\">\r\n                        Local time\r\n                        </div>\r\n                        <div className=\"profile-card__time-field__value\">\r\n                            {localTime}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"profile-card__buttons\">\r\n                        <button className=\"c-button--medium c-button\" onClick={sendMessage} data-bs-dismiss=\"modal\">Message</button>\r\n                        {user?.uid === uid&&<button className=\"c-button--medium c-button\" data-bs-toggle=\"modal\" data-bs-dismiss=\"modal\" data-bs-target=\"#editProfile\">Edit Profile</button>}\r\n                    </div>\r\n\r\n\r\n                </>\r\n                }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileModal\r\n","import React, { useState } from 'react'\r\n\r\nfunction InputField({fieldLabel, required, hyphenized, onChange, value, disabled}) {\r\n    \r\n    return (\r\n        <div className=\"input-field form-group\">\r\n            <label htmlFor=\"name-input\" className=\"form-label\"><strong>{fieldLabel}</strong></label>\r\n            <input disabled={disabled} value = {value} onChange = {onChange} type=\"text\" className=\"form-control\" required={required?required:\"\"}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputField\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  selectDirectMessageRoom,\r\n  selectDirectUser,\r\n  selectLocalTime,\r\n  selectRoomDetails,\r\n  selectRoomId,\r\n  selectUser,\r\n  selectUserDirect,\r\n  setIsModalOpen,\r\n  setSelectedUser,\r\n  showSecondaryWorkspace,\r\n} from \"../../features/appSlice\";\r\nimport { db } from \"../../firebase\";\r\nimport InputField from \"./InputField\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\";\r\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\r\nimport firebase from \"firebase\";\r\nfunction AboutTab({\r\n  roomName,\r\n  roomDes,\r\n  roomOwner,\r\n  id,\r\n  isPrivate,\r\n  roomMembers,\r\n}) {\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState(roomName);\r\n  const [des, setDes] = useState(roomDes ? roomDes : \"\");\r\n  const defaultRoomId = \"A86N0fmTCy8fTd4NS0Ne\";\r\n  useEffect(() => {\r\n    setName(roomName);\r\n    setDes(roomDes ? roomDes : \"\");\r\n  }, [roomName, roomDes]);\r\n  const [notification, setNotification] = useState(\"\");\r\n  const [changed, setChanged] = useState(false);\r\n  const handleNameChange = (e) => {\r\n    var content = e.target.value;\r\n    var hyphenizedContent = content.replace(/\\s/g, \"-\");\r\n    setName(hyphenizedContent);\r\n  };\r\n\r\n  const handleDesChange = (e) => {\r\n    var content = e.target.value;\r\n    setDes(content);\r\n  };\r\n  const saveChange = () => {\r\n    if (name === \"\") {\r\n      setNotification(\"Name must not be left empty!, try again\");\r\n      setChanged(false);\r\n      setName(roomName);\r\n      return;\r\n    }\r\n    db.collection(\"room\")\r\n      .doc(id)\r\n      .update({\r\n        name: name,\r\n        des: des,\r\n      })\r\n      .then(() => {\r\n        setChanged(true);\r\n        setNotification(\"Channel was updated successfully!\");\r\n        setTimeout(() => {\r\n          setNotification(\"\");\r\n        }, 2000);\r\n      })\r\n      .catch((err) => notification(err.message));\r\n  };\r\n\r\n  // Leave channel Handle\r\n  const user = useSelector(selectUser);\r\n  const [alert, setAlert] = useState(false);\r\n  const [leave, setLeave] = useState(false);\r\n  const [left, setLeft] = useState(false);\r\n  const openAlert = () => {\r\n    setAlert(true);\r\n  };\r\n  const closeAlert = () => {\r\n    setAlert(false);\r\n  };\r\n  const leaveChannel = () => {\r\n    setLeave(true);\r\n    setAlert(false);\r\n  };\r\n  const roomId = useSelector(selectRoomId);\r\n  var membersArr = roomMembers?.slice();\r\n  var index = membersArr?.indexOf(user.uid);\r\n  membersArr?.splice(index, 1);\r\n  useEffect(() => {\r\n    if (leave) {\r\n      db.collection(\"room\")\r\n        .doc(roomId)\r\n        .update({\r\n          members: membersArr ? membersArr : [],\r\n        })\r\n        .then(() => {\r\n          dispatch(\r\n            setIsModalOpen({\r\n              isModalOpen: false,\r\n            })\r\n          );\r\n        })\r\n        .catch((err) => alert(err.message));\r\n      let input = `Leave #${roomName}.`;\r\n      db.collection(\"room\").doc(roomId).collection(\"messages\").add({\r\n        message: input,\r\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        user: user.displayName,\r\n        userImage: user.photoURL,\r\n        uid: user.uid,\r\n      });\r\n    }\r\n  }, [leave]);\r\n\r\n  // Direct room\r\n  const roomDirectId = useSelector(selectDirectMessageRoom);\r\n  const userDirect = useSelector(selectDirectUser);\r\n  const localTime = useSelector(selectLocalTime);\r\n  // View full profile handle\r\n  const openSecondaryView = () => {\r\n    dispatch(\r\n      showSecondaryWorkspace({\r\n        isShowingSecondaryWorkspace: true,\r\n      })\r\n    );\r\n    dispatch(\r\n      setSelectedUser({\r\n        selectedUser: userDirect,\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <div\r\n      class=\"tab-pane fade show active channel-details__about\"\r\n      id=\"about\"\r\n      role=\"tabpanel\"\r\n      aria-labelledby=\"about-tab\"\r\n    >\r\n      {roomDirectId && (\r\n        <>\r\n          <div className=\"c-tab-group\">\r\n            <div className=\"c-tab-group__inner\">\r\n              <div className=\"text-line\">\r\n                <div className=\"text-line__icon\">\r\n                  <AccessTimeIcon />\r\n                </div>\r\n                <div className=\"text-line__content\">{localTime} Local time</div>\r\n              </div>\r\n              <div className=\"text-line\">\r\n                <div className=\"text-line__icon\">\r\n                  <MailOutlineIcon />\r\n                </div>\r\n                <div className=\"text-line__content\">{userDirect?.email}</div>\r\n              </div>\r\n\r\n              <button\r\n                onClick={openSecondaryView}\r\n                data-bs-dismiss=\"modal\"\r\n                data-bs-target={\"a\" + id}\r\n                className=\"c-button-unstyled\"\r\n              >\r\n                View full profile\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n      {roomId && (\r\n        <>\r\n          <div className=\"input-group c-tab-group\">\r\n            <InputField\r\n              fieldLabel=\"Name\"\r\n              required={true}\r\n              hyphenized={true}\r\n              onChange={handleNameChange}\r\n              value={name}\r\n              disabled={id === defaultRoomId}\r\n            />\r\n            <InputField\r\n              fieldLabel=\"Description\"\r\n              onChange={handleDesChange}\r\n              value={des}\r\n            />\r\n            <br />\r\n            <div className=\"input-group__footer\">\r\n              <button\r\n                className=\"btn btn-success c-button--medium\"\r\n                onClick={saveChange}\r\n              >\r\n                Save\r\n              </button>\r\n              {changed ? (\r\n                <div className=\"notification badge bg-success\">\r\n                  {notification}\r\n                </div>\r\n              ) : (\r\n                <div className=\"notification badge bg-warning\">\r\n                  {notification}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"text-group c-tab-group\">\r\n            <div className=\"text-field\">\r\n              <div className=\"text-field__title\">Created by</div>\r\n              <div className=\"text-field__content\">\r\n                {roomOwner ? roomOwner : \"...\"}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"text-field leave-button\" role=\"button\">\r\n              <div className=\"text-field__title\" onClick={openAlert}>\r\n                Leave Channel\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {alert && (\r\n        <div className=\"c-tab-group alert\">\r\n          <span>\r\n            Do you want to leave channel?{\" \"}\r\n            {isPrivate && (\r\n              <>\r\n                This is a <strong>private</strong> channel so it cannot be\r\n                accessed by outsiders.\r\n              </>\r\n            )}\r\n          </span>\r\n          <div className=\"buttons-group\">\r\n            <button className=\"btn btn-secondary\" onClick={closeAlert}>\r\n              Cancel\r\n            </button>\r\n            <button\r\n              className=\"btn btn-danger\"\r\n              data-bs-dismiss=\"modal\"\r\n              data-bs-target={\"a\" + id}\r\n              onClick={leaveChannel}\r\n            >\r\n              Leave\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AboutTab;\r\n","import FiberManualRecord from '@material-ui/icons/FiberManualRecord';\r\nimport React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectUser, setSelectedUser, setUserProfileUid } from '../../features/appSlice';\r\n\r\nfunction Member({user, roomOwner, addUser, dropdownItem, filterText}) {\r\n    const dispatch = useDispatch()\r\n    const loginUser = useSelector(selectUser)\r\n    const photoURL = user?.photoURL?user.photoURL:\"default-avatar.jpg\";\r\n    const name = user?.displayName?user.displayName:user.email;\r\n    const status = user?.isOnline;\r\n    const sendUserUid = () => {\r\n        dispatch(setSelectedUser({\r\n            selectedUser: user\r\n        }))\r\n    }\r\n    if((name.toLowerCase().indexOf(filterText)!==-1||filterText===\"\"))\r\n    return (\r\n        <div className=\"member\" role=\"button\" data-bs-toggle={!dropdownItem?\"modal\":\"false\"}\r\n        data-bs-target=\"#profileModal\" onClick={!dropdownItem?sendUserUid:() => {}}>{(<>\r\n            <div className = \"member__info\">\r\n                <div className=\"member__avatar\" style={{backgroundImage: `url(${photoURL})`}}></div>\r\n                <div className=\"member__name\"><strong>{name} {user?.uid===loginUser.uid?\"(You)\":\"\"}</strong></div>\r\n                <div className=\"member__status\"><FiberManualRecord className = {status?\"status active\":\"status\"}/></div>\r\n            </div>\r\n            {(loginUser?.uid === roomOwner?.uid)&&\r\n            <div className=\"interact-button\">\r\n                <span role=\"button\" data-bs-toggle=\"modal\" data-bs-target = \"#removeAlertModal\"><strong>Remove</strong></span>\r\n\r\n            </div>}\r\n            {dropdownItem&&\r\n            <div className=\"interact-button\">\r\n                <span role=\"button\" onClick = {addUser}><strong>Add</strong></span>\r\n            </div>\r\n            }</>)}\r\n        </div>\r\n    )\r\n    else return (<div></div>)\r\n}\r\n\r\nexport default Member\r\n","import React, { useEffect } from \"react\";\r\nimport { useCollection } from \"react-firebase-hooks/firestore\";\r\nimport { db } from \"../../firebase\";\r\nimport Member from \"./Member\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\r\nimport { useState } from \"react\";\r\nimport firebase from \"firebase\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectUser } from \"../../features/appSlice\";\r\nfunction MembersTab({ roomMembers, roomOwner, id }) {\r\n  const [users, loading] = useCollection(db.collection(\"users\"));\r\n  let userInf = useSelector(selectUser)\r\n  let membersList = [];\r\n  users?.docs.map((doc) => {\r\n    if (roomMembers?.includes(doc.data().uid)) {\r\n      membersList.push(doc.data());\r\n    }\r\n  });\r\n\r\n  // Handle Add people\r\n  const [isAdded, setIsAdded] = useState(false);\r\n  let membersArr = roomMembers?.slice();\r\n  const addUser = (user) => {\r\n    if (user && roomMembers&& !membersArr.includes(user?.uid)) {\r\n      membersArr.push(user.uid);\r\n      db.collection(\"room\")\r\n        .doc(id)\r\n        .update({\r\n          members: membersArr,\r\n        })\r\n        .then((data) => {\r\n          let input = `is added by ${userInf?.displayName}.`;\r\n          db.collection(\"room\").doc(id).collection(\"messages\").add({\r\n            message: input,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            user: user.displayName,\r\n            userImage: user.photoURL,\r\n            uid: user.uid,\r\n          });\r\n          setIsAdded(true);\r\n        });\r\n    }\r\n  };\r\n\r\n  const addAllUser = () => {\r\n    if (users && roomMembers) {\r\n      users?.docs.map((doc) => {\r\n        addUser(doc.data())\r\n      });\r\n    }\r\n  };\r\n\r\n  // Handle Search Member\r\n  const [searchMemberInput, setSearchMemberInput] = useState(\"\");\r\n  const [searchAddInput, setSearchAddInput] = useState(\"\");\r\n  const searchMemberInputHandler = (e) => {\r\n    setSearchMemberInput(e.target.value);\r\n  };\r\n  const searchAddInputHandler = (e) => {\r\n    setSearchAddInput(e.target.value);\r\n  };\r\n  return (\r\n    <div\r\n      class=\"tab-pane fade channel-details__members\"\r\n      id=\"members\"\r\n      role=\"tabpanel\"\r\n      aria-labelledby=\"members-tab\"\r\n    >\r\n      <div className=\"channel-details__members__header\">\r\n        <div className=\"form-group\">\r\n          <SearchIcon className=\"search-icon\" />\r\n          <input\r\n            onChange={searchMemberInputHandler}\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Find members\"\r\n            value={searchMemberInput}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"channel-details__members__list\">\r\n        <div className=\"dropdown\">\r\n          <div\r\n            className=\"member dropdown-toggle\"\r\n            role=\"button\"\r\n            data-bs-toggle=\"dropdown\"\r\n            data-bs-auto-close=\"outside\"\r\n            aria-expanded=\"false\"\r\n            id=\"addUsers\"\r\n          >\r\n            <div className=\"member__info\">\r\n              <div className=\"member__avatar\">\r\n                <PersonAddIcon />\r\n              </div>\r\n              <div className=\"member__name\">\r\n                <strong>Add people</strong>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"dropdown-menu\"\r\n            aria-labelledby=\"addUsers\"\r\n            style={{ maxHeight: 300, maxWidth: 100 + \"%\", width: \"100%\" }}\r\n          >\r\n            <div className=\"form-group\" style={{ padding: \"10px 25px\" }}>\r\n              <label htmlFor=\"\" className=\"form-label\">\r\n                Find user\r\n              </label>\r\n              <input\r\n                onChange={searchAddInputHandler}\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n              />\r\n            </div>\r\n            <button\r\n              className=\"c-button-unstyled c-button--medium c-button\"\r\n              style={{ marginLeft: 25 }}\r\n              onClick={() => addAllUser()}\r\n              role=\"button\"\r\n            >\r\n              <strong>Add all user</strong>\r\n            </button>\r\n            {users?.docs.map((doc) => {\r\n              let user = doc.data();\r\n              let checked = membersList.find((elem) => elem.uid === user.uid);\r\n              if (!checked)\r\n                return (\r\n                  <Member\r\n                    key = {user.uid}\r\n                    filterText={searchAddInput.toLowerCase()}\r\n                    user={user}\r\n                    className=\"dropdown-item\"\r\n                    dropdownItem={true}\r\n                    addUser={() => addUser(user)}\r\n                  />\r\n                );\r\n            })}\r\n          </div>\r\n        </div>\r\n        {membersList.map((user) => {\r\n          return (\r\n            <Member\r\n              filterText={searchMemberInput.toLowerCase()}\r\n              user={user}\r\n              roomOwner={roomOwner}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MembersTab;\r\n","import React, { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useCollection } from \"react-firebase-hooks/firestore\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  selectChosenUser,\r\n  selectRoomDetails,\r\n  selectRoomId,\r\n  selectUser,\r\n} from \"../../features/appSlice\";\r\nimport { db } from \"../../firebase\";\r\nimport firebase from \"firebase\";\r\nimport { data } from \"jquery\";\r\nfunction RemoveAlertModal({ uid }) {\r\n  const userInf = useSelector(selectUser);\r\n  const roomDetails = useSelector(selectRoomDetails);\r\n  const selectedUser = useSelector(selectChosenUser);\r\n  const roomId = useSelector(selectRoomId);\r\n  let members = roomDetails?.members;\r\n  let membersArr = members?.slice();\r\n  const [users, loading] = useCollection(db.collection(\"users\"));\r\n  const user = users?.docs.find((doc) => doc.data().uid === uid);\r\n  const title = user?.data().displayName\r\n    ? user?.data().displayName\r\n    : user?.data().email;\r\n  const [successLoaded, setSuccessLoaded] = useState(true);\r\n  const removeMember = () => {\r\n    let index = members.indexOf(selectedUser.uid);\r\n    if (index !== -1) {\r\n      membersArr?.splice(index, 1);\r\n      db.collection(\"room\")\r\n        .doc(roomId)\r\n        .update({\r\n          members: membersArr,\r\n        })\r\n        .then(() => {\r\n          setSuccessLoaded(true);\r\n          let input = `was removed by ${userInf?.displayName}.`;\r\n          db.collection(\"room\").doc(roomId).collection(\"messages\").add({\r\n            message: input,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            user: user?.data().displayName,\r\n            userImage: user?.data().photoURL,\r\n            uid: user?.data().uid,\r\n          });\r\n        });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    return () => {\r\n      setSuccessLoaded(true);\r\n    };\r\n  }, [successLoaded]);\r\n  return (\r\n    <div\r\n      className=\"modal fade\"\r\n      id=\"removeAlertModal\"\r\n      tabIndex=\"-1\"\r\n      aria-hidden=\"true\"\r\n    >\r\n      <div className=\"modal-dialog\">\r\n        <div className=\"modal-content remove-alert-modal\">\r\n          <div className=\"c-modal__header\">\r\n            <h1>Remove member</h1>\r\n          </div>\r\n          <div className=\"c-modal__content\">\r\n            Are you sure you want to remove {title} from #{roomDetails?.name}\r\n          </div>\r\n          <div className=\"c-modal__footer\">\r\n            <div className=\"footer__buttons\">\r\n              <button\r\n                className=\"c-button-unstyled c-button--medium\"\r\n                data-bs-dismiss=\"modal\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                className=\"c-button-unstyled c-button--medium danger\"\r\n                data-bs-dismiss=\"modal\"\r\n                onClick={removeMember}\r\n              >\r\n                Remove\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RemoveAlertModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { enterRoom, selectRoomDetails, selectRoomId, setIsModalOpen } from \"../../features/appSlice\";\r\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\r\nimport { db } from \"../../firebase\";\r\nimport { useCollection } from \"react-firebase-hooks/firestore\";\r\nfunction SettingTab() {\r\n  const roomId = useSelector(selectRoomId);\r\n  const [roomDetails, loading] = useCollection(roomId&&db.collection('room').doc(roomId))\r\n  const [isChange, setIsChange] = useState(false);\r\n  const [isDelete, setIsDelete] = useState(false);\r\n  const isPrivate = roomDetails?.data()?.isPrivate;\r\n  const [noti, setNoti] = useState(\"\");\r\n  const defaultRoomId = \"A86N0fmTCy8fTd4NS0Ne\";\r\n  const changeType = () => {\r\n    setIsChange(true);\r\n  };\r\n  const deleteChannel = () => {\r\n    setIsDelete(true);\r\n  };\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    if(isChange)\r\n    db.collection(\"room\")\r\n      .doc(roomId)\r\n      .update({\r\n        isPrivate: !isPrivate,\r\n      })\r\n      .then(() => {\r\n        setNoti(\r\n          \"Room changed to \" + isPrivate\r\n            ? \"<strong>public</strong>\"\r\n            : \"<strong>private</strong>\"\r\n        );\r\n      })\r\n      .catch((err) => alert(err.message));\r\n      return () => {\r\n        setIsChange(false)\r\n      }\r\n  }, [isChange]);\r\n\r\n\r\n  useEffect(() => {\r\n    if(isDelete)\r\n    db.collection('room').doc(roomId).delete().then(() => {\r\n      dispatch(setIsModalOpen({\r\n        isModalOpen: false\r\n      }))\r\n      dispatch(enterRoom({\r\n        roomId: defaultRoomId\r\n      }))\r\n    }).catch((err) => alert(err.message));\r\n    return () => {\r\n      setIsDelete(false)\r\n    }\r\n  }, [isDelete])\r\n\r\n  if(roomId !== defaultRoomId)\r\n  return (\r\n    <div\r\n      class=\"tab-pane fade channel-details__setting\"\r\n      id=\"setting\"\r\n      role=\"tabpanel\"\r\n      aria-labelledby=\"setting-tab\"\r\n    >\r\n      <div className=\"c-tab-group\" role=\"button\" onClick={changeType}>\r\n        {!roomDetails?.data()?.isPrivate ? (\r\n          <>\r\n            <LockIcon className=\"type-icon\" />\r\n            <span>Change to private channel</span>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <LockOpenIcon />\r\n            <span>Change to public channel</span>\r\n          </>\r\n        )}\r\n      </div>\r\n      <hr />\r\n\r\n      {<div\r\n        className=\"c-tab-group button-delete\"\r\n        data-bs-dismiss = \"modal\"\r\n        data-bs-target = \"#removeAlertModal\"\r\n        role=\"button\"\r\n        onClick={deleteChannel}\r\n      >\r\n        <DeleteIcon className=\"type-icon\" />\r\n        <span>Delete this channel</span>\r\n      </div>}\r\n    </div>\r\n  );\r\n  else return (<div\r\n    class=\"tab-pane fade channel-details__setting\"\r\n    id=\"setting\"\r\n    role=\"tabpanel\"\r\n    aria-labelledby=\"setting-tab\"\r\n  >\r\n    <div className=\"c-tab-group\">\r\n      This is the general room of the server so it cannot be modified\r\n    </div>\r\n   </div>)\r\n}\r\n\r\nexport default SettingTab;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"../../css/editchat.css\";\r\nimport {\r\n  selectChosenUser,\r\n  selectRoomId,\r\n  selectUserDirect,\r\n} from \"../../features/appSlice\";\r\nimport ProfileModal from \"../Chat/ProfileModal\";\r\nimport AboutTab from \"./AboutTab\";\r\nimport InputField from \"./InputField\";\r\nimport MembersTab from \"./MembersTab\";\r\nimport RemoveAlertModal from \"./RemoveAlertModal\";\r\nimport SettingTab from \"./SettingTab\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nfunction EditChat({ id, roomDetails, directUser, onClick }) {\r\n  const userDirectId = useSelector(selectUserDirect);\r\n  const roomId = useSelector(selectRoomId);\r\n  const roomName = roomDetails?.name;\r\n  const roomMembers = roomDetails?.members;\r\n  const roomDes = roomDetails?.des;\r\n  const roomOwnerName = roomDetails?.roomOwner?.displayName;\r\n  const roomOwner = roomDetails?.roomOwner;\r\n  const isPrivate = roomDetails?.isPrivate;\r\n  const userName = directUser?.displayName\r\n    ? directUser.displayName\r\n    : directUser?.email;\r\n  const photoURL = directUser?.photoURL\r\n    ? directUser.photoURL\r\n    : \"default-avatar.jpg\";\r\n  return (\r\n    <div\r\n      className=\"modal fade editChat\"\r\n      id={\"a\" + id}\r\n      tabIndex=\"-1\"\r\n      aria-hidden=\"true\"\r\n    >\r\n      <div className=\"modal-dialog modal-dialog-centered modal-dialog-scrollable\">\r\n        <div className=\"modal-content chat-details-modal\">\r\n          <div className=\"modal-header chat-details-modal__header c-modal__header\">\r\n            <div className=\"user-display\">\r\n              {!roomId && (\r\n                <div\r\n                  className=\"user__avatar\"\r\n                  style={{ backgroundImage: `url(${photoURL})` }}\r\n                ></div>\r\n              )}\r\n              <h1>{roomId ? roomName : userName}</h1>\r\n              <button \r\n                className=\"c-button-unstyled close-button\"\r\n                data-bs-dismiss = \"modal\"\r\n                data-bs-target = {id}\r\n              >\r\n                <CloseIcon />\r\n              </button>\r\n            </div>\r\n            <ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\r\n              <li class=\"nav-item\" role=\"presentation\">\r\n                <span\r\n                  class=\"nav-link active\"\r\n                  id=\"home-tab\"\r\n                  data-bs-toggle=\"tab\"\r\n                  data-bs-target=\"#about\"\r\n                  type=\"button\"\r\n                  role=\"tab\"\r\n                  aria-controls=\"about\"\r\n                  aria-selected=\"true\"\r\n                >\r\n                  About\r\n                </span>\r\n              </li>\r\n              {!userDirectId && (\r\n                <li class=\"nav-item\" role=\"presentation\">\r\n                  <span\r\n                    class=\"nav-link\"\r\n                    id=\"profile-tab\"\r\n                    data-bs-toggle=\"tab\"\r\n                    data-bs-target=\"#members\"\r\n                    type=\"button\"\r\n                    role=\"tab\"\r\n                    aria-controls=\"members\"\r\n                    aria-selected=\"false\"\r\n                  >\r\n                    Members\r\n                  </span>\r\n                </li>\r\n              )}\r\n              {!userDirectId && (\r\n                <li class=\"nav-item\" role=\"presentation\">\r\n                  <span\r\n                    class=\"nav-link\"\r\n                    id=\"contact-tab\"\r\n                    data-bs-toggle=\"tab\"\r\n                    data-bs-target=\"#setting\"\r\n                    type=\"button\"\r\n                    role=\"tab\"\r\n                    aria-controls=\"setting\"\r\n                    aria-selected=\"false\"\r\n                  >\r\n                    Setting\r\n                  </span>\r\n                </li>\r\n              )}\r\n            </ul>\r\n          </div>\r\n          <div className=\"modal-body chat-details-modal__tabs c-modal__content\">\r\n            <div className=\"c-modal__content__inner\">\r\n              <div class=\"tab-content\" id=\"myTabContent\">\r\n                <AboutTab\r\n                  roomName={roomName}\r\n                  roomDes={roomDes}\r\n                  roomOwner={roomOwnerName}\r\n                  id={id}\r\n                  isPrivate={isPrivate}\r\n                  roomMembers={roomMembers}\r\n                />\r\n                {!userDirectId && (\r\n                  <MembersTab\r\n                    onClick={onClick}\r\n                    roomMembers={roomDetails?.members}\r\n                    roomOwner={roomOwner}\r\n                    id={id}\r\n                  />\r\n                )}\r\n                {!userDirectId && <SettingTab />}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal-footer\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditChat;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useCollection } from \"react-firebase-hooks/firestore\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"../../css/createchannel.css\";\r\nimport { selectUser } from \"../../features/appSlice\";\r\nimport { db } from \"../../firebase\";\r\nimport SmallLoader from \"../SmallLoader\";\r\nimport InputField from \"./InputField\";\r\nimport firebase from \"firebase\";\r\nfunction CreateChannel() {\r\n  const user = useSelector(selectUser);\r\n  const [users, loading] = useCollection(db.collection(\"users\"));\r\n  const [channels, channelLoading] = useCollection(db.collection(\"room\"))\r\n  let uids = [];\r\n  users?.docs.map((doc) => uids.push(doc.data().uid));\r\n  const [toggle, setToggle] = useState(false);\r\n  const [checked, setChecked] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [des, setDes] = useState(\"\");\r\n  const [notification, setNotification] = useState(\"\");\r\n  const [added, setAdded] = useState(false);\r\n  const [isExist, setIsExist] = useState(false);\r\n  const handleToggle = () => {\r\n    setToggle(true);\r\n  };\r\n\r\n  const handleSwitch = () => {\r\n    setChecked(!checked);\r\n  };\r\n\r\n  const handleNameChange = (e) => {\r\n    var content = e.target.value;\r\n    var hyphenizedContent = content.replace(/\\s/g, \"-\");\r\n    setName(hyphenizedContent);\r\n  };\r\n\r\n  const handleDesChange = (e) => {\r\n    var content = e.target.value;\r\n    setDes(content);\r\n  };\r\n\r\n  const addChannel = async () => {\r\n    if (!loading) {\r\n      if (name === \"\") {\r\n        setNotification(\"Please enter the channel name\");\r\n        return;\r\n      }\r\n      if (!isExist) {\r\n        db.collection(\"room\")\r\n          .add({\r\n            name: name,\r\n            des: des,\r\n            isPrivate: checked,\r\n            members: checked ? [user.uid] : uids,\r\n            roomOwner: user,\r\n          })\r\n          .then((doc) => {\r\n            setNotification(\"Room was created successfully\");\r\n            setAdded(true);\r\n          })\r\n          .catch((err) => {\r\n            setNotification(err.message);\r\n            setAdded(false);\r\n          });\r\n      } else setNotification(\"Channel exist!\");\r\n      setTimeout(() => setNotification(\"\"), 3000);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!channelLoading) {\r\n      let doc = channels?.docs?.find((elem) => elem.data().name === name);\r\n      console.log(doc)\r\n      if (doc) setIsExist(true);\r\n    }\r\n    if (toggle) {\r\n      addChannel();\r\n    }\r\n    return () => {\r\n      if (toggle) {\r\n        setName(\"\");\r\n        setDes(\"\");\r\n      }\r\n      setIsExist(false);\r\n      setToggle(false);\r\n    };\r\n  }, [channelLoading, name, toggle]);\r\n\r\n  return (\r\n    <div\r\n      className=\"modal fade\"\r\n      id=\"createChannel\"\r\n      tabIndex=\"-1\"\r\n      aria-hidden=\"true\"\r\n    >\r\n      <div className=\"modal-dialog modal-dialog-centered modal-dialog-scrollable\">\r\n        <div className=\"modal-content create-channel\">\r\n          {loading ? (\r\n            <SmallLoader />\r\n          ) : (\r\n            <>\r\n              <div className=\"create-channel__header c-modal__header\">\r\n                <h1>Create a channel</h1>\r\n              </div>\r\n              <div className=\"create-channel__body\">\r\n                <div className=\"overview c-gray-text\">\r\n                  Channels are where your team communicates. They’re best when\r\n                  organized around a topic — #marketing, for example.\r\n                </div>\r\n\r\n                <br />\r\n                <InputField\r\n                  fieldLabel=\"Name\"\r\n                  required={true}\r\n                  hyphenized={true}\r\n                  toggle={toggle}\r\n                  onChange={handleNameChange}\r\n                  value={name}\r\n                />\r\n                <InputField\r\n                  fieldLabel=\"Description\"\r\n                  toggle={toggle}\r\n                  onChange={handleDesChange}\r\n                  value={des}\r\n                />\r\n                <div className=\"c-gray-text\">\r\n                  <small>What is this channel about(optional)</small>\r\n                </div>\r\n                <br />\r\n                <div className=\"channel-type form-check form-switch\">\r\n                  <label\r\n                    htmlFor=\"switch-button\"\r\n                    className=\"channel-type-des form-check-label\"\r\n                  >\r\n                    <div className=\"channel-type-des__title\">\r\n                      <strong>Make private</strong>\r\n                    </div>\r\n                    <div className=\"channel-type-des__body c-gray-text\">\r\n                      {checked && (\r\n                        <>\r\n                          <strong>\r\n                            Private Channel cannot be accessed from outsiders\r\n                          </strong>\r\n                          .\r\n                        </>\r\n                      )}\r\n                      {!checked &&\r\n                        \"When a channel is set to private, it can only be viewed or joined by invitation.\"}\r\n                    </div>\r\n                  </label>\r\n\r\n                  <div className=\"switch-button\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      name=\"switch-button\"\r\n                      role=\"switch\"\r\n                      className=\"form-check-input\"\r\n                      id=\"switch-button\"\r\n                      onChange={handleSwitch}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <br />\r\n              <div className=\"create-channel__footer\">\r\n                <button\r\n                  className=\"btn btn-success c-button--medium\"\r\n                  onClick={handleToggle}\r\n                >\r\n                  Create\r\n                </button>\r\n                {added ? (\r\n                  <div className=\"notification badge bg-success\">\r\n                    {notification}\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"notification badge bg-warning\">\r\n                    {notification}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateChannel;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"../../css/setuppage.css\";\r\nimport {\r\n  reset,\r\n  saveUserInfo,\r\n  selectDocId,\r\n  selectUser,\r\n} from \"../../features/appSlice\";\r\nimport { auth, db, storage } from \"../../firebase\";\r\nimport SmallLoader from \"../SmallLoader\";\r\nfunction InitAccount() {\r\n  const handleUpload = () => {\r\n    inputRef.click();\r\n  };\r\n  //   Handle input\r\n  const [name, setName] = useState(\"\");\r\n  const [job, setJob] = useState(\"\");\r\n  const [imgURL, setImgURL] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [onSave, setOnSave] = useState(false);\r\n  const [notif, setNotif] = useState(\"\");\r\n  const handleImgChange = async (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n    const storageRef = storage.ref();\r\n    const fileRef = storageRef.child(file.name);\r\n    setLoading(true);\r\n    await fileRef.put(file);\r\n    setImgURL(await fileRef.getDownloadURL());\r\n    setLoading(false);\r\n    console.log(imgURL);\r\n  };\r\n  const handleNameChange = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const handleJobChange = (e) => {\r\n    setJob(e.target.value);\r\n  };\r\n  // Handle Save Change\r\n  const dispatch = useDispatch();\r\n  const userInf = useSelector(selectUser);\r\n  const id = useSelector(selectDocId);\r\n  const saveChange = async () => {\r\n    console.log('save changes')\r\n    let users = await db.collection(\"users\");\r\n    console.log('users', userInf)\r\n    if (id) {\r\n      users\r\n        .doc(id)\r\n        .update({\r\n          photoURL: imgURL,\r\n        })\r\n        .then(() => console.log(\"Clicked\"))\r\n        .catch((err) => alert(err.message));\r\n\r\n      users\r\n        .doc(id)\r\n        .update({\r\n          displayName: name,\r\n        })\r\n        .then(() => {\r\n          dispatch(\r\n            saveUserInfo({\r\n              user: {\r\n                displayName: name,\r\n                whatIDo: job,\r\n                photoURL: imgURL,\r\n                uid: userInf.uid,\r\n                email: userInf.email,\r\n                emailVerified: userInf.emailVerified,\r\n                isOnline: true,\r\n              },\r\n            })\r\n          );\r\n        })\r\n        .catch((err) => alert(err.message));\r\n\r\n      users\r\n        .doc(id)\r\n        .update({\r\n          whatIDo: job,\r\n        })\r\n        .then(() => {\r\n          dispatch(\r\n            saveUserInfo({\r\n              user: {\r\n                displayName: name,\r\n                whatIDo: job,\r\n                photoURL: imgURL,\r\n                uid: userInf.uid,\r\n                email: userInf.email,\r\n                emailVerified: userInf.emailVerified,\r\n                isOnline: true,\r\n              },\r\n            })\r\n          );\r\n        })\r\n        .catch((err) => alert(err.message));\r\n    }\r\n  };\r\n  const onSaveHandler = () => {\r\n    setOnSave(true);\r\n  };\r\n  useEffect(() => {\r\n    if (onSave) {\r\n      if (name === \"\" || job === \"\") {\r\n        setNotif(\"You have to fill the information!\");\r\n        return;\r\n      }\r\n      if (imgURL === \"\") {\r\n        setNotif(\"You have to upload an image!\");\r\n        return;\r\n      }\r\n      saveChange();\r\n    }\r\n    return () => {\r\n      setOnSave(false);\r\n    };\r\n  }, [onSave]);\r\n  // Sign Out\r\n  const logOut = async () => {\r\n    await auth\r\n      .signOut()\r\n      .then(() => {\r\n        db.collection(\"users\").doc(id).update({\r\n          isOnline: false,\r\n        });\r\n      })\r\n      .catch((error) => alert(error.message));\r\n    dispatch(\r\n      reset({\r\n        initState: null,\r\n      })\r\n    );\r\n  };\r\n  let inputRef;\r\n\r\n  return (\r\n    <div className=\"setup-page-container\">\r\n      <h2>Please enter your basic information</h2>\r\n      <div className=\"setup-page__inner\">\r\n        <div className=\"setup-page__collumns\">\r\n          <div className=\"collumn setup-page__collumn photo-column \">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"\" className=\"form-label\">\r\n                <strong>Photo</strong>\r\n              </label>\r\n              <div className=\"image-holder-container\">\r\n                <div\r\n                  className=\"image-holder\"\r\n                  style={{ backgroundImage: `url(${imgURL})` }}\r\n                >\r\n                  {loading && <SmallLoader />}\r\n                </div>\r\n              </div>\r\n\r\n              <input\r\n                ref={(input) => (inputRef = input)}\r\n                type=\"file\"\r\n                className=\"form-control photo-input\"\r\n                accept=\"img/*\"\r\n                onChange={handleImgChange}\r\n              />\r\n              <span\r\n                role=\"button\"\r\n                className=\"upload-button c-button--medium btn-success\"\r\n                onClick={handleUpload}\r\n              >\r\n                Upload an image{\" \"}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\" collumn setup-page__collumn info-column\">\r\n            <div className=\"form-group\">\r\n              <label className=\"form-label\">\r\n                <strong>Display name</strong>{\" \"}\r\n              </label>\r\n              <input\r\n                value={name}\r\n                onChange={handleNameChange}\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n              />\r\n            </div>\r\n            <br />\r\n            <div className=\"form-group\">\r\n              <label className=\"form-label\">\r\n                <strong>What you do</strong>\r\n              </label>\r\n              <input\r\n                value={job}\r\n                onChange={handleJobChange}\r\n                type=\"text\"\r\n                className=\"form-control \"\r\n              />\r\n            </div>\r\n            <br />\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <div className=\"button-container\">\r\n          <button className=\"btn btn-secondary\" onClick={logOut}>\r\n            Use another account\r\n          </button>\r\n          <button className=\"btn btn-success\" onClick={onSaveHandler}>\r\n            Proceed to the server\r\n          </button>\r\n        </div>\r\n        <div className=\"notif-container\">\r\n          <strong>{notif}</strong>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InitAccount;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport InputIcon from \"@material-ui/icons/Input\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  enterDirectMessage,\r\n  enterRoom,\r\n  selectChosenUser,\r\n  selectDirectMessageRoom,\r\n  selectDocId,\r\n  selectLocalTime,\r\n  selectOnMainSave,\r\n  selectOnOpenProfile,\r\n  selectOnReplyInThread,\r\n  selectOnSave,\r\n  selectOnSendingReaction,\r\n  selectRoomId,\r\n  selectSavedItemsToggle,\r\n  selectSecondaryWorkspaceStatus,\r\n  selectThreadMessageDirectId,\r\n  selectThreadMessageId,\r\n  selectThreadMessageRoomId,\r\n  selectUser,\r\n  selectUserProfileUid,\r\n  setOnMainSave,\r\n  setOnOpenProfile,\r\n  setOnReplyInThread,\r\n  setOnSave,\r\n  setSavedItemId,\r\n  setSelectedUser,\r\n  setUserProfileUid,\r\n  showSecondaryWorkspace,\r\n} from \"../../features/appSlice\";\r\nimport DehazeIcon from \"@material-ui/icons/Dehaze\";\r\nimport { db } from \"../../firebase\";\r\nimport { useCollection, useDocument } from \"react-firebase-hooks/firestore\";\r\nimport Message from \"../Chat/Message\";\r\nimport SmallLoader from \"../SmallLoader\";\r\nimport \"../../css/mainsave.css\";\r\nfunction MainSave() {\r\n  const selectedUser = useSelector(selectChosenUser);\r\n  const photoURL = selectedUser?.photoURL;\r\n  const title = selectedUser?.displayName;\r\n  const isOnline = selectedUser?.isOnline;\r\n  const isOpen = useSelector(selectSecondaryWorkspaceStatus);\r\n  const currentRoomId = useSelector(selectRoomId);\r\n  const currentDirectId = useSelector(selectDirectMessageRoom);\r\n  const userInf = useSelector(selectUser);\r\n  const job = selectedUser?.whatIDo;\r\n  const localTime = useSelector(selectLocalTime);\r\n  const ref = useRef(null);\r\n  const docUserId = useSelector(selectDocId);\r\n  const [emojiReact, setEmojiReact] = useState(\"\");\r\n  const [reactToggle, setReactToggle] = useState(false);\r\n  const [position, setPosition] = useState(null);\r\n  const [users, usersLoading] = useCollection(db.collection(\"users\"));\r\n  const savedItemsToggle = useSelector(selectSavedItemsToggle);\r\n  const [rooms] = useCollection(db.collection(\"room\"));\r\n  const dispatch = useDispatch();\r\n  const [roomMessages] = useCollection(\r\n    currentRoomId &&\r\n      db.collection(\"room\").doc(currentRoomId).collection(\"messages\")\r\n  );\r\n  const [directRooms] = useCollection(db.collection(\"directRooms\"));\r\n  const [directMessages] = useCollection(\r\n    currentDirectId &&\r\n      db.collection(\"directRooms\").doc(currentDirectId).collection(\"messages\")\r\n  );\r\n  console.log(currentDirectId);\r\n  const [savedItemsInfo, itemsLoading] = useCollection(\r\n    docUserId &&\r\n      db\r\n        .collection(\"users\")\r\n        .doc(docUserId)\r\n        .collection(\"savedItems\")\r\n        .orderBy(\"timestamp\", \"desc\")\r\n  );\r\n  const gotoSavedItems = () => {\r\n    dispatch(\r\n      showSecondaryWorkspace({\r\n        isShowingSecondaryWorkspace: true,\r\n      })\r\n    );\r\n    dispatch(\r\n      setOnSave({\r\n        onSave: true,\r\n      })\r\n    );\r\n    dispatch(\r\n      setOnOpenProfile({\r\n        onOpenProfile: null,\r\n      })\r\n    );\r\n    dispatch(\r\n      setOnReplyInThread({\r\n        onReplyInThread: null,\r\n      })\r\n    );\r\n  };\r\n\r\n  const changeMode = () => {\r\n    dispatch(\r\n      setOnMainSave({\r\n        onMainSave: null,\r\n      })\r\n    );\r\n    gotoSavedItems();\r\n  };\r\n  useEffect(() => {\r\n    function handleClickOutside(event) {\r\n      if (ref.current && !ref.current.contains(event.target)) {\r\n        setPosition(null);\r\n      }\r\n    }\r\n\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      // Unbind the event listener on clean up\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  });\r\n  // Open emoji mart\r\n  const openEmojiMart = (position) => {\r\n    setPosition(position);\r\n    console.log(position);\r\n  };\r\n  const [savedMessages, setSavedMessages] = useState(null);\r\n\r\n  const getSavedMessages = () => {\r\n    let arr = savedItemsInfo?.docs.map(async (doc) => {\r\n      const messageId = doc.data().messageId;\r\n      const roomId = doc.data().roomId;\r\n      const roomDirectId = doc.data().roomDirectId;\r\n      const replyTo = doc.data().replyTo;\r\n      let messageRef = null;\r\n      if (replyTo) {\r\n        console.log(\"REPLY TO\");\r\n        if (roomId)\r\n          messageRef = db\r\n            .collection(\"room\")\r\n            .doc(roomId)\r\n            .collection(\"messages\")\r\n            .doc(replyTo)\r\n            .get();\r\n        else if (roomDirectId)\r\n          messageRef = db\r\n            .collection(\"directRooms\")\r\n            .doc(roomDirectId)\r\n            .collection(\"messages\")\r\n            .doc(replyTo)\r\n            .get();\r\n      } else if (roomId) {\r\n        messageRef = db\r\n          .collection(\"room\")\r\n          .doc(roomId)\r\n          .collection(\"messages\")\r\n          .doc(messageId)\r\n          .get();\r\n      } else if (roomDirectId && messageId) {\r\n        messageRef = db\r\n          .collection(\"directRooms\")\r\n          .doc(roomDirectId)\r\n          .collection(\"messages\")\r\n          .doc(messageId)\r\n          .get();\r\n      }\r\n\r\n      return messageRef;\r\n    });\r\n    return arr;\r\n  };\r\n  useEffect(async () => {\r\n    console.log(\"Toggle\");\r\n    let arr = getSavedMessages();\r\n    console.log(arr);\r\n    let newArr = [];\r\n    if (arr) {\r\n      newArr = Promise.all(arr);\r\n      newArr.then((values) => setSavedMessages(values));\r\n      console.log(savedMessages);\r\n    }\r\n  }, [savedItemsToggle, savedItemsInfo, roomMessages, directMessages]);\r\n\r\n  // useEffect(() => {\r\n  //   if (savedItemsInfo && !itemsLoading) {\r\n  //     getSavedMessages();\r\n  //     console.log(savedMessages)\r\n  //   }\r\n  // }, [isOpen]);\r\n\r\n  const addEmoji = (e) => {\r\n    let emoji = e.native;\r\n    setEmojiReact(emoji);\r\n    setReactToggle(!reactToggle);\r\n  };\r\n\r\n  // Move to message\r\n\r\n  const moveToMessage = (info, e) => {\r\n    const mainSaveItemInner = document.querySelector(\".main-save__item__inner\");\r\n    console.log(e.target)\r\n    if (e.target != mainSaveItemInner) return;\r\n    console.log(e.target)\r\n    if (info.savedMessageInfo) {\r\n      dispatch(\r\n        setOnMainSave({\r\n          onMainSave: null,\r\n        })\r\n      );\r\n      let infoRoomId = info.savedMessageInfo.roomId;\r\n      let infoRoomDirectId = info.savedMessageInfo.roomDirectId;\r\n      if (infoRoomId) {\r\n        let usersHaveRead = rooms?.docs\r\n          .find((doc) => doc.id === infoRoomId)\r\n          .data().usersHaveRead;\r\n        if (!usersHaveRead) usersHaveRead = [];\r\n        if (!usersHaveRead.includes(userInf.uid))\r\n          usersHaveRead.push(userInf.uid);\r\n        dispatch(\r\n          enterDirectMessage({\r\n            directMessageRoomId: null,\r\n            directMessageUid: null,\r\n          })\r\n        );\r\n        dispatch(\r\n          enterRoom({\r\n            roomId: infoRoomId,\r\n          })\r\n        );\r\n        db.collection(\"room\").doc(infoRoomId).update({\r\n          usersHaveRead: usersHaveRead,\r\n        });\r\n      } else if (infoRoomDirectId) {\r\n        console.log(\"DIrect\");\r\n        let usersHaveRead = directRooms?.docs\r\n          .find((doc) => doc.id === infoRoomDirectId)\r\n          .data().usersHaveRead;\r\n        if (!usersHaveRead) usersHaveRead = [];\r\n        if (!usersHaveRead.includes(userInf.uid))\r\n          usersHaveRead.push(userInf.uid);\r\n        dispatch(\r\n          enterRoom({\r\n            roomId: null,\r\n          })\r\n        );\r\n        dispatch(\r\n          enterDirectMessage({\r\n            directMessageRoomId: infoRoomDirectId,\r\n            directMessageUid: info.uid,\r\n          })\r\n        );\r\n        db.collection(\"directRooms\").doc(infoRoomDirectId).update({\r\n          usersHaveRead: usersHaveRead,\r\n        });\r\n      }\r\n\r\n      dispatch(setSavedItemId({ savedItemId: info.id }));\r\n    }\r\n  };\r\n  console.log(currentRoomId);\r\n  // Thread handle\r\n  const onReplyInThread = useSelector(selectOnReplyInThread);\r\n  const threadMessageId = useSelector(selectThreadMessageId);\r\n  const threadMessageRoomId = useSelector(selectThreadMessageRoomId);\r\n  const threadMessageDirectId = useSelector(selectThreadMessageDirectId);\r\n  const [threadMessage, threadLoading] = useDocument(\r\n    threadMessageId &&\r\n      (threadMessageRoomId\r\n        ? db\r\n            .collection(\"room\")\r\n            .doc(threadMessageRoomId)\r\n            .collection(\"messages\")\r\n            .doc(threadMessageId)\r\n        : threadMessageDirectId\r\n        ? db\r\n            .collection(\"directRooms\")\r\n            .doc(threadMessageDirectId)\r\n            .collection(\"messages\")\r\n            .doc(threadMessageId)\r\n        : undefined)\r\n  );\r\n\r\n  const [subMessages] = useCollection(\r\n    threadMessageId &&\r\n      (threadMessageRoomId\r\n        ? db\r\n            .collection(\"room\")\r\n            .doc(threadMessageRoomId)\r\n            .collection(\"messages\")\r\n            .doc(threadMessageId)\r\n            .collection(\"subMessages\")\r\n            .orderBy(\"timestamp\", \"asc\")\r\n        : threadMessageDirectId\r\n        ? db\r\n            .collection(\"directRooms\")\r\n            .doc(threadMessageDirectId)\r\n            .collection(\"messages\")\r\n            .doc(threadMessageId)\r\n            .collection(\"subMessages\")\r\n            .orderBy(\"timestamp\", \"asc\")\r\n        : undefined)\r\n  );\r\n  const openProfile = useSelector(selectOnOpenProfile);\r\n  const onSave = useSelector(selectOnSave);\r\n  const [replyRoom] = useDocument(\r\n    threadMessageId &&\r\n      (threadMessageRoomId\r\n        ? db.collection(\"room\").doc(threadMessageRoomId)\r\n        : threadMessageDirectId\r\n        ? db.collection(\"directRooms\").doc(threadMessageDirectId)\r\n        : undefined)\r\n  );\r\n  const threadName =\r\n    threadMessageId &&\r\n    (threadMessageRoomId\r\n      ? replyRoom?.data().name\r\n      : threadMessageDirectId\r\n      ? replyRoom?.data().users?.find((user) => {\r\n          if (users[0] === users[1]) return user.uid === userInf.uid;\r\n          else return userInf.uid !== user.uid;\r\n        })?.displayName\r\n      : undefined);\r\n  // Open main save page\r\n\r\n  const onMainSave = useSelector(selectOnMainSave);\r\n  //   responsive\r\n  const isSecondaryWorkspaceOpen = useSelector(selectSecondaryWorkspaceStatus);\r\n  const [collapse, setCollapse] = useState(true);\r\n  useEffect(() => {\r\n    console.log(\"On load\");\r\n    const chatContainer = document.querySelector(\".main-save-container\");\r\n    const sidebarContainer = document.querySelector(\".side-bar-container\");\r\n    const sidebarToggler = document.querySelector(\r\n      \".sidebar-toggle-button.c-button-unstyled\"\r\n    );\r\n\r\n    const secondaryWorkspace = document.querySelector(\r\n      \".secondary-view-container\"\r\n    );\r\n\r\n    const reportWindowSize = () => {\r\n      const windowWidth = window.innerWidth;\r\n      const chatWidth = chatContainer?.offsetWidth;\r\n      if (\r\n        chatWidth < 400 &&\r\n        !sidebarContainer?.classList.contains(\"sidebar-collapse\")\r\n      ) {\r\n        sidebarContainer?.classList.add(\"sidebar-collapse\");\r\n        setCollapse(false);\r\n        console.log(\"3\");\r\n\r\n        if (windowWidth < 706) {\r\n          sidebarContainer?.classList.add(\"sidebar-collapse\");\r\n          setCollapse(false);\r\n          chatContainer?.classList.remove(\"collapse\");\r\n          console.log(\"1\");\r\n          if (windowWidth <= 576 && isSecondaryWorkspaceOpen) {\r\n            chatContainer?.classList.add(\"collapse\");\r\n            secondaryWorkspace?.classList.add(\"fill\");\r\n            console.log(\"2\");\r\n          }\r\n          if (!isSecondaryWorkspaceOpen) {\r\n            chatContainer?.classList.remove(\"collapse\");\r\n            console.log(\"3\");\r\n          }\r\n        }\r\n      } else if (\r\n        chatWidth >= 600 &&\r\n        sidebarContainer?.classList.contains(\"sidebar-collapse\")\r\n      ) {\r\n        sidebarContainer?.classList.remove(\"sidebar-collapse\");\r\n        console.log(sidebarToggler);\r\n        setCollapse(true);\r\n        console.log(\"4\");\r\n      }\r\n\r\n      // Collapse handler\r\n      const sidebarCollapse = document.querySelector(\".sidebar-collapse\");\r\n      const closeSidebar = () => {\r\n        sidebarCollapse?.classList.remove(\"sidebar-float\");\r\n      };\r\n      chatContainer?.addEventListener(\"click\", closeSidebar);\r\n      secondaryWorkspace?.addEventListener(\"click\", closeSidebar);\r\n    };\r\n\r\n    reportWindowSize();\r\n    window.addEventListener(\"resize\", reportWindowSize);\r\n  });\r\n  const openSidebar = () => {\r\n    let sidebarContainer = document.querySelector(\".side-bar-container\");\r\n    sidebarContainer?.classList.add(\"sidebar-float\");\r\n  };\r\n  return (\r\n    <div className=\"main-save-container\">\r\n      <div className=\"main-save__header\">\r\n        <div className=\"main-save__header__text\">\r\n          <div className=\"main-save__header__title\">\r\n            <div\r\n              onClick={openSidebar}\r\n              className={\r\n                collapse\r\n                  ? \"sidebar-toggle-button c-button-unstyled chat__header__left__button collapse\"\r\n                  : \"sidebar-toggle-button c-button-unstyled chat__header__left__button \"\r\n              }\r\n            >\r\n              <span>\r\n                <DehazeIcon />\r\n              </span>\r\n            </div>\r\n            <span>Saved items</span>\r\n          </div>\r\n          <div\r\n            role=\"button\"\r\n            className=\"main-save__header__change-mode\"\r\n            onClick={changeMode}\r\n          >\r\n            <InputIcon />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"main-save__body\">\r\n        {itemsLoading ? (\r\n          <SmallLoader />\r\n        ) : (\r\n          <>\r\n            {savedMessages?.map((doc) => {\r\n              let savedMessageInfo = savedItemsInfo?.docs.find((docc) => {\r\n                if (docc.data().replyTo) return docc.data().replyTo === doc.id;\r\n                else return docc.data().messageId === doc.id;\r\n              });\r\n              let name = \"\";\r\n              let info = {};\r\n\r\n              if (savedMessageInfo?.data().roomId) {\r\n                name = rooms?.docs\r\n                  .find((doc) => doc.id === savedMessageInfo.data().roomId)\r\n                  .data().name;\r\n                info.savedMessageInfo = savedMessageInfo.data();\r\n              }\r\n              if (savedMessageInfo?.data().roomDirectId) {\r\n                name = \"Direct message\";\r\n                info.savedMessageInfo = savedMessageInfo.data();\r\n              }\r\n              if (savedMessageInfo?.data().replyTo) {\r\n                console.log(\"ALOOO \", name);\r\n              }\r\n\r\n              if (doc.data()) {\r\n                let infoRoomId = info.savedMessageInfo?.roomId;\r\n                let infoRoomDirectId = info.savedMessageInfo?.roomDirectId;\r\n                const {\r\n                  message,\r\n                  timestamp,\r\n                  user,\r\n                  userImage,\r\n                  uid,\r\n                  savedBy,\r\n                  reactions,\r\n                } = doc.data();\r\n                console.log(\"Alo\");\r\n                info.uid = uid;\r\n                info.id = doc.id;\r\n                return (\r\n                  <div className=\"main-save__item-container\" key={doc.id}>\r\n                    <div\r\n                      className=\"main-save__item__inner\"\r\n                      role=\"button\"\r\n                      onClick={(e) => moveToMessage(info, e)}\r\n                    >\r\n                      <div\r\n                        className=\"saved-message__header\"\r\n                        onClick={(e) => moveToMessage(info, e)}\r\n                      >\r\n                        {name}\r\n                      </div>\r\n                      <Message\r\n                        emojiMartPosition={position}\r\n                        onClick={openEmojiMart}\r\n                        key={doc.id}\r\n                        message={message}\r\n                        timestamp={timestamp}\r\n                        userName={user}\r\n                        userImage={userImage}\r\n                        uid={uid}\r\n                        savedBy={savedBy}\r\n                        emojiReact={emojiReact}\r\n                        reactToggle={reactToggle}\r\n                        label=\"\"\r\n                        id={doc.id}\r\n                        reactions={reactions}\r\n                        inMainSave={true}\r\n                        messageRoomId = {infoRoomId}\r\n                        messageRoomDirectId = {infoRoomDirectId}\r\n                        infor\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                );\r\n              }\r\n            })}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainSave;\r\n","import \"./css/main.css\";\r\nimport LogIn from \"./components/Login/Login\";\r\nimport \"./App.css\";\r\nimport \"./css/login.css\";\r\nimport Header from \"./components/Header/Header\";\r\nimport SideBar from \"./components/SideBar/SideBar\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"bootstrap/dist/js/bootstrap.bundle.min.js\";\r\nimport Chat from \"./components/Chat/Chat\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { auth, db } from \"./firebase\";\r\nimport { useCollection } from \"react-firebase-hooks/firestore\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Loading from \"./components/Loading\";\r\nimport EditProfile from \"./components/Edit Profile/EditProfile\";\r\nimport Reiszer from \"./components/Reiszer\";\r\nimport SecondaryView from \"./components/SecondaryView\";\r\nimport ProfileModal from \"./components/Chat/ProfileModal\";\r\nimport EditChat from \"./components/Edit Chat/EditChat\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  selectChosenUser,\r\n  selectDirectMessageRoom,\r\n  selectDirectUser,\r\n  selectOnMainSave,\r\n  selectRoomDetails,\r\n  selectRoomId,\r\n  selectUser,\r\n} from \"./features/appSlice\";\r\nimport CreateChannel from \"./components/Edit Chat/CreateChannel\";\r\nimport RemoveAlertModal from \"./components/Edit Chat/RemoveAlertModal\";\r\nimport $ from \"jquery\";\r\nimport InitAccount from \"./components/InitAccount/InitAccount\";\r\nimport MainSave from \"./components/MainSave/MainSave\";\r\nfunction App() {\r\n  const [user, userLoading] = useAuthState(auth);\r\n  // set status to Online\r\n  const [users, usersLoading] = useCollection(db.collection(\"users\"));\r\n  const userDb = users?.docs.find((elem) => elem.data().uid === user?.uid);\r\n  const [resize, setRisze] = useState(false);\r\n  const setStatusToOnline = () => {\r\n    db.collection(\"users\")?.doc(userDb?.id)?.update({\r\n      isOnline: true,\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    if (user && userDb) {\r\n      setStatusToOnline();\r\n    }\r\n  }, [user, userDb]);\r\n  // Dragbar Logic\r\n  const [sideBarWidth, setSideBarWidth] = useState(200);\r\n  const [profileWidth, setProfileWidth] = useState(300);\r\n  const handleResizeSideBar = (e) => {\r\n    let prevX = e.clientX;\r\n    window.addEventListener(\"mousemove\", mousemove);\r\n    window.addEventListener(\"mouseup\", mouseup);\r\n    function mousemove(e) {\r\n      let width = sideBarWidth + e.clientX - prevX;\r\n      setSideBarWidth(width < 200 ? 200 : width > 500 ? 500 : width);\r\n    }\r\n\r\n    function mouseup() {\r\n      window.removeEventListener(\"mousemove\", mousemove);\r\n      window.removeEventListener(\"mouseup\", mouseup);\r\n    }\r\n  };\r\n\r\n  const handleResizeChat = (e) => {\r\n    setRisze(true);\r\n    let prevX = e.clientX;\r\n    let browserWidth = document.body.offsetWidth;\r\n    window.addEventListener(\"mousemove\", mousemove);\r\n    window.addEventListener(\"mouseup\", mouseup);\r\n    function mousemove(e) {\r\n      let width = profileWidth - e.clientX + prevX;\r\n      setProfileWidth(width < 300 ? 300 : width > 600 ? 600 : width);\r\n    }\r\n\r\n    function mouseup() {\r\n      window.removeEventListener(\"mousemove\", mousemove);\r\n      window.removeEventListener(\"mouseup\", mouseup);\r\n      setRisze(false);\r\n    }\r\n  };\r\n  // End Dragbar\r\n\r\n  // Get room details\r\n  const roomDetails = useSelector(selectRoomDetails);\r\n  const roomId = useSelector(selectRoomId);\r\n  const roomDirectId = useSelector(selectDirectMessageRoom);\r\n  const id = roomId ? roomId : roomDirectId;\r\n  const directUser = useSelector(selectDirectUser);\r\n  const selectedUser = useSelector(selectChosenUser);\r\n\r\n  // Modal stack setting\r\n  const [toggle, setToggle] = useState(false);\r\n  const handleToggle = () => {\r\n    setToggle(!toggle);\r\n    console.log(\"Clicked\");\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   console.log(toggle);\r\n  //   console.log($(\".modal:visible\"));\r\n  //   $(document).on(\"shown.bs.modal\", \".modal\", function () {\r\n  //     console.log(\"Added!!!1\");\r\n  //     var zIndex = 1040 + 20 * $(\".modal:visible\").length;\r\n  //     $(this).css(\"z-index\", zIndex);\r\n  //     setTimeout(function () {\r\n  //       $(\".modal-backdrop\")\r\n  //         .not(\".modal-stack\")\r\n  //         .css(\"z-index\", zIndex - 1 + `!important`)\r\n  //         .addClass(\"modal-stack\");\r\n  //     }, 0);\r\n  //   });\r\n  // }, [toggle]);\r\n  // Get user info\r\n  const userInf = useSelector(selectUser);\r\n  const onMainSave = useSelector(selectOnMainSave);\r\n  const [isTabActive, setIsTabActive] = useState(true);\r\n  useEffect(() => {\r\n    document.addEventListener(\"visibilitychange\", () => {\r\n      setIsTabActive(!isTabActive);\r\n      console.log(isTabActive ? \"active\" : \"inactive\");\r\n    });\r\n    // test\r\n  }, []);\r\n  return (\r\n    <div className=\"App\" onresize>\r\n      {/* <LogIn/> */}\r\n\r\n      {userLoading ? (\r\n        <Loading />\r\n      ) : !user ? (\r\n        <LogIn />\r\n      ) : !(userInf?.displayName && userInf?.photoURL) ? (\r\n        <InitAccount />\r\n      ) : (\r\n        <>\r\n          <div className=\"App-inner\">\r\n            <CreateChannel />\r\n            <EditChat\r\n              id={id}\r\n              roomDetails={roomDetails}\r\n              directUser={directUser}\r\n              onClick={handleToggle}\r\n            />\r\n            <EditProfile />\r\n            <RemoveAlertModal uid={selectedUser?.uid} />\r\n            <ProfileModal />\r\n            <Header user={user} />\r\n\r\n            <div className=\"work-space-body\">\r\n              <SideBar width={sideBarWidth} />\r\n              <Reiszer onMouseDown={handleResizeSideBar} />\r\n              {onMainSave ? (\r\n                <MainSave />\r\n              ) : (\r\n                <Chat width={profileWidth} onClick={handleToggle} />\r\n              )}\r\n              <Reiszer onMouseDown={handleResizeChat} />\r\n              <SecondaryView width={profileWidth} resize={resize} />\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {configureStore} from \"@reduxjs/toolkit\"\r\nimport appReducer from \"../features/appSlice\"\r\nimport persistReducer from \"redux-persist/es/persistReducer\"\r\nimport storage from 'redux-persist/lib/storage'\r\nimport persistStore from \"redux-persist/es/persistStore\"\r\nimport autoMergeLevel1 from 'redux-persist/lib/stateReconciler/autoMergeLevel1'\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n    stateReconciler:  autoMergeLevel1,\r\n  }\r\nconst persistedAppReducer = persistReducer(persistConfig, appReducer);\r\n\r\nexport const app = configureStore({\r\n    reducer:{\r\n        app: persistedAppReducer\r\n    }\r\n})\r\nexport const persistor = persistStore(app)\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { app, persistor } from './app/store'\r\nimport { Provider } from 'react-redux';\r\nimport EditProfile from './components/Edit Profile/EditProfile';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport { auth } from './firebase';\r\n\r\n\r\nReactDOM.render(\r\n  \r\n  <React.StrictMode>\r\n    \r\n    <Provider store={app}>\r\n      <PersistGate loading=\"null\" persistor = {persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}